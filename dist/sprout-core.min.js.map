{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://jssprout/./src/core/consts.js","webpack://jssprout/./src/core/DOM_utils.js","webpack://jssprout/./src/core/paint_utils.js","webpack://jssprout/./src/core/node_actions.js","webpack://jssprout/./src/core/prop_utils.js","webpack://jssprout/./src/core/state_utils.js","webpack://jssprout/./src/core/commands.js","webpack://jssprout/./src/core/StatefulArray.js","webpack://jssprout/./src/core/proxy_handlers.js","webpack://jssprout/./src/core/StateManager.js","webpack://jssprout/./src/core/ReactiveElement.js","webpack://jssprout/./src/build/index.js","webpack://jssprout/./src/core/ReactiveSlot.js","webpack://jssprout/./src/core/index.js"],"sourcesContent":["export const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    // { class: HTMLSlotElement, element: \"slot\" } Has a different extended class for conditional rendering\n];\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map(),\n    // Maps events binding functions to (custom) elements\n    eventBindingFunctions: new Map(),\n    conditionalRenders: new Map(),\n    // Save requestAnimationFrame Id, to cancel if the rAF wasn't called yet on the same frame, so DOM operations will be batched to a single frame,\n    // preventing several rAFs running for the same frame\n    paintRafId: null,\n    // Similar as above but for event bindings\n    eventBindRafId: null,\n    // Same for conditional renders\n    conditionalRenderRafId: null,\n}\n","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}\n\n","import { doUpdateDOM } from \"./node_actions\";\nimport { NODES_STATE } from \"./consts\";\n\nlet { \n    paintRafId,\n    eventBindingFunctions, \n    eventBindRafId, \n    conditionalRenderRafId,\n    conditionalRenders\n} = NODES_STATE; \n\nexport function queueBindEvents(element, bindFunction) {\n    if (eventBindRafId) cancelAnimationFrame(eventBindRafId);\n    eventBindingFunctions.set(element, bindFunction);\n    eventBindRafId = requestAnimationFrame(()=> {\n        eventBindRafId = null;\n        eventBindingFunctions.forEach(bindFn=> bindFn());\n        eventBindingFunctions = new Map();\n    });\n}\nexport function queuePaint() {\n    if (paintRafId) cancelAnimationFrame(paintRafId);\n    paintRafId = requestAnimationFrame(()=> {\n        paintRafId = null;\n        doUpdateDOM();\n    })\n}\nexport function queueConditionalRender(element, renderFunction) {\n    if (conditionalRenderRafId) cancelAnimationFrame(conditionalRenderRafId);\n    conditionalRenders.set(element, renderFunction);\n    conditionalRenderRafId = requestAnimationFrame(()=> {\n        conditionalRenderRafId = null;\n        conditionalRenders.forEach(renderFn=> renderFn());\n        conditionalRenders = new Map();\n    })\n}","import { stateToElement } from \"./state_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { queueConditionalRender } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        get hasPendingActions() {\n            return (this.append.size || this.replace.size || this.after.size || this.remove.size);\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    const stateMaps = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMaps) {\n        const stateMapArray = value;\n\n        stateMaps.forEach(({ customElementName, parentElement})=> {\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    // Make sure we don't already have a pending append action for the same state object\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            queueConditionalRender(this, ()=> element.renderSlot(stateProp));\n        });\n    }\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    batchActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            batchActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                batchActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            nodeActions.remove.values().forEach((removes)=> {\n                removes.forEach((nodeToRemove)=> {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        batchActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                });\n            });\n            nodeActions.append.values().forEach((appends)=> {\n                appends.forEach((newChildElement)=> {\n                    batchActions.push(()=> node.appendChild(newChildElement));\n                });\n            });\n            \n        }\n    });\n    return batchActions;\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n    // requestAnimationFrame(doUpdateDOM);\n}","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { generateStateNodeActions } from './node_actions.js';\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { queuePaint } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\nconst { nodeActionsMap } = NODES_STATE;\n\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n    const state = stateManager.state;\n\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n\n    if (nodeActionsMap.size) {\n        queuePaint();\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n        \n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n   condition: function(commandValue) {\n        if (this.tagName !== \"SLOT\") {\n            throw Error(\"condition command can only be used on a slot element!\");\n        }\n\n        const statePropName = commandValue;\n        const [stateValue, stateObject] = this.getState(statePropName, true);\n        if (typeof stateValue === \"undefined\") {\n            throw Error(`State property ${statePropName} not defined for _condition command!`);\n        }\n        this.slotChildren = [...this.children];\n        this.host.append(...this.slotChildren);\n        this.innerHTML = \"\";\n        this.renderSlot(statePropName);\n        stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n   }  \n}","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    return {\n        set(targetArray, property, value) {\n            // Return if the value is the same\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                handleStateChange(parentStateManager, arrayStateProp);\n                return setResult;\n            }\n\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        handleStateChange(parentStateManager, arrayStateProp);\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            if (typeof property === 'symbol') return Reflect.get(...arguments);\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                handleStateChange(stateManager, stateProp);\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = [];\n        }\n\n        this.stateArrayMaps[stateProp].push({\n            customElementName,\n            parentElement\n        });\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    \n\n    setAndBindStateProperty(stateProp, isBooleanStateProp=false) {\n        let stateObj = this.state;\n        if (stateProp.indexOf('!') === 0) {\n            const originalStateProp = stateProp.substring(1);\n            let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                stateObj = stateObj._global;\n                descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n                if (!descriptor) {\n                    throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n                }\n            }\n            // Negate prop: (!something) - add a dependency between the negate prop to the original prop,\n            // So anytime the original prop change, things that are dependant on the negate prop will react\n            // return stateObj._stateManager.addStateDependency(originalStateProp, stateProp);\n            return;\n        }\n\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop not defined!`);\n            }\n        }\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isValueProp) {\n            if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                stateManager.privateState[stateProp] = stateObj[stateProp];\n            }\n            stateObj._binding = true;\n            Object.defineProperty(stateObj, stateProp, {\n                set(value) {\n                    const currentVal = stateManager.privateState[stateProp];\n                    if (value === currentVal) return;\n                    // Sets value to \"private state\"\n                    stateManager.privateState[stateProp] = value;\n\n                    handleStateChange(stateManager, stateProp);\n                    // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                    if (stateManager.parentStateManager) {\n                        handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                    }\n                },\n                get() {\n                    // Value is always retrieved from the \"private\" state\n                    return stateManager.privateState[stateProp];\n                }\n            });\n        }\n\n        // Boolean state props will also have \"negate props\" available (![stateProp])\n        if (isBooleanStateProp && stateProp.indexOf('!') !== 0) {\n            const negateStateProp = `!${stateProp}`;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n        }\n\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { queueBindEvents } from \"./paint_utils.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window, noRender = false) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n        // Callback function for when the element is connected to a DOM tree on the page\n        #onMount\n        #wasMounted = false\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        #events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n\n        // Main event handler function \n        #eventHandler\n        // Special case to handle input change events (to make them bubble up from shadow DOM)\n        #changeEventHandler\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            this.isReactiveElement = true;\n            this.isNativeElement = this.hasAttribute(\"is\");\n            if (!this.isNativeElement) {\n                if (runtimeScript) {\n                    const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                    const runtime = dynamicRuntimeFn();\n                    this.#setRuntime(runtime);\n                }\n                // Should already be a DocumentFragment of the template\n                if (template) { \n                    this.#templateContent = template.cloneNode(true);\n                }\n                else {\n                    this.#templateContent = DEFAULT_TEMPLATE_DOM.cloneNode();\n                }\n\n                if (style) {\n                    const stylesheet = new CSSStyleSheet();\n                    stylesheet.replaceSync(style);\n                    this.#stylesheet = stylesheet;\n                }\n                if (globalStylesheet) {\n                    this.#globalStylesheet = globalStylesheet;\n                }\n                // Maps \"ref names\" to actual elements in the component DOM tree,\n                // for fast access.\n                this.ref = {};\n            }\n\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.#events = runtime.events;\n                if (this.isConnected) {\n                    queueBindEvents(this, ()=> this.#bindEvents());\n                }\n            }\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\", slotAssignment: \"manual\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.#events) return;\n            const eventRefNames = Object.keys(this.#events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.#events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event, eventsObject) {\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in eventsObject));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in eventsObject)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    eventsObject[ref]?.call(target, event, event.target, globalState);\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', (event)=> {\n                    this.#eventHandler(event, clickActions);\n                }, false);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames) {\n                thiselement.addEventListener(eventName, (event)=> {\n                    this.#eventHandler(event, otherActions[eventName]);\n                }, false);\n            }\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        disconnectedCallback() {\n            const host = this.host ?? this;\n            if (host.ref) {\n                const thisRefName = this.getAttribute('ref');\n                if (thisRefName) delete host.ref[thisRefName];\n            }\n            this.#boundAttributesToState = {};\n            this.#unbindEvents();\n        }\n\n        connectedCallback() {\n            if (this.#wasMounted) return;\n\n            if (!this.isNativeElement) {\n                this.#setActiveStateFromInitialState();\n            }\n\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            this.host = this.getRootNode().host;\n\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            if (!this.isNativeElement && !noRender) {\n                this.#renderTemplate();\n            }\n\n            const commands = [];\n            for (const attrName of this.getAttributeNames()) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                    // COMMAND_ATTRIBUTES[command]?.call(this, attrValue);\n                }\n            } \n\n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n            if (!this.isNativeElement) {\n                queueBindEvents(this, ()=> this.#bindEvents());\n                if (this.#onMount) queueMicrotask(()=> this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]()));\n            }\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n    \n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.isNativeElement ? this.host : this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n        //static get observedAttributes() { return [\"todo-name\"]; }\n    }\n\n    // The \"initialSetX\" functions are called:\n    // 1. When a custom element instance is first created (before it's connected) - \n    // state attribute values are set to their state prop names (e.g: '$name').\n    // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n    // value of their respective state prop values, and binding between them occurs.\n    ReactiveElement.prototype.initialSetText = function (stateProp) {\n        setStateText.call(this, stateProp);\n    }\n    ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n        attributeValue = String(attributeValue);\n        let valueToSet = attributeValue;\n        // \"State attribute\"\n        if (attributeValue.indexOf('$') === 0 && attributeName.indexOf('_') !== 0 && this.isConnected)  {\n            let stateProp = attributeValue.substring(1);\n            setStateAttribute.call(this, attributeName, stateProp);\n        }\n        // normal attribute\n        else {\n            setAttribute.call(this, attributeName, valueToSet);\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","export function getReactiveSlotClass(ReactiveElementClass) {\n    class ReactiveSlot extends ReactiveElementClass {\n        renderSlot(statePropName) {\n            if (this.tagName !== \"SLOT\") return;\n\n            const stateValue= this.getState(statePropName);\n            if (typeof stateValue === \"undefined\") {\n                throw Error(`State property ${statePropName} not defined for conditional slot rendering!`);\n            }\n    \n            const children = this?.slotChildren;\n            if (children) {\n                const nodesToAssign = [];\n                children.forEach(slotChildElement=> {\n                    const _if = slotChildElement.getAttribute('_if');\n                    if (_if) {\n                        const expectedValue = Boolean(_if === \"true\");\n                        if (stateValue == expectedValue) {\n                            nodesToAssign.push(slotChildElement)\n                        }\n                    }\n                });\n                if (nodesToAssign.length) {\n                    this.assign(...nodesToAssign);\n                }\n            }\n        }\n\n    }\n\n    return ReactiveSlot;\n}","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { doUpdateDOM } from \"./node_actions.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getReactiveSlotClass } from \"./ReactiveSlot.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\n\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new StateManager(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    appScope.ReactiveElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => \n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            { extends: itemDefinition.element })\n        \n    );\n\n    const ReactiveSlotElementClass = extendElementClassWithReactiveElementClass(HTMLSlotElement, appScope, true);\n    const ReactiveSlotClass = getReactiveSlotClass(ReactiveSlotElementClass);\n    customElements.define('reactive-slot', ReactiveSlotClass, { extends: \"slot\" } );\n    \n    return function() {\n        SproutBuild(appScope, appName);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","NODES_STATE","nodeActionsMap","Map","eventBindingFunctions","conditionalRenders","paintRafId","eventBindRafId","conditionalRenderRafId","isElementAList","tagName","queueBindEvents","bindFunction","cancelAnimationFrame","set","requestAnimationFrame","forEach","bindFn","queuePaint","size","DOMActions","batchActions","nodeActions","node","hasOwnProperty","value","setAttribute","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","replace","newNode","oldNode","replaceChild","remove","values","removes","nodeToRemove","parentNode","removeChild","append","appends","newChildElement","appendChild","resolveNodeActionsMapToDOMActions","DOMAction","doUpdateDOM","setStateNodeAction","nodeActionsObject","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeToAppend","stateIdentifier","has","Set","get","add","getNewNodeActionsObject","after","hasPendingActions","this","generateStateNodeActions","stateManager","_this","state","stateNodes","stateMaps","stateArrayMaps","conditionallyRenderingElements","stateMapArray","_ref","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","renderFunction","renderFn","queueConditionalRender","renderSlot","setHiddenProperty","obj","propName","propValue","enumerable","arguments","Object","defineProperty","configurable","writable","HTMLElement","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","condition","_this$host","stateValue","slotChildren","host","addConditionallyRenderingElements","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","appScope","window","_classCallCheck","statefulArray","rawArray","item","index","StateManager","_defineProperty","_possibleConstructorReturn","Proxy","StatefulArrayHandler","_inherits","key","_get2","$$operation","_len","args","_key","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","_wrapNativeSuper","parentStateManager","targetArray","property","setResult","Reflect","Number","isNaN","doStateChangeHandle","receiver","initialState","parentStateProp","isGlobal","stateObj","targetState","descriptor","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$","depProp","dep","definePropertyResult","addGlobalStateDependency","originalProperty","StateHandler","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","_element$host","originalParentElement","shadowRoot","stateNode","isBooleanStateProp","setAndBindStateProperty","getOwnPropertyDescriptor","isValueProp","privateState","negateStateProp","extendElementClassWithReactiveElementClass","elementClass","noRender","_onMount","WeakMap","_wasMounted","_boundAttributesToState","_templateContent","_stylesheet","_globalStylesheet","_events","_boundEventNames","_eventHandler","_changeEventHandler","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","template","runtimeScript","style","globalStylesheet","_callSuper","_classPrivateFieldInitSpec","isReactiveElement","isNativeElement","runtime","Function","dynamicRuntimeFn","_assertClassBrand","_setRuntime","_classPrivateFieldSet","cloneNode","stylesheet","CSSStyleSheet","replaceSync","ref","initState","assign","_classPrivateFieldGet","propertyName","newValue","thisRefName","_unbindEvents","_this2","_setActiveStateFromInitialState","getRootNode","changeEvent","Event","bubbles","composed","dispatchEvent","_renderTemplate","_step","commands","_iterator","_createForOfIteratorHelper","getAttributeNames","s","n","done","initialSetAttribute","command","err","e","f","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","_bindEvents","queueMicrotask","oldValue","isConnected","refValue","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","refName","root","SPROUT_CONFIG","useShadow","querySelector","_this3","events","onMount","attachShadow","mode","slotAssignment","adoptedStyleSheets","fragment","DocumentFragment","_this4","removeEventListener","thiselement","eventName","_classPrivateFieldGet2","_this5","eventRefNames","keys","clickActions","otherActions","event","eventsObject","elementsPath","composedPath","find","_eventsObject$ref","eventNames","_loop","_eventNames2","_i","toLowerCase","attributeValue","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","Boolean","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineElementFromTemplate","_callee","templateContent","_context","importNode","content","customElements","_appScope$ReactiveEle","_class","_next","_throw","globalStyle","querySelectorAll","_x","_x2","_x3","defineElementFromTemplate","getReactiveSlotClass","ReactiveElementClass","ReactiveSlot","_ReactiveElementClass","nodesToAssign","slotChildElement","_if","expectedValue","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","itemDefinition","extends","ReactiveSlotClass","HTMLSlotElement","SproutBuild"],"sourceRoot":""}
{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://sproutjs/./src/core/consts.js","webpack://sproutjs/./src/core/DOM_utils.js","webpack://sproutjs/./src/core/node_actions.js","webpack://sproutjs/./src/core/prop_utils.js","webpack://sproutjs/./src/core/state_utils.js","webpack://sproutjs/./src/core/commands.js","webpack://sproutjs/./src/core/StatefulArray.js","webpack://sproutjs/./src/core/proxy_handlers.js","webpack://sproutjs/./src/core/StateManager.js","webpack://sproutjs/./src/core/ReactiveElement.js","webpack://sproutjs/./src/build/index.js","webpack://sproutjs/./src/core/ReactiveSlot.js","webpack://sproutjs/./src/core/index.js"],"sourcesContent":["export const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    // { class: HTMLSlotElement, element: \"slot\" } Has a different extended class for conditional rendering\n];\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}","import { stateToElement } from \"./state_utils\";\nimport { isElementAList } from \"./DOM_utils\";\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map()\n}\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        get hasPendingActions() {\n            return (this.append.size || this.replace.size || this.after.size || this.remove.size);\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    const stateMaps = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMaps) {\n        const stateMapArray = value;\n\n        stateMaps.forEach(({ customElementName, parentElement})=> {\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    // Make sure we don't already have a pending append action for the same state object\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            requestAnimationFrame(()=> element.renderSlot(stateProp));\n        });\n    }\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    batchActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            batchActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                batchActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            nodeActions.remove.values().forEach((removes)=> {\n                removes.forEach((nodeToRemove)=> {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        batchActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                });\n            });\n            nodeActions.append.values().forEach((appends)=> {\n                appends.forEach((newChildElement)=> {\n                    batchActions.push(()=> node.appendChild(newChildElement));\n                });\n            });\n            \n        }\n    });\n    return batchActions;\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs periodically on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n    // requestAnimationFrame(doUpdateDOM);\n}","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { doUpdateDOM, generateStateNodeActions } from './node_actions.js';\nimport { NODES_STATE } from \"./node_actions.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n    const state = stateManager.state;\n\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n\n    const { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        requestAnimationFrame(doUpdateDOM);\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n        \n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n   condition: function(commandValue) {\n        if (this.tagName !== \"SLOT\") {\n            throw Error(\"condition command can only be used on a slot element!\");\n        }\n\n        const statePropName = commandValue;\n        const [stateValue, stateObject] = this.getState(statePropName, true);\n        if (typeof stateValue === \"undefined\") {\n            throw Error(`State property ${statePropName} not defined for _condition command!`);\n        }\n        this.slotChildren = [...this.children];\n        this.slotChildren.forEach(childSlotElement=> \n            childSlotElement.setAttribute('_condition', statePropName));\n        this.host.append(...this.slotChildren);\n        this.innerHTML = \"\";\n        this.renderSlot(statePropName);\n        stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n   }  \n}","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    return {\n        set(targetArray, property, value) {\n            // Return if the value is the same\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                handleStateChange(parentStateManager, arrayStateProp);\n                return setResult;\n            }\n\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        handleStateChange(parentStateManager, arrayStateProp);\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            if (typeof property === 'symbol') return Reflect.get(...arguments);\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                handleStateChange(stateManager, stateProp);\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = [];\n        }\n\n        this.stateArrayMaps[stateProp].push({\n            customElementName,\n            parentElement\n        });\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    \n\n    setAndBindStateProperty(stateProp, isBooleanStateProp=false) {\n        let stateObj = this.state;\n        if (stateProp.indexOf('!') === 0) {\n            const originalStateProp = stateProp.substring(1);\n            let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                stateObj = stateObj._global;\n                descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n                if (!descriptor) {\n                    throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n                }\n            }\n            // Negate prop: (!something) - add a dependency between the negate prop to the original prop,\n            // So anytime the original prop change, things that are dependant on the negate prop will react\n            // return stateObj._stateManager.addStateDependency(originalStateProp, stateProp);\n            return;\n        }\n\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop not defined!`);\n            }\n        }\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isValueProp) {\n            if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                stateManager.privateState[stateProp] = stateObj[stateProp];\n            }\n            stateObj._binding = true;\n            Object.defineProperty(stateObj, stateProp, {\n                set(value) {\n                    const currentVal = stateManager.privateState[stateProp];\n                    if (value === currentVal) return;\n                    // Sets value to \"private state\"\n                    stateManager.privateState[stateProp] = value;\n\n                    handleStateChange(stateManager, stateProp);\n                    // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                    if (stateManager.parentStateManager) {\n                        handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                    }\n                },\n                get() {\n                    // Value is always retrieved from the \"private\" state\n                    return stateManager.privateState[stateProp];\n                }\n            });\n        }\n\n        // Boolean state props will also have \"negate props\" available (![stateProp])\n        if (isBooleanStateProp && stateProp.indexOf('!') !== 0) {\n            const negateStateProp = `!${stateProp}`;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n        }\n\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window, noRender = false) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n        // Callback function for when the element is connected to a DOM tree on the page\n        #onMount\n        #wasMounted = false\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        #events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n\n        // Main event handler function \n        #eventHandler\n        // Special case to handle input change events (to make them bubble up from shadow DOM)\n        #changeEventHandler\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            this.isReactiveElement = true;\n            this.isNativeElement = this.hasAttribute(\"is\");\n\n            if (!this.isNativeElement) {\n                if (runtimeScript) {\n                    const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                    const runtime = dynamicRuntimeFn();\n                    this.#setRuntime(runtime);\n                }\n                // Should already be a DocumentFragment of the template\n                if (template) { \n                    this.#templateContent = template.cloneNode(true);\n                }\n                else {\n                    this.#templateContent = DEFAULT_TEMPLATE_DOM.cloneNode();\n                }\n\n                if (style) {\n                    const stylesheet = new CSSStyleSheet();\n                    stylesheet.replaceSync(style);\n                    this.#stylesheet = stylesheet;\n                }\n                if (globalStylesheet) {\n                    this.#globalStylesheet = globalStylesheet;\n                }\n                // Maps \"ref names\" to actual elements in the component DOM tree,\n                // for fast access.\n                this.ref = {};\n            }\n\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.#events = runtime.events;\n                if (this.isConnected) requestAnimationFrame(()=> this.#bindEvents());\n            }\n\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\", slotAssignment: \"manual\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.#events) return;\n            const eventRefNames = Object.keys(this.#events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.#events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event, eventsObject) {\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in eventsObject));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in eventsObject)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    eventsObject[ref]?.call(target, event, event.target, globalState);\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', (event)=> {\n                    this.#eventHandler(event, clickActions);\n                }, false);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames) {\n                thiselement.addEventListener(eventName, (event)=> {\n                    this.#eventHandler(event, otherActions[eventName]);\n                }, false);\n            }\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        disconnectedCallback() {\n            const host = this.host ?? this;\n            const refEntries = Object.entries(host.ref);\n            // Delete this element from ref object of host\n            for (let i = 0, len = refEntries.length; i < len; i++ ) {\n                const [refName, refElem] = refEntries[i];\n                if (refElem === this) {\n                    delete (host.ref[refName]);\n                    break;\n                }\n            }\n\n            this.#boundAttributesToState = {};\n            this.#unbindEvents();\n        }\n\n        connectedCallback() {\n            if (this.#wasMounted) return;\n\n            if (!this.isNativeElement) {\n                this.#setActiveStateFromInitialState();\n            }\n\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            this.host = this.getRootNode().host;\n\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            if (!this.isNativeElement) {\n                if (!noRender) {\n                    this.#renderTemplate();\n                }\n                requestAnimationFrame(()=> this.#bindEvents());\n                if (this.#onMount) this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]());\n            }\n\n            const commands = [];\n            for (const attrName of this.getAttributeNames()) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                    // COMMAND_ATTRIBUTES[command]?.call(this, attrValue);\n                }\n            } \n\n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n    \n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.isNativeElement ? this.host : this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n        //static get observedAttributes() { return [\"todo-name\"]; }\n    }\n\n    // The \"initialSetX\" functions are called:\n    // 1. When a custom element instance is first created (before it's connected) - \n    // state attribute values are set to their state prop names (e.g: '$name').\n    // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n    // value of their respective state prop values, and binding between them occurs.\n    ReactiveElement.prototype.initialSetText = function (stateProp) {\n        setStateText.call(this, stateProp);\n    }\n    ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n        attributeValue = String(attributeValue);\n        let valueToSet = attributeValue;\n        // \"State attribute\"\n        if (attributeValue.indexOf('$') === 0 && attributeName.indexOf('_') !== 0 && this.isConnected)  {\n            let stateProp = attributeValue.substring(1);\n            setStateAttribute.call(this, attributeName, stateProp);\n        }\n        // normal attribute\n        else {\n            setAttribute.call(this, attributeName, valueToSet);\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","export function getReactiveSlotClass(ReactiveElementClass) {\n    class ReactiveSlot extends ReactiveElementClass {\n        renderSlot(statePropName) {\n            if (this.tagName !== \"SLOT\") return;\n\n            const stateValue= this.getState(statePropName);\n            if (typeof stateValue === \"undefined\") {\n                throw Error(`State property ${statePropName} not defined for conditional slot rendering!`);\n            }\n    \n            const children = this?.slotChildren;\n            if (children) {\n                const nodesToAssign = [];\n                children.forEach(slotChildElement=> {\n                    const _if = slotChildElement.getAttribute('_if');\n                    if (_if) {\n                        const expectedValue = Boolean(_if === \"true\");\n                        if (stateValue == expectedValue) {\n                            nodesToAssign.push(slotChildElement)\n                        }\n                    }\n                });\n                if (nodesToAssign.length) {\n                    this.assign(...nodesToAssign);\n                }\n            }\n        }\n\n    }\n\n    return ReactiveSlot;\n}","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { doUpdateDOM } from \"./node_actions.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getReactiveSlotClass } from \"./ReactiveSlot.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\n\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new StateManager(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    appScope.ReactiveElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => \n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            { extends: itemDefinition.element })\n        \n    );\n\n    const ReactiveSlotElementClass = extendElementClassWithReactiveElementClass(HTMLSlotElement, appScope, true);\n    const ReactiveSlotClass = getReactiveSlotClass(ReactiveSlotElementClass);\n    customElements.define('reactive-slot', ReactiveSlotClass, { extends: \"slot\" } );\n    \n    return function() {\n        SproutBuild(appScope, appName);\n        // Changed to trigger only if there are pending changes\n        // requestAnimationFrame(doUpdateDOM);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","isElementAList","tagName","NODES_STATE","nodeActionsMap","Map","setStateNodeAction","node","nodeActionsObject","value","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeActions","nodeToAppend","stateIdentifier","append","has","set","Set","get","add","getNewNodeActionsObject","replace","after","remove","hasPendingActions","this","size","generateStateNodeActions","stateManager","state","stateNodes","stateMaps","stateArrayMaps","conditionallyRenderingElements","forEach","stateMapArray","_ref","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","hasOwnProperty","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","requestAnimationFrame","renderSlot","doUpdateDOM","batchActions","setAttribute","console","error","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","newNode","oldNode","replaceChild","values","removes","nodeToRemove","parentNode","removeChild","appends","newChildElement","appendChild","DOMAction","setHiddenProperty","obj","propName","propValue","enumerable","arguments","Object","defineProperty","configurable","writable","HTMLElement","warn","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_this","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","condition","_this$host","stateValue","slotChildren","childSlotElement","host","addConditionallyRenderingElements","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","appScope","window","_classCallCheck","statefulArray","rawArray","item","index","StateManager","_defineProperty","_possibleConstructorReturn","Proxy","StatefulArrayHandler","_inherits","key","_get2","$$operation","_len","args","_key","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","_wrapNativeSuper","parentStateManager","targetArray","property","setResult","Reflect","Number","isNaN","doStateChangeHandle","receiver","initialState","parentStateProp","isGlobal","stateObj","targetState","descriptor","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$","depProp","dep","definePropertyResult","addGlobalStateDependency","originalProperty","StateHandler","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","_element$host","originalParentElement","shadowRoot","stateNode","isBooleanStateProp","setAndBindStateProperty","getOwnPropertyDescriptor","isValueProp","privateState","negateStateProp","extendElementClassWithReactiveElementClass","elementClass","noRender","_onMount","WeakMap","_wasMounted","_boundAttributesToState","_templateContent","_stylesheet","_globalStylesheet","_events","_boundEventNames","_eventHandler","_changeEventHandler","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","template","runtimeScript","style","globalStylesheet","_callSuper","_classPrivateFieldInitSpec","isReactiveElement","isNativeElement","runtime","Function","dynamicRuntimeFn","_assertClassBrand","_setRuntime","_classPrivateFieldSet","cloneNode","stylesheet","CSSStyleSheet","replaceSync","ref","initState","assign","_classPrivateFieldGet","propertyName","newValue","refEntries","entries","_refEntries$i","refName","_unbindEvents","_this2","_setActiveStateFromInitialState","getRootNode","changeEvent","Event","bubbles","composed","dispatchEvent","_renderTemplate","_bindEvents","_step","commands","_iterator","_createForOfIteratorHelper","getAttributeNames","s","n","done","initialSetAttribute","command","err","e","f","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","oldValue","isConnected","refValue","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","root","SPROUT_CONFIG","useShadow","querySelector","_this3","events","onMount","attachShadow","mode","slotAssignment","adoptedStyleSheets","fragment","DocumentFragment","_this4","removeEventListener","thiselement","eventName","_classPrivateFieldGet2","_this5","eventRefNames","keys","clickActions","otherActions","event","eventsObject","elementsPath","composedPath","find","_eventsObject$ref","eventNames","_loop","_eventNames2","_i","toLowerCase","attributeValue","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","Boolean","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineElementFromTemplate","_callee","templateContent","_context","importNode","content","customElements","_appScope$ReactiveEle","_class","_next","_throw","globalStyle","querySelectorAll","_x","_x2","_x3","defineElementFromTemplate","getReactiveSlotClass","ReactiveElementClass","ReactiveSlot","_ReactiveElementClass","nodesToAssign","slotChildElement","_if","expectedValue","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","itemDefinition","extends","ReactiveSlotClass","HTMLSlotElement","SproutBuild"],"sourceRoot":""}
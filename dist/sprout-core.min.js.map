{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://sproutjs/./src/core/consts.js","webpack://sproutjs/./src/core/DOM_utils.js","webpack://sproutjs/./src/core/paint_utils.js","webpack://sproutjs/./src/core/node_actions.js","webpack://sproutjs/./src/core/prop_utils.js","webpack://sproutjs/./src/core/state_utils.js","webpack://sproutjs/./src/core/commands.js","webpack://sproutjs/./src/core/StatefulArray.js","webpack://sproutjs/./src/core/proxy_handlers.js","webpack://sproutjs/./src/core/StateManager.js","webpack://sproutjs/./src/core/ReactiveElement.js","webpack://sproutjs/./src/build/index.js","webpack://sproutjs/./src/core/ReactiveSlot.js","webpack://sproutjs/./src/core/index.js"],"sourcesContent":["export const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    // { class: HTMLSlotElement, element: \"slot\" } Has a different extended class for conditional rendering\n];\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map(),\n    // Maps events binding functions to (custom) elements\n    eventBindingFunctions: new Map(),\n    conditionalRenders: new Map(),\n    // Save requestAnimationFrame Id, to cancel if the rAF wasn't called yet on the same frame, so DOM operations will be batched to a single frame,\n    // preventing several rAFs running for the same frame\n    paintRafId: null,\n    // Similar as above but for event bindings\n    eventBindRafId: null,\n    // Same for conditional renders\n    conditionalRenderRafId: null,\n}\n","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}\n\n","import { doUpdateDOM } from \"./node_actions\";\nimport { NODES_STATE } from \"./consts\";\n\nlet { \n    paintRafId,\n    eventBindingFunctions, \n    eventBindRafId, \n    conditionalRenderRafId,\n    conditionalRenders\n} = NODES_STATE; \n\nexport function queueBindEvents(element, bindFunction) {\n    if (eventBindRafId) cancelAnimationFrame(eventBindRafId);\n    eventBindingFunctions.set(element, bindFunction);\n    eventBindRafId = requestAnimationFrame(()=> {\n        eventBindRafId = null;\n        eventBindingFunctions.forEach(bindFn=> bindFn());\n        eventBindingFunctions = new Map();\n    });\n}\nexport function queuePaint() {\n    if (paintRafId) cancelAnimationFrame(paintRafId);\n    paintRafId = requestAnimationFrame(()=> {\n        paintRafId = null;\n        doUpdateDOM();\n    })\n}\nexport function queueConditionalRender(element, renderFunction) {\n    if (conditionalRenderRafId) cancelAnimationFrame(conditionalRenderRafId);\n    conditionalRenderRafId = requestAnimationFrame(()=> {\n        conditionalRenderRafId = null;\n        conditionalRenders.forEach(renderFn=> renderFn());\n        conditionalRenders = new Map();\n    })\n}","import { stateToElement } from \"./state_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { queueConditionalRender } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        get hasPendingActions() {\n            return (this.append.size || this.replace.size || this.after.size || this.remove.size);\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    const stateMaps = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMaps) {\n        const stateMapArray = value;\n\n        stateMaps.forEach(({ customElementName, parentElement})=> {\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    // Make sure we don't already have a pending append action for the same state object\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            queueConditionalRender(this, ()=> element.renderSlot(stateProp));\n        });\n    }\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    batchActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            batchActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                batchActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            nodeActions.remove.values().forEach((removes)=> {\n                removes.forEach((nodeToRemove)=> {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        batchActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                });\n            });\n            nodeActions.append.values().forEach((appends)=> {\n                appends.forEach((newChildElement)=> {\n                    batchActions.push(()=> node.appendChild(newChildElement));\n                });\n            });\n            \n        }\n    });\n    return batchActions;\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n    // requestAnimationFrame(doUpdateDOM);\n}","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { generateStateNodeActions } from './node_actions.js';\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { queuePaint } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\nconst { nodeActionsMap } = NODES_STATE;\n\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n    const state = stateManager.state;\n\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n\n    if (nodeActionsMap.size) {\n        queuePaint();\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n        \n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n   condition: function(commandValue) {\n        if (this.tagName !== \"SLOT\") {\n            throw Error(\"condition command can only be used on a slot element!\");\n        }\n\n        const statePropName = commandValue;\n        const [stateValue, stateObject] = this.getState(statePropName, true);\n        if (typeof stateValue === \"undefined\") {\n            throw Error(`State property ${statePropName} not defined for _condition command!`);\n        }\n        this.slotChildren = [...this.children];\n        this.slotChildren.forEach(childSlotElement=> \n            childSlotElement.setAttribute('_condition', statePropName));\n        this.host.append(...this.slotChildren);\n        this.innerHTML = \"\";\n        this.renderSlot(statePropName);\n        stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n   }  \n}","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    return {\n        set(targetArray, property, value) {\n            // Return if the value is the same\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                handleStateChange(parentStateManager, arrayStateProp);\n                return setResult;\n            }\n\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        handleStateChange(parentStateManager, arrayStateProp);\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            if (typeof property === 'symbol') return Reflect.get(...arguments);\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                handleStateChange(stateManager, stateProp);\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = [];\n        }\n\n        this.stateArrayMaps[stateProp].push({\n            customElementName,\n            parentElement\n        });\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    \n\n    setAndBindStateProperty(stateProp, isBooleanStateProp=false) {\n        let stateObj = this.state;\n        if (stateProp.indexOf('!') === 0) {\n            const originalStateProp = stateProp.substring(1);\n            let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                stateObj = stateObj._global;\n                descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n                if (!descriptor) {\n                    throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n                }\n            }\n            // Negate prop: (!something) - add a dependency between the negate prop to the original prop,\n            // So anytime the original prop change, things that are dependant on the negate prop will react\n            // return stateObj._stateManager.addStateDependency(originalStateProp, stateProp);\n            return;\n        }\n\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop not defined!`);\n            }\n        }\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isValueProp) {\n            if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                stateManager.privateState[stateProp] = stateObj[stateProp];\n            }\n            stateObj._binding = true;\n            Object.defineProperty(stateObj, stateProp, {\n                set(value) {\n                    const currentVal = stateManager.privateState[stateProp];\n                    if (value === currentVal) return;\n                    // Sets value to \"private state\"\n                    stateManager.privateState[stateProp] = value;\n\n                    handleStateChange(stateManager, stateProp);\n                    // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                    if (stateManager.parentStateManager) {\n                        handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                    }\n                },\n                get() {\n                    // Value is always retrieved from the \"private\" state\n                    return stateManager.privateState[stateProp];\n                }\n            });\n        }\n\n        // Boolean state props will also have \"negate props\" available (![stateProp])\n        if (isBooleanStateProp && stateProp.indexOf('!') !== 0) {\n            const negateStateProp = `!${stateProp}`;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n        }\n\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { queueBindEvents } from \"./paint_utils.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window, noRender = false) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n        // Callback function for when the element is connected to a DOM tree on the page\n        #onMount\n        #wasMounted = false\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        #events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n\n        // Main event handler function \n        #eventHandler\n        // Special case to handle input change events (to make them bubble up from shadow DOM)\n        #changeEventHandler\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            this.isReactiveElement = true;\n            this.isNativeElement = this.hasAttribute(\"is\");\n\n            if (!this.isNativeElement) {\n                if (runtimeScript) {\n                    const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                    const runtime = dynamicRuntimeFn();\n                    this.#setRuntime(runtime);\n                }\n                // Should already be a DocumentFragment of the template\n                if (template) { \n                    this.#templateContent = template.cloneNode(true);\n                }\n                else {\n                    this.#templateContent = DEFAULT_TEMPLATE_DOM.cloneNode();\n                }\n\n                if (style) {\n                    const stylesheet = new CSSStyleSheet();\n                    stylesheet.replaceSync(style);\n                    this.#stylesheet = stylesheet;\n                }\n                if (globalStylesheet) {\n                    this.#globalStylesheet = globalStylesheet;\n                }\n                // Maps \"ref names\" to actual elements in the component DOM tree,\n                // for fast access.\n                this.ref = {};\n            }\n\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.#events = runtime.events;\n                if (this.isConnected) {\n                    queueBindEvents(this, ()=> this.#bindEvents());\n                }\n            }\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\", slotAssignment: \"manual\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.#events) return;\n            const eventRefNames = Object.keys(this.#events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.#events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event, eventsObject) {\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in eventsObject));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in eventsObject)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    eventsObject[ref]?.call(target, event, event.target, globalState);\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', (event)=> {\n                    this.#eventHandler(event, clickActions);\n                }, false);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames) {\n                thiselement.addEventListener(eventName, (event)=> {\n                    this.#eventHandler(event, otherActions[eventName]);\n                }, false);\n            }\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        disconnectedCallback() {\n            const host = this.host ?? this;\n            const refEntries = Object.entries(host.ref);\n            // Delete this element from ref object of host\n            for (let i = 0, len = refEntries.length; i < len; i++ ) {\n                const [refName, refElem] = refEntries[i];\n                if (refElem === this) {\n                    delete (host.ref[refName]);\n                    break;\n                }\n            }\n\n            this.#boundAttributesToState = {};\n            this.#unbindEvents();\n        }\n\n        connectedCallback() {\n            if (this.#wasMounted) return;\n\n            if (!this.isNativeElement) {\n                this.#setActiveStateFromInitialState();\n            }\n\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            this.host = this.getRootNode().host;\n\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            if (!this.isNativeElement) {\n                if (!noRender) {\n                    this.#renderTemplate();\n                }\n                queueBindEvents(this, ()=> this.#bindEvents());\n                // requestAnimationFrame(()=> this.#bindEvents());\n                \n                if (this.#onMount) this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]());\n            }\n\n            const commands = [];\n            for (const attrName of this.getAttributeNames()) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                    // COMMAND_ATTRIBUTES[command]?.call(this, attrValue);\n                }\n            } \n\n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n    \n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.isNativeElement ? this.host : this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n        //static get observedAttributes() { return [\"todo-name\"]; }\n    }\n\n    // The \"initialSetX\" functions are called:\n    // 1. When a custom element instance is first created (before it's connected) - \n    // state attribute values are set to their state prop names (e.g: '$name').\n    // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n    // value of their respective state prop values, and binding between them occurs.\n    ReactiveElement.prototype.initialSetText = function (stateProp) {\n        setStateText.call(this, stateProp);\n    }\n    ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n        attributeValue = String(attributeValue);\n        let valueToSet = attributeValue;\n        // \"State attribute\"\n        if (attributeValue.indexOf('$') === 0 && attributeName.indexOf('_') !== 0 && this.isConnected)  {\n            let stateProp = attributeValue.substring(1);\n            setStateAttribute.call(this, attributeName, stateProp);\n        }\n        // normal attribute\n        else {\n            setAttribute.call(this, attributeName, valueToSet);\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","export function getReactiveSlotClass(ReactiveElementClass) {\n    class ReactiveSlot extends ReactiveElementClass {\n        renderSlot(statePropName) {\n            if (this.tagName !== \"SLOT\") return;\n\n            const stateValue= this.getState(statePropName);\n            if (typeof stateValue === \"undefined\") {\n                throw Error(`State property ${statePropName} not defined for conditional slot rendering!`);\n            }\n    \n            const children = this?.slotChildren;\n            if (children) {\n                const nodesToAssign = [];\n                children.forEach(slotChildElement=> {\n                    const _if = slotChildElement.getAttribute('_if');\n                    if (_if) {\n                        const expectedValue = Boolean(_if === \"true\");\n                        if (stateValue == expectedValue) {\n                            nodesToAssign.push(slotChildElement)\n                        }\n                    }\n                });\n                if (nodesToAssign.length) {\n                    this.assign(...nodesToAssign);\n                }\n            }\n        }\n\n    }\n\n    return ReactiveSlot;\n}","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { doUpdateDOM } from \"./node_actions.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getReactiveSlotClass } from \"./ReactiveSlot.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\n\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new StateManager(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    appScope.ReactiveElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => \n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            { extends: itemDefinition.element })\n        \n    );\n\n    const ReactiveSlotElementClass = extendElementClassWithReactiveElementClass(HTMLSlotElement, appScope, true);\n    const ReactiveSlotClass = getReactiveSlotClass(ReactiveSlotElementClass);\n    customElements.define('reactive-slot', ReactiveSlotClass, { extends: \"slot\" } );\n    \n    return function() {\n        SproutBuild(appScope, appName);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","NODES_STATE","nodeActionsMap","Map","eventBindingFunctions","conditionalRenders","paintRafId","eventBindRafId","conditionalRenderRafId","isElementAList","tagName","queueBindEvents","bindFunction","cancelAnimationFrame","set","requestAnimationFrame","forEach","bindFn","queuePaint","size","DOMActions","batchActions","nodeActions","node","hasOwnProperty","value","setAttribute","console","error","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","replace","newNode","oldNode","replaceChild","remove","values","removes","nodeToRemove","parentNode","removeChild","append","appends","newChildElement","appendChild","resolveNodeActionsMapToDOMActions","DOMAction","doUpdateDOM","setStateNodeAction","nodeActionsObject","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeToAppend","stateIdentifier","has","Set","get","add","getNewNodeActionsObject","after","hasPendingActions","this","generateStateNodeActions","stateManager","state","stateNodes","stateMaps","stateArrayMaps","conditionallyRenderingElements","stateMapArray","_ref","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","renderFn","setHiddenProperty","obj","propName","propValue","enumerable","arguments","Object","defineProperty","configurable","writable","HTMLElement","warn","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_this","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","condition","_this$host","stateValue","slotChildren","childSlotElement","host","renderSlot","addConditionallyRenderingElements","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","appScope","window","_classCallCheck","statefulArray","rawArray","item","index","StateManager","_defineProperty","_possibleConstructorReturn","Proxy","StatefulArrayHandler","_inherits","key","_get2","$$operation","_len","args","_key","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","_wrapNativeSuper","parentStateManager","targetArray","property","setResult","Reflect","Number","isNaN","doStateChangeHandle","receiver","initialState","parentStateProp","isGlobal","stateObj","targetState","descriptor","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$","depProp","dep","definePropertyResult","addGlobalStateDependency","originalProperty","StateHandler","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","_element$host","originalParentElement","shadowRoot","stateNode","isBooleanStateProp","setAndBindStateProperty","getOwnPropertyDescriptor","isValueProp","privateState","negateStateProp","extendElementClassWithReactiveElementClass","elementClass","noRender","_onMount","WeakMap","_wasMounted","_boundAttributesToState","_templateContent","_stylesheet","_globalStylesheet","_events","_boundEventNames","_eventHandler","_changeEventHandler","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","template","runtimeScript","style","globalStylesheet","_callSuper","_classPrivateFieldInitSpec","isReactiveElement","isNativeElement","runtime","Function","dynamicRuntimeFn","_assertClassBrand","_setRuntime","_classPrivateFieldSet","cloneNode","stylesheet","CSSStyleSheet","replaceSync","ref","initState","assign","_classPrivateFieldGet","propertyName","newValue","refEntries","entries","_refEntries$i","refName","_unbindEvents","_this2","_setActiveStateFromInitialState","getRootNode","changeEvent","Event","bubbles","composed","dispatchEvent","_renderTemplate","_bindEvents","_step","commands","_iterator","_createForOfIteratorHelper","getAttributeNames","s","n","done","initialSetAttribute","command","err","e","f","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","oldValue","isConnected","refValue","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","root","SPROUT_CONFIG","useShadow","querySelector","_this3","events","onMount","attachShadow","mode","slotAssignment","adoptedStyleSheets","fragment","DocumentFragment","_this4","removeEventListener","thiselement","eventName","_classPrivateFieldGet2","_this5","eventRefNames","keys","clickActions","otherActions","event","eventsObject","elementsPath","composedPath","find","_eventsObject$ref","eventNames","_loop","_eventNames2","_i","toLowerCase","attributeValue","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","Boolean","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineElementFromTemplate","_callee","templateContent","_context","importNode","content","customElements","_appScope$ReactiveEle","_class","_next","_throw","globalStyle","querySelectorAll","_x","_x2","_x3","defineElementFromTemplate","getReactiveSlotClass","ReactiveElementClass","ReactiveSlot","_ReactiveElementClass","nodesToAssign","slotChildElement","_if","expectedValue","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","itemDefinition","extends","ReactiveSlotClass","HTMLSlotElement","SproutBuild"],"sourceRoot":""}
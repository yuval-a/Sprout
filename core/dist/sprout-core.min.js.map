{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://jssprout/./src/core/consts.js","webpack://jssprout/./src/core/DOM_utils.js","webpack://jssprout/./src/core/paint_utils.js","webpack://jssprout/./src/core/node_actions.js","webpack://jssprout/./src/core/prop_utils.js","webpack://jssprout/./src/core/state_utils.js","webpack://jssprout/./src/core/commands.js","webpack://jssprout/./src/core/StatefulArray.js","webpack://jssprout/./src/core/proxy_handlers.js","webpack://jssprout/./src/core/StateManager.js","webpack://jssprout/./src/core/ReactiveElement.js","webpack://jssprout/./src/build/index.js","webpack://jssprout/./src/core/ConditionalElement.js","webpack://jssprout/./src/core/attr_utils.js","webpack://jssprout/./src/core/index.js"],"sourcesContent":["export const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    null, // If no type is specified - defaults to 'text' - \n    // getAttribute('type') returns null\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    { class: HTMLSlotElement, element: \"slot\" },\n    // We can't use HTMLElement more than once, so we will use a class extending it\n    { class: class extends HTMLElement{}, element: \"code\" }\n\n    // { class: HTMLSlotElement, element: \"slot\" } Has a different extended class for conditional rendering\n];\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map(),\n    // Maps events binding functions to (custom) elements\n    eventBindingFunctions: new Map(),\n    conditionalRenders: new Map(),\n    // Save requestAnimationFrame Id, to cancel if the rAF wasn't called yet on the same frame, so DOM operations will be batched to a single frame,\n    // preventing several rAFs running for the same frame\n    paintRafId: null,\n    // Similar as above but for event bindings\n    eventBindRafId: null,\n    // Same for conditional renders\n    conditionalRenderRafId: null,\n}\n\nexport const CONDITIONAL_OPERATORS = [\n    '=',\n    '==',\n    '!=',\n    '!==',\n    '<',\n    '<=',\n    '>',\n    '>='\n];\n\nexport const MAX_OPERATIONS_PER_ANIMATION_FRAME = 100;\n","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}\n\n","import { doUpdateDOM } from \"./node_actions\";\nimport { NODES_STATE, MAX_OPERATIONS_PER_ANIMATION_FRAME } from \"./consts\";\n\nlet { \n    paintRafId,\n    eventBindingFunctions, \n    eventBindRafId, \n    conditionalRenderRafId,\n    conditionalRenders,\n    nodeActionsMap\n} = NODES_STATE; \n\nexport function queueBindEvents(element, bindFunction) {\n    eventBindingFunctions.set(element, bindFunction);\n    if (eventBindingFunctions.size+1 >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (eventBindRafId) cancelAnimationFrame(eventBindRafId);\n    eventBindRafId = requestAnimationFrame(()=> {\n        eventBindRafId = null;\n        eventBindingFunctions.forEach(bindFn=> bindFn());\n        eventBindingFunctions = new Map();\n    });\n}\nexport function queuePaint() {\n    if (nodeActionsMap.size+1 >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (paintRafId) cancelAnimationFrame(paintRafId);\n    paintRafId = requestAnimationFrame(()=> {\n        paintRafId = null;\n        doUpdateDOM();\n    })\n}\nexport function queueConditionalRender(element, renderFunction) {\n    conditionalRenders.set(element, renderFunction);\n    if (conditionalRenders.size >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (conditionalRenderRafId) cancelAnimationFrame(conditionalRenderRafId);\n    conditionalRenderRafId = requestAnimationFrame(()=> {\n        conditionalRenderRafId = null;\n        conditionalRenders.forEach(renderFn=> renderFn());\n        conditionalRenders = new Map();\n    })\n}","import { stateToElement, resolveStateMapToDocumentFragment } from \"./state_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { queueConditionalRender } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        get hasPendingActions() {\n            return (this.append.size || this.replace.size || this.after.size || this.remove.size);\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    const stateMaps = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMaps) {\n        const stateMapArray = value;\n        stateMaps.forEach(({ customElementName, parentElement})=> {\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    // Make sure we don't already have a pending append action for the same state object\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            queueConditionalRender(this, ()=> element.render());\n        });\n    }\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        console.log (nodeActions);\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    batchActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            batchActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                batchActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            for (const removes of nodeActions.remove.values()) {\n                for (const nodeToRemove of removes) {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        batchActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                }\n            }\n            for (const appends of nodeActions.append.values()) {\n                for (const newChildElement of appends) {\n                    batchActions.push(()=> node.appendChild(newChildElement));\n                }\n            }\n        }\n    });\n    return batchActions;\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n}","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { generateStateNodeActions } from './node_actions.js';\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { queuePaint } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\n\nconst { nodeActionsMap } = NODES_STATE;\n\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n    const state = stateManager.state;\n\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n\n    if (nodeActionsMap.size) {\n        queuePaint();\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n        \n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n/* Experimental rendering of state maps using DocumentFragment. Not stable */\n/* \nexport function resolveStateMapToDocumentFragment({ customElementName, parentElement}, stateMapArray) {\n    const resolvedDocumentFragment = new DocumentFragment();\n    // const stateMapNodeActions = getNewNodeActionsObject();\n    let currentStateMapArrayIndex = -1;\n    const isParentAList = isElementAList(parentElement);\n    // Compares state map arrays to actual DOM elements (by comparing state objects)\n    if (parentElement.children.length) {\n        Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n            let customElementChild = childElement;\n            // State map elements inside Lists are wrapped with a <li>\n            if (isParentAList) customElementChild = childElement.firstElementChild;\n            let stateItem = stateMapArray[currentIndex]; \n            if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n            if (stateItem && customElementChild.state !== stateItem) {\n                const newCustomElementChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                resolvedDocumentFragment.appendChild(newCustomElementChild);\n            }\n            else {\n                resolvedDocumentFragment.append(childElement)\n            }\n            currentStateMapArrayIndex = currentIndex;\n        });\n    }\n\n    // If there are more state objects in the stateMapArray - append equivalent child elements \n    currentStateMapArrayIndex++;\n    for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n        const stateItem = stateMapArray[i];\n        // New state item === new child element to append\n        if (stateItem) {\n            // Make sure we don't already have a pending append action for the same state object\n            const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n            resolvedDocumentFragment.appendChild(newChild);\n        }\n    }\n\n    return resolvedDocumentFragment;\n    if (resolvedDocumentFragment.children.length) {\n        parentElement.innerHTML = '';\n        //addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n        //nodeActionsMap.set(parentElement, stateMapNodeActions);\n    }    \n}\n*/\n\n","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { attributeValueToTypedValue } from \"./attr_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n}","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    return {\n        set(targetArray, property, value) {\n            // Return if the value is the same\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                handleStateChange(parentStateManager, arrayStateProp);\n                return setResult;\n            }\n\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        handleStateChange(parentStateManager, arrayStateProp);\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            if (typeof property === 'symbol') return Reflect.get(...arguments);\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                handleStateChange(stateManager, stateProp);\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = [];\n        }\n\n        this.stateArrayMaps[stateProp].push({\n            customElementName,\n            parentElement\n        });\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    \n\n    setAndBindStateProperty(stateProp, isBooleanStateProp=false) {\n        let stateObj = this.state;\n        if (stateProp.indexOf('!') === 0) {\n            const originalStateProp = stateProp.substring(1);\n            let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                stateObj = stateObj._global;\n                descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n                if (!descriptor) {\n                    throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n                }\n            }\n            // Negate prop: (!something) - add a dependency between the negate prop to the original prop,\n            // So anytime the original prop change, things that are dependant on the negate prop will react\n            // return stateObj._stateManager.addStateDependency(originalStateProp, stateProp);\n            return;\n        }\n\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop not defined!`);\n            }\n        }\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isValueProp) {\n            if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                stateManager.privateState[stateProp] = stateObj[stateProp];\n            }\n            stateObj._binding = true;\n            Object.defineProperty(stateObj, stateProp, {\n                set(value) {\n                    const currentVal = stateManager.privateState[stateProp];\n                    if (value === currentVal) return;\n                    // Sets value to \"private state\"\n                    stateManager.privateState[stateProp] = value;\n\n                    handleStateChange(stateManager, stateProp);\n                    // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                    if (stateManager.parentStateManager) {\n                        handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                    }\n                },\n                get() {\n                    // Value is always retrieved from the \"private\" state\n                    return stateManager.privateState[stateProp];\n                }\n            });\n        }\n\n        // Boolean state props will also have \"negate props\" available (![stateProp])\n        if (isBooleanStateProp && stateProp.indexOf('!') !== 0) {\n            const negateStateProp = `!${stateProp}`;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n        }\n\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { queueBindEvents } from \"./paint_utils.js\";\nimport { attributeValueToTypedValue } from \"./attr_utils.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window, noRender = false) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n        // Callback function for when the element is connected to a DOM tree on the page\n        #onMount\n        #wasMounted = false\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        #events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n\n        // Main event handler function \n        #eventHandler\n        // Special case to handle input change events (to make them bubble up from shadow DOM)\n        #changeEventHandler\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            this.isReactiveElement = true;\n            this.isSpecialElement = this.tagName === \"CONDITIONAL-ELEMENT\";\n            this.isNativeElement = this.hasAttribute(\"is\") && !this.isSpecialElement;\n            if (!this.isNativeElement) {\n                if (runtimeScript) {\n                    const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                    const runtime = dynamicRuntimeFn();\n                    this.#setRuntime(runtime);\n                }\n                // Should already be a DocumentFragment of the template\n                if (template) { \n                    this.#templateContent = template.cloneNode(true);\n                }\n                else {\n                    this.#templateContent = DEFAULT_TEMPLATE_DOM.cloneNode();\n                }\n\n                if (style) {\n                    const stylesheet = new CSSStyleSheet();\n                    stylesheet.replaceSync(style);\n                    this.#stylesheet = stylesheet;\n                }\n                if (globalStylesheet) {\n                    this.#globalStylesheet = globalStylesheet;\n                }\n                // Maps \"ref names\" to actual elements in the component DOM tree,\n                // for fast access.\n                this.ref = {};\n            }\n\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.#events = runtime.events;\n                if (this.isConnected) {\n                    queueBindEvents(this, ()=> this.#bindEvents());\n                }\n            }\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.#events) return;\n            const eventRefNames = Object.keys(this.#events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.#events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event, eventsObject) {\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in eventsObject));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in eventsObject)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    eventsObject[ref]?.call(target, event, event.target, globalState);\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', (event)=> {\n                    this.#eventHandler(event, clickActions);\n                }, false);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames) {\n                thiselement.addEventListener(eventName, (event)=> {\n                    this.#eventHandler(event, otherActions[eventName]);\n                }, false);\n            }\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        disconnectedCallback() {\n            const host = this.host ?? this;\n            if (host.ref) {\n                const thisRefName = this.getAttribute('ref');\n                if (thisRefName) delete host.ref[thisRefName];\n            }\n            this.#boundAttributesToState = {};\n            this.#unbindEvents();\n            this.state = undefined;\n        }\n\n        connectedCallback() {\n            if (this.#wasMounted) return;\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            // THIS SHOULD BE THE FIRST THING THAT HAPPENS!\n            this.host = this.getRootNode().host;\n\n            if (!this.isNativeElement) {\n                this.#setActiveStateFromInitialState();\n            }\n\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            if (!this.isNativeElement && !noRender) {\n                // We mostly queue as microtask to allow custom slot elements to\n                // be attached to the light DOM first.\n                this.#renderTemplate();\n            }\n            const commands = [];\n            const attributeNames = this.getAttributeNames();\n            for (const attrName of attributeNames) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                    // COMMAND_ATTRIBUTES[command]?.call(this, attrValue);\n                }\n            } \n\n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n            if (!this.isNativeElement) {\n                queueBindEvents(this, ()=> this.#bindEvents());\n                if (this.#onMount) queueMicrotask(()=> this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]()));\n            }\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n    \n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.isNativeElement ? this.host : this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n        //static get observedAttributes() { return [\"todo-name\"]; }\n    }\n\n    // The \"initialSetX\" functions are called:\n    // 1. When a custom element instance is first created (before it's connected) - \n    // state attribute values are set to their state prop names (e.g: '$name').\n    // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n    // value of their respective state prop values, and binding between them occurs.\n    ReactiveElement.prototype.initialSetText = function (stateProp) {\n        setStateText.call(this, stateProp);\n    }\n    ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n        attributeValue = String(attributeValue);\n        let valueToSet = attributeValue;\n\n        // \"Property Attribute\"\n        if (attributeValue.indexOf('@') === 0 && this.host && this.isConnected) {\n            valueToSet = this.host.getAttribute(attributeValue.substring(1));\n        } \n        \n        // \"State attribute\"\n        if (attributeValue.indexOf('$') === 0 && this.isConnected)  {\n            let stateProp = attributeValue.substring(1);\n            setStateAttribute.call(this, attributeName, stateProp);\n        }\n        // normal attribute\n        else {\n            setAttribute.call(this, attributeName, valueToSet);\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","import { attributeValueToTypedValue } from \"./attr_utils\";\nimport { CONDITIONAL_OPERATORS } from \"./consts\";\nimport { queueConditionalRender } from \"./paint_utils\";\n\n// returns a Boolean according to the conditional equality of conditional to conditionStateValue\nexport function resolveConditional(conditional, conditionStateValue) {\n    const typeOf = typeof conditional;\n    if (typeOf !== 'string') {\n        return conditionStateValue === conditional;\n    }\n    else {\n        if (conditional === \"always\") return true;\n        if (CONDITIONAL_OPERATORS.includes(conditional[0])) {\n            const conditionFn = new Function(`return ${conditionStateValue}${conditional}`);\n            return conditionFn();\n        }\n        else {\n            return conditionStateValue === conditional;\n        }\n    }\n}\n\nexport function getConditionalElementClass(ReactiveElementClass) {\n    class ConditionalElement extends ReactiveElementClass {\n\n        #conditionStateProp\n        #renderMap\n        #wasMounted = false\n\n        render(isFirstRender=false) {\n            let stateValue;\n            if (this.#conditionStateProp.indexOf('@') === 0) {\n                stateValue = this.host.getAttribute(this.#conditionStateProp.substring(1));\n            }\n            else {\n                stateValue = this.getState(this.#conditionStateProp);\n            }\n\n            if (stateValue === undefined) {\n                throw Error(`State value for ${this.#conditionStateProp} not found while rendering conditional-render element:`, this);\n            }\n            const elementsToRender = [];\n\n            this.#renderMap.forEach((elements, conditional)=> {\n                if (resolveConditional(conditional, stateValue)) {\n                    elementsToRender.push(...elements);\n                }\n            });\n\n            if (isFirstRender) {\n                this.innerHTML = \"\";\n                this.append(...elementsToRender);\n            }\n            else if (elementsToRender.length) {\n                queueConditionalRender(this, ()=> {\n                    this.innerHTML = \"\";\n                    this.append(...elementsToRender);\n                });\n            }\n        }\n        connectedCallback() {\n            this.host = this.getRootNode().host;\n            if (!this.host) {\n                throw Error(\"<conditional-render> must be used as part of a custom element template! Cannot be used outside of a custom element.\");\n            }\n            if (this.#wasMounted) return;\n            const conditionAttributeValue = this.getAttribute(\"_condition\");\n            if (!conditionAttributeValue) {\n                throw Error(\"conditional-render elements must have a _condition command attribute\");\n            }\n            if (!this.children || !this.children.length) {\n                throw Error(\"Conditional element must have children!\");\n            }\n\n            const statePropName = conditionAttributeValue;\n            this.#conditionStateProp = statePropName;\n\n            const isConditionStatic = this.#conditionStateProp.indexOf('@') === 0;\n            let stateValue, stateObject;\n            if (!isConditionStatic) {\n                [stateValue, stateObject] = this.getState(statePropName, true);\n                if (typeof stateValue === \"undefined\") {\n                    throw Error(`State property ${statePropName} not defined for _condition command!`);\n                }\n            }\n            const renderMap = new Map();\n            renderMap.set(\"always\", []);\n            const children = [...this.children];\n\n            children.forEach(conditionalChild=> {\n                const _if = conditionalChild.getAttribute('_if');\n                if (_if) {\n                    const expectedValue = attributeValueToTypedValue(_if);\n                    if (!renderMap.has(expectedValue)) renderMap.set(expectedValue, []);\n                    renderMap.get(expectedValue).push(conditionalChild);\n                }\n                else {\n                    renderMap.get(\"always\").push(conditionalChild);\n                }\n            });\n            this.#renderMap = renderMap;\n\n            if (!isConditionStatic) {\n                stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n            }\n            this.render(true);\n            this.#wasMounted = true;\n        }\n    }\n\n    return ConditionalElement;\n}\n\n","// Convert attribute values to \"typed\" values\nexport function attributeValueToTypedValue(attrValue) {\n    let typedValue = attrValue;\n    if (attrValue === \"true\" || attrValue === \"false\") typedValue = Boolean(attrValue === \"true\");\n    else if (!isNaN(Number(attrValue))) typedValue = Number(attrValue);\n    return typedValue; \n}\n\n// Check if attribute node is a \"Command\" or a \"State Attribute\" \nexport function isSpecialAttribute(attrNode) {\n    if (typeof attrNode !== \"object\" && attrNode.constructor.name !== \"Attr\") throw Error(\"Passed non Attribute to isSpecialAttribute!\");\n    return attrNode.nodeName.indexOf('_') === 0 || attrNode.nodeValue.indexOf('$') === 0;\n}","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build/index.js';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getConditionalElementClass } from \"./ConditionalElement.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\n\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new StateManager(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    appScope.ReactiveElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => \n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            { extends: itemDefinition.element })\n        \n    );\n\n    const ReactiveConditionalElementClass = extendElementClassWithReactiveElementClass(HTMLElement, appScope, true);\n    const ConditionalElementClass = getConditionalElementClass(ReactiveConditionalElementClass); \n    customElements.define('conditional-render', ConditionalElementClass);\n\n    return function() {\n        SproutBuild(appScope, appName);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","HTMLSlotElement","_HTMLElement","_class","_classCallCheck","_callSuper","arguments","_inherits","_wrapNativeSuper","HTMLElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","NODES_STATE","nodeActionsMap","Map","eventBindingFunctions","conditionalRenders","paintRafId","eventBindRafId","conditionalRenderRafId","CONDITIONAL_OPERATORS","MAX_OPERATIONS_PER_ANIMATION_FRAME","isElementAList","tagName","queueBindEvents","bindFunction","set","size","cancelAnimationFrame","requestAnimationFrame","forEach","bindFn","queuePaint","DOMActions","batchActions","nodeActions","node","hasOwnProperty","value","setAttribute","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","replace","newNode","oldNode","replaceChild","_step","_iterator","_createForOfIteratorHelper","remove","values","s","n","done","_step3","_iterator3","_loop","nodeToRemove","parentNode","removeChild","err","e","f","_step2","_iterator2","append","_step4","_iterator4","_loop2","newChildElement","appendChild","resolveNodeActionsMapToDOMActions","DOMAction","doUpdateDOM","queueConditionalRender","renderFunction","renderFn","setStateNodeAction","nodeActionsObject","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeToAppend","stateIdentifier","has","Set","get","add","getNewNodeActionsObject","after","hasPendingActions","this","generateStateNodeActions","stateManager","_this","state","stateNodes","stateMaps","stateArrayMaps","conditionallyRenderingElements","stateMapArray","_ref","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","render","setHiddenProperty","obj","propName","propValue","enumerable","Object","defineProperty","configurable","writable","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","appScope","window","statefulArray","rawArray","item","index","StateManager","_defineProperty","_possibleConstructorReturn","Proxy","StatefulArrayHandler","key","_get2","$$operation","_len","args","_key","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","parentStateManager","targetArray","property","setResult","Reflect","Number","isNaN","doStateChangeHandle","receiver","initialState","parentStateProp","isGlobal","stateObj","targetState","descriptor","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$","depProp","dep","definePropertyResult","addGlobalStateDependency","originalProperty","StateHandler","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","_element$host","originalParentElement","host","shadowRoot","stateNode","isBooleanStateProp","setAndBindStateProperty","getOwnPropertyDescriptor","isValueProp","privateState","negateStateProp","extendElementClassWithReactiveElementClass","elementClass","noRender","_onMount","WeakMap","_wasMounted","_boundAttributesToState","_templateContent","_stylesheet","_globalStylesheet","_events","_boundEventNames","_eventHandler","_changeEventHandler","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","template","runtimeScript","style","globalStylesheet","_classPrivateFieldInitSpec","isReactiveElement","isSpecialElement","isNativeElement","runtime","Function","dynamicRuntimeFn","_assertClassBrand","_setRuntime","_classPrivateFieldSet","cloneNode","stylesheet","CSSStyleSheet","replaceSync","ref","initState","assign","_classPrivateFieldGet","propertyName","newValue","stateValue","_this$host","thisRefName","_unbindEvents","_this2","getRootNode","_setActiveStateFromInitialState","changeEvent","Event","bubbles","composed","dispatchEvent","_renderTemplate","commands","getAttributeNames","initialSetAttribute","command","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","_bindEvents","queueMicrotask","oldValue","isConnected","refValue","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","refName","root","SPROUT_CONFIG","useShadow","querySelector","_this3","events","onMount","attachShadow","mode","adoptedStyleSheets","fragment","DocumentFragment","_this4","removeEventListener","thiselement","eventName","_classPrivateFieldGet2","_this5","eventRefNames","keys","clickActions","otherActions","event","eventsObject","elementsPath","composedPath","find","_eventsObject$ref","eventNames","_eventNames2","_i","toLowerCase","attributeValue","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","Boolean","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineElementFromTemplate","_callee","templateContent","_context","importNode","content","customElements","_appScope$ReactiveEle","_next","_throw","globalStyle","querySelectorAll","_x","_x2","_x3","defineElementFromTemplate","getConditionalElementClass","ReactiveElementClass","_conditionStateProp","_renderMap","ConditionalElement","_ReactiveElementClass","isFirstRender","elementsToRender","conditional","conditionStateValue","conditionFn","resolveConditional","conditionAttributeValue","isConditionStatic","renderMap","conditionalChild","typedValue","_if","expectedValue","addConditionallyRenderingElements","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","itemDefinition","extends","ConditionalElementClass","SproutBuild"],"sourceRoot":""}
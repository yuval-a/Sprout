{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://jssprout/./src/core/consts.js","webpack://jssprout/./src/core/DOM_utils.js","webpack://jssprout/./src/core/paint_utils.js","webpack://jssprout/./src/core/node_actions.js","webpack://jssprout/./src/core/prop_utils.js","webpack://jssprout/./src/core/state_utils.js","webpack://jssprout/./src/core/attr_utils.js","webpack://jssprout/./src/core/commands.js","webpack://jssprout/./src/core/StatefulArray.js","webpack://jssprout/./src/core/proxy_handlers.js","webpack://jssprout/./src/core/StateManager.js","webpack://jssprout/./src/core/ReactiveElement.js","webpack://jssprout/./src/build/index.js","webpack://jssprout/./src/core/ConditionalElement.js","webpack://jssprout/./src/core/index.js"],"sourcesContent":["export const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    null, // If no type is specified - defaults to 'text' - \n    // getAttribute('type') returns null\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    { class: HTMLSlotElement, element: \"slot\" },\n    // We can't use HTMLElement more than once, so we will use a class extending it\n    { class: class extends HTMLElement{}, element: \"code\" }\n    // { class: HTMLSlotElement, element: \"slot\" } Has a different extended class for conditional rendering\n];\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map(),\n    // Maps events binding functions to (custom) elements\n    eventBindingFunctions: new Map(),\n    conditionalRenders: new Map(),\n    // Save requestAnimationFrame Id, to cancel if the rAF wasn't called yet on the same frame, so DOM operations will be batched to a single frame,\n    // preventing several rAFs running for the same frame\n    paintRafId: null,\n    // Similar as above but for event bindings\n    eventBindRafId: null,\n    // Same for conditional renders\n    conditionalRenderRafId: null,\n}\n\nexport const CONDITIONAL_OPERATORS = [\n    '=',\n    '==',\n    '!=',\n    '!==',\n    '<',\n    '<=',\n    '>',\n    '>='\n];\n\nexport const MAX_OPERATIONS_PER_ANIMATION_FRAME = 100;\n","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}\n\n","import { doUpdateDOM } from \"./node_actions\";\nimport { NODES_STATE, MAX_OPERATIONS_PER_ANIMATION_FRAME } from \"./consts\";\n\nlet { \n    paintRafId,\n    eventBindingFunctions, \n    eventBindRafId, \n    conditionalRenderRafId,\n    conditionalRenders,\n    nodeActionsMap\n} = NODES_STATE; \n\nexport function queueBindEvents(element, bindFunction) {\n    eventBindingFunctions.set(element, bindFunction);\n    if (eventBindingFunctions.size+1 >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (eventBindRafId) cancelAnimationFrame(eventBindRafId);\n    eventBindRafId = requestAnimationFrame(()=> {\n        eventBindRafId = null;\n        eventBindingFunctions.forEach(bindFn=> bindFn());\n        eventBindingFunctions = new Map();\n    });\n}\nexport function queuePaint() {\n    if (nodeActionsMap.size+1 >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (paintRafId) cancelAnimationFrame(paintRafId);\n    paintRafId = requestAnimationFrame(()=> {\n        paintRafId = null;\n        doUpdateDOM();\n    })\n}\nexport function queueConditionalRender(element, renderFunction) {\n    conditionalRenders.set(element, renderFunction);\n    if (conditionalRenders.size >= MAX_OPERATIONS_PER_ANIMATION_FRAME) return;\n    if (conditionalRenderRafId) cancelAnimationFrame(conditionalRenderRafId);\n    conditionalRenderRafId = requestAnimationFrame(()=> {\n        conditionalRenderRafId = null;\n        conditionalRenders.forEach(renderFn=> renderFn());\n        conditionalRenders = new Map();\n    })\n}","import { stateToElement, resolveStateMapToDocumentFragment } from \"./state_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { queueConditionalRender } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        get hasPendingActions() {\n            return (this.append.size || this.replace.size || this.after.size || this.remove.size);\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    const stateMaps = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMaps) {\n        const stateMapArray = value;\n        stateMaps.forEach(({ customElementName, parentElement})=> {\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    // Make sure we don't already have a pending append action for the same state object\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            queueConditionalRender(this, ()=> element.render());\n        });\n    }\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        batchActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    batchActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            batchActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                batchActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            nodeActions.remove.values().forEach((removes)=> {\n                removes.forEach((nodeToRemove)=> {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        batchActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                });\n            });\n            nodeActions.append.values().forEach((appends)=> {\n                appends.forEach((newChildElement)=> {\n                    batchActions.push(()=> node.appendChild(newChildElement));\n                });\n            });\n            \n        }\n    });\n    return batchActions;\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n}","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { generateStateNodeActions } from './node_actions.js';\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { queuePaint } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\n\nconst { nodeActionsMap } = NODES_STATE;\n\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n    const state = stateManager.state;\n\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n\n    if (nodeActionsMap.size) {\n        queuePaint();\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n        \n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n/* Experimental rendering of state maps using DocumentFragment. Not stable */\n/* \nexport function resolveStateMapToDocumentFragment({ customElementName, parentElement}, stateMapArray) {\n    const resolvedDocumentFragment = new DocumentFragment();\n    // const stateMapNodeActions = getNewNodeActionsObject();\n    let currentStateMapArrayIndex = -1;\n    const isParentAList = isElementAList(parentElement);\n    // Compares state map arrays to actual DOM elements (by comparing state objects)\n    if (parentElement.children.length) {\n        Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n            let customElementChild = childElement;\n            // State map elements inside Lists are wrapped with a <li>\n            if (isParentAList) customElementChild = childElement.firstElementChild;\n            let stateItem = stateMapArray[currentIndex]; \n            if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n            if (stateItem && customElementChild.state !== stateItem) {\n                const newCustomElementChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                resolvedDocumentFragment.appendChild(newCustomElementChild);\n            }\n            else {\n                resolvedDocumentFragment.append(childElement)\n            }\n            currentStateMapArrayIndex = currentIndex;\n        });\n    }\n\n    // If there are more state objects in the stateMapArray - append equivalent child elements \n    currentStateMapArrayIndex++;\n    for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n        const stateItem = stateMapArray[i];\n        // New state item === new child element to append\n        if (stateItem) {\n            // Make sure we don't already have a pending append action for the same state object\n            const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n            resolvedDocumentFragment.appendChild(newChild);\n        }\n    }\n\n    return resolvedDocumentFragment;\n    if (resolvedDocumentFragment.children.length) {\n        parentElement.innerHTML = '';\n        //addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n        //nodeActionsMap.set(parentElement, stateMapNodeActions);\n    }    \n}\n*/\n\n","// Convert attribute values to \"typed\" values\nexport function attributeValueToTypedValue(attrValue) {\n    let typedValue = attrValue;\n    if (attrValue === \"true\" || attrValue === \"false\") typedValue = Boolean(attrValue === \"true\");\n    else if (!isNaN(Number(attrValue))) typedValue = Number(attrValue);\n    return typedValue; \n}\n\n// Check if attribute node is a \"Command\" or a \"State Attribute\" \nexport function isSpecialAttribute(attrNode) {\n    if (typeof attrNode !== \"object\" && attrNode.constructor.name !== \"Attr\") throw Error(\"Passed non Attribute to isSpecialAttribute!\");\n    return attrNode.nodeName.indexOf('_') === 0 || attrNode.nodeValue.indexOf('$') === 0;\n}","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { attributeValueToTypedValue } from \"./attr_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n   condition: function(commandValue) {\n        if (this.tagName !== \"SLOT\") {\n            throw Error(\"_condition command can only be used on a slot element!\");\n        }\n        if (!this.children || !this.children.length) {\n            throw Error(\"Conditional rendering slot (a reactive-slot with a _condition command) must have children! For slot: \", this);\n        }\n        const statePropName = commandValue;\n        const [stateValue, stateObject] = this.getState(statePropName, true);\n        if (typeof stateValue === \"undefined\") {\n            throw Error(`State property ${statePropName} not defined for _condition command!`);\n        }\n\n        const slotHost = this.host;\n        const slotChildren = [...this.children];\n        const nodesToAssign = [];\n        slotChildren.forEach(slotChildElement=> {\n            const _if = slotChildElement.getAttribute('_if');\n            if (_if) {\n                slotChildElement.host = slotHost;\n                slotChildElement.conditionalSlotChild = true;\n                const slotChildChildren = slotChildElement.querySelectorAll('*');\n                slotChildChildren.forEach((child) => {\n                    child.host = slotHost;\n                });\n                const expectedValue = attributeValueToTypedValue(_if);\n                if (stateValue === expectedValue) {\n                    nodesToAssign.push(slotChildElement);\n                }\n            }\n        });\n\n        // Slotted elements must be LIGHT DOM\n        // (directly connected to the custom element)\n        requestAnimationFrame(()=> {\n            slotHost.append(...slotChildren);\n            if (nodesToAssign.length) {\n                this.assign(...nodesToAssign);\n            }\n        });\n\n        stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n   }  \n}","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    return {\n        set(targetArray, property, value) {\n            // Return if the value is the same\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                handleStateChange(parentStateManager, arrayStateProp);\n                return setResult;\n            }\n\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        handleStateChange(parentStateManager, arrayStateProp);\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            if (typeof property === 'symbol') return Reflect.get(...arguments);\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                handleStateChange(stateManager, stateProp);\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = [];\n        }\n\n        this.stateArrayMaps[stateProp].push({\n            customElementName,\n            parentElement\n        });\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    \n\n    setAndBindStateProperty(stateProp, isBooleanStateProp=false) {\n        let stateObj = this.state;\n        if (stateProp.indexOf('!') === 0) {\n            const originalStateProp = stateProp.substring(1);\n            let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                stateObj = stateObj._global;\n                descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n                if (!descriptor) {\n                    throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n                }\n            }\n            // Negate prop: (!something) - add a dependency between the negate prop to the original prop,\n            // So anytime the original prop change, things that are dependant on the negate prop will react\n            // return stateObj._stateManager.addStateDependency(originalStateProp, stateProp);\n            return;\n        }\n\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, stateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop not defined!`);\n            }\n        }\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isValueProp) {\n            if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                stateManager.privateState[stateProp] = stateObj[stateProp];\n            }\n            stateObj._binding = true;\n            Object.defineProperty(stateObj, stateProp, {\n                set(value) {\n                    const currentVal = stateManager.privateState[stateProp];\n                    if (value === currentVal) return;\n                    // Sets value to \"private state\"\n                    stateManager.privateState[stateProp] = value;\n\n                    handleStateChange(stateManager, stateProp);\n                    // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                    if (stateManager.parentStateManager) {\n                        handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                    }\n                },\n                get() {\n                    // Value is always retrieved from the \"private\" state\n                    return stateManager.privateState[stateProp];\n                }\n            });\n        }\n\n        // Boolean state props will also have \"negate props\" available (![stateProp])\n        if (isBooleanStateProp && stateProp.indexOf('!') !== 0) {\n            const negateStateProp = `!${stateProp}`;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[stateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(stateProp, negateStateProp);\n                }\n            }\n        }\n\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { queueBindEvents } from \"./paint_utils.js\";\nimport { attributeValueToTypedValue } from \"./attr_utils.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window, noRender = false) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n        // Callback function for when the element is connected to a DOM tree on the page\n        #onMount\n        _onRender\n        #wasMounted = false\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        #events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n\n        // Main event handler function \n        #eventHandler\n        // Special case to handle input change events (to make them bubble up from shadow DOM)\n        #changeEventHandler\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            this.isReactiveElement = true;\n            this.isSpecialElement = this.tagName === \"CONDITIONAL-ELEMENT\";\n            this.isNativeElement = this.hasAttribute(\"is\") && !this.isSpecialElement;\n            if (!this.isNativeElement) {\n                if (runtimeScript) {\n                    const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                    const runtime = dynamicRuntimeFn();\n                    this.#setRuntime(runtime);\n                }\n                // Should already be a DocumentFragment of the template\n                if (template) { \n                    this.#templateContent = template.cloneNode(true);\n                }\n                else {\n                    this.#templateContent = DEFAULT_TEMPLATE_DOM.cloneNode();\n                }\n\n                if (style) {\n                    const stylesheet = new CSSStyleSheet();\n                    stylesheet.replaceSync(style);\n                    this.#stylesheet = stylesheet;\n                }\n                if (globalStylesheet) {\n                    this.#globalStylesheet = globalStylesheet;\n                }\n                // Maps \"ref names\" to actual elements in the component DOM tree,\n                // for fast access.\n                this.ref = {};\n            }\n\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.#events = runtime.events;\n                if (this.isConnected) {\n                    queueBindEvents(this, ()=> this.#bindEvents());\n                }\n            }\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.#events) return;\n            const eventRefNames = Object.keys(this.#events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.#events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event, eventsObject) {\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in eventsObject));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in eventsObject)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    eventsObject[ref]?.call(target, event, event.target, globalState);\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', (event)=> {\n                    this.#eventHandler(event, clickActions);\n                }, false);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames) {\n                thiselement.addEventListener(eventName, (event)=> {\n                    this.#eventHandler(event, otherActions[eventName]);\n                }, false);\n            }\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        resolveTextContentTemplateStringTag(strings, ...attributeNames) {\n            return strings.reduce((result, str, i) => {\n                const attrName = attributeNames[i] ? attributeNames[i].replaceAll(/\\s/g,'') : false;\n                return result + str + (attrName ? this.host?.getAttribute(attrName) : \"\");\n            }, \"\");\n        }\n        // A template string \"tag\" function to use when referencing attribute values in element texts\n        #resolveTextContentTemplateString() {\n            const resolveTextContentFn = new Function(\n                \"return this.resolveTextContentTemplateStringTag`\" + this.textContent + \"`;\"\n            ).bind(this);\n            return resolveTextContentFn();\n        }\n        disconnectedCallback() {\n            const host = this.host ?? this;\n            if (host.ref) {\n                const thisRefName = this.getAttribute('ref');\n                if (thisRefName) delete host.ref[thisRefName];\n            }\n            this.#boundAttributesToState = {};\n            this.#unbindEvents();\n        }\n\n        connectedCallback() {\n            if (this.#wasMounted) return;\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            // THIS SHOULD BE THE FIRST THING THAT HAPPENS!\n            this.host = this.getRootNode().host;\n\n            if (!this.isNativeElement) {\n                // If this is a custom element - normal attributes are used as State Initializers,\n                // We should add to initial state from them, before making it \"live\"\n                const attributeNames = this.getAttributeNames();\n                let attrValue;\n                for (const attrName of attributeNames) {\n                    attrValue = this.getAttribute(attrName);\n                    if (attrValue.indexOf('@') === 0) {\n                        this.initialState ??= {};\n                        this.initialState[attrName] = attributeValueToTypedValue(attrValue.substring(1));\n                    }\n                }\n                this.#setActiveStateFromInitialState();\n            }\n\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            if (!this.isNativeElement && !noRender) {\n                // We mostly queue as microtask to allow custom slot elements to\n                // be attached to the light DOM first.\n                this.#renderTemplate();\n            }\n            const commands = [];\n            const attributeNames = this.getAttributeNames();\n            for (const attrName of attributeNames) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                    // COMMAND_ATTRIBUTES[command]?.call(this, attrValue);\n                }\n            } \n\n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n            if (!this.isNativeElement) {\n                queueBindEvents(this, ()=> this.#bindEvents());\n                if (this.#onMount) queueMicrotask(()=> this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]()));\n                if (this._onRender) this._onRender.call(this);\n            }\n            else {\n                if (this.textContent.indexOf('${') !== -1) {\n                    this.textContent = this.#resolveTextContentTemplateString();\n                }\n            }\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n    \n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.isNativeElement ? this.host : this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n        //static get observedAttributes() { return [\"todo-name\"]; }\n    }\n\n    // The \"initialSetX\" functions are called:\n    // 1. When a custom element instance is first created (before it's connected) - \n    // state attribute values are set to their state prop names (e.g: '$name').\n    // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n    // value of their respective state prop values, and binding between them occurs.\n    ReactiveElement.prototype.initialSetText = function (stateProp) {\n        setStateText.call(this, stateProp);\n    }\n    ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n        attributeValue = String(attributeValue);\n        let valueToSet = attributeValue;\n\n        // \"Property Attribute\"\n        if (attributeValue.indexOf('@') === 0 && this.host && this.isConnected) {\n            valueToSet = this.host.getAttribute(attributeValue.substring(1));\n        } \n        \n        // \"State attribute\"\n        if (attributeValue.indexOf('$') === 0 && this.isConnected)  {\n            let stateProp = attributeValue.substring(1);\n            setStateAttribute.call(this, attributeName, stateProp);\n        }\n        // normal attribute\n        else {\n            setAttribute.call(this, attributeName, valueToSet);\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","import { attributeValueToTypedValue } from \"./attr_utils\";\nimport { CONDITIONAL_OPERATORS } from \"./consts\";\nimport { queueConditionalRender } from \"./paint_utils\";\n\n// returns a Boolean according to the conditional equality of conditional to conditionStateValue\nexport function resolveConditional(conditional, conditionStateValue) {\n    const typeOf = typeof conditional;\n    if (typeOf !== 'string') {\n        return conditionStateValue === conditional;\n    }\n    else {\n        if (conditional === \"always\") return true;\n        if (CONDITIONAL_OPERATORS.includes(conditional[0])) {\n            const conditionFn = new Function(`return ${conditionStateValue}${conditional}`);\n            return conditionFn();\n        }\n        else {\n            return conditionStateValue === conditional;\n        }\n    }\n}\n\nexport function getConditionalElementClass(ReactiveElementClass) {\n    class ConditionalElement extends ReactiveElementClass {\n\n        #conditionStateProp\n        #renderMap\n        #wasMounted = false\n\n        render(isFirstRender=false) {\n            let stateValue;\n            if (this.#conditionStateProp.indexOf('@') === 0) {\n                stateValue = this.host.getAttribute(this.#conditionStateProp.substring(1));\n            }\n            else {\n                stateValue = this.getState(this.#conditionStateProp);\n            }\n\n            if (stateValue === undefined) {\n                throw Error(`State value for ${this.#conditionStateProp} not found while rendering conditional-render element:`, this);\n            }\n            const elementsToRender = [];\n\n            this.#renderMap.forEach((elements, conditional)=> {\n                if (resolveConditional(conditional, stateValue)) {\n                    elementsToRender.push(...elements);\n                }\n            });\n\n            if (isFirstRender) {\n                this.innerHTML = \"\";\n                this.append(...elementsToRender);\n            }\n            else if (elementsToRender.length) {\n                queueConditionalRender(this, ()=> {\n                    this.innerHTML = \"\";\n                    this.append(...elementsToRender);\n                });\n            }\n        }\n        connectedCallback() {\n            this.host = this.getRootNode().host;\n            if (!this.host) {\n                throw Error(\"<conditional-render> must be used as part of a custom element template! Cannot be used outside of a custom element.\");\n            }\n            if (this.#wasMounted) return;\n            const conditionAttributeValue = this.getAttribute(\"_condition\");\n            if (!conditionAttributeValue) {\n                throw Error(\"conditional-render elements must have a _condition command attribute\");\n            }\n            if (!this.children || !this.children.length) {\n                throw Error(\"Conditional element must have children!\");\n            }\n\n            const statePropName = conditionAttributeValue;\n            this.#conditionStateProp = statePropName;\n\n            const isConditionStatic = this.#conditionStateProp.indexOf('@') === 0;\n            let stateValue, stateObject;\n            if (!isConditionStatic) {\n                [stateValue, stateObject] = this.getState(statePropName, true);\n                if (typeof stateValue === \"undefined\") {\n                    throw Error(`State property ${statePropName} not defined for _condition command!`);\n                }\n            }\n            const renderMap = new Map();\n            renderMap.set(\"always\", []);\n            const children = [...this.children];\n\n            children.forEach(conditionalChild=> {\n                const _if = conditionalChild.getAttribute('_if');\n                if (_if) {\n                    const expectedValue = attributeValueToTypedValue(_if);\n                    if (!renderMap.has(expectedValue)) renderMap.set(expectedValue, []);\n                    renderMap.get(expectedValue).push(conditionalChild);\n                }\n                else {\n                    renderMap.get(\"always\").push(conditionalChild);\n                }\n            });\n            this.#renderMap = renderMap;\n\n            if (!isConditionStatic) {\n                stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n            }\n            this.render(true);\n            this.#wasMounted = true;\n        }\n    }\n\n    return ConditionalElement;\n}\n\n","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build/index.js';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getConditionalElementClass } from \"./ConditionalElement.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\n\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new StateManager(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    appScope.ReactiveElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => \n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            { extends: itemDefinition.element })\n        \n    );\n\n    const ReactiveConditionalElementClass = extendElementClassWithReactiveElementClass(HTMLElement, appScope, true);\n    const ConditionalElementClass = getConditionalElementClass(ReactiveConditionalElementClass); \n    customElements.define('conditional-render', ConditionalElementClass);\n\n    return function() {\n        SproutBuild(appScope, appName);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","HTMLSlotElement","_HTMLElement","_class","_classCallCheck","_callSuper","arguments","_inherits","_wrapNativeSuper","HTMLElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","NODES_STATE","nodeActionsMap","Map","eventBindingFunctions","conditionalRenders","paintRafId","eventBindRafId","conditionalRenderRafId","CONDITIONAL_OPERATORS","MAX_OPERATIONS_PER_ANIMATION_FRAME","isElementAList","tagName","queueBindEvents","bindFunction","set","size","cancelAnimationFrame","requestAnimationFrame","forEach","bindFn","queuePaint","DOMActions","batchActions","nodeActions","node","hasOwnProperty","value","setAttribute","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","replace","newNode","oldNode","replaceChild","remove","values","removes","nodeToRemove","parentNode","removeChild","append","appends","newChildElement","appendChild","resolveNodeActionsMapToDOMActions","DOMAction","doUpdateDOM","queueConditionalRender","renderFunction","renderFn","setStateNodeAction","nodeActionsObject","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeToAppend","stateIdentifier","has","Set","get","add","getNewNodeActionsObject","after","hasPendingActions","this","generateStateNodeActions","stateManager","_this","state","stateNodes","stateMaps","stateArrayMaps","conditionallyRenderingElements","stateMapArray","_ref","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","render","setHiddenProperty","obj","propName","propValue","enumerable","Object","defineProperty","configurable","writable","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","attributeValueToTypedValue","typedValue","Boolean","isNaN","Number","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","condition","_this2","stateValue","slotHost","host","slotChildren","nodesToAssign","slotChildElement","_if","conditionalSlotChild","querySelectorAll","child","expectedValue","assign","addConditionallyRenderingElements","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","appScope","window","statefulArray","rawArray","item","index","StateManager","_defineProperty","_possibleConstructorReturn","Proxy","StatefulArrayHandler","key","_get2","$$operation","_len","args","_key","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","parentStateManager","targetArray","property","setResult","Reflect","doStateChangeHandle","receiver","initialState","parentStateProp","isGlobal","stateObj","targetState","descriptor","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$","depProp","dep","definePropertyResult","addGlobalStateDependency","originalProperty","StateHandler","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","_element$host","originalParentElement","shadowRoot","stateNode","isBooleanStateProp","setAndBindStateProperty","getOwnPropertyDescriptor","isValueProp","privateState","negateStateProp","extendElementClassWithReactiveElementClass","elementClass","noRender","_onMount","WeakMap","_wasMounted","_boundAttributesToState","_templateContent","_stylesheet","_globalStylesheet","_events","_boundEventNames","_eventHandler","_changeEventHandler","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","template","runtimeScript","style","globalStylesheet","_classPrivateFieldInitSpec","isReactiveElement","isSpecialElement","isNativeElement","runtime","Function","dynamicRuntimeFn","_assertClassBrand","_setRuntime","_classPrivateFieldSet","cloneNode","stylesheet","CSSStyleSheet","replaceSync","ref","initState","_classPrivateFieldGet","propertyName","newValue","strings","attributeNames","reduce","str","_this2$host","replaceAll","_this$host","thisRefName","_unbindEvents","_this3","getRootNode","_step","_iterator","_createForOfIteratorHelper","getAttributeNames","s","n","done","_this$initialState","err","e","f","_setActiveStateFromInitialState","changeEvent","Event","bubbles","composed","dispatchEvent","_renderTemplate","_step2","commands","_iterator2","initialSetAttribute","command","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","_resolveTextContentTemplateString","_bindEvents","queueMicrotask","_onRender","oldValue","isConnected","refValue","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","refName","root","SPROUT_CONFIG","useShadow","querySelector","_this4","events","onMount","attachShadow","mode","adoptedStyleSheets","fragment","DocumentFragment","_this5","removeEventListener","thiselement","eventName","_classPrivateFieldGet2","_this6","eventRefNames","keys","clickActions","otherActions","event","eventsObject","elementsPath","composedPath","find","_eventsObject$ref","eventNames","_loop","_eventNames2","_i","resolveTextContentFn","toLowerCase","attributeValue","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineElementFromTemplate","_callee","templateContent","_context","importNode","content","customElements","_appScope$ReactiveEle","_next","_throw","globalStyle","_x","_x2","_x3","defineElementFromTemplate","getConditionalElementClass","ReactiveElementClass","_conditionStateProp","_renderMap","ConditionalElement","_ReactiveElementClass","isFirstRender","elementsToRender","conditional","conditionStateValue","conditionFn","resolveConditional","conditionAttributeValue","isConditionStatic","renderMap","conditionalChild","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","itemDefinition","extends","ConditionalElementClass","SproutBuild"],"sourceRoot":""}
{"version":3,"file":"sprout-core.min.js","mappings":"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","sources":["webpack://jssprout/./src/core/consts.js","webpack://jssprout/./src/core/DOM_utils.js","webpack://jssprout/./src/core/paint_utils.js","webpack://jssprout/./src/core/node_actions.js","webpack://jssprout/./src/core/prop_utils.js","webpack://jssprout/./src/core/state_utils.js","webpack://jssprout/./src/core/commands.js","webpack://jssprout/./src/core/ReactiveElement.js","webpack://jssprout/./src/core/StatefulArray.js","webpack://jssprout/./src/core/proxy_handlers.js","webpack://jssprout/./src/core/StateManager.js","webpack://jssprout/./src/build/index.js","webpack://jssprout/./src/core/ConditionalElement.js","webpack://jssprout/./src/core/attr_utils.js","webpack://jssprout/./src/core/ReactiveCustomElement.js","webpack://jssprout/./src/core/index.js"],"sourcesContent":["import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\n\nexport const BOOLEAN_ATTRIBUTES = [\n    'hidden',\n    'checked'\n]\n\nexport const SUPPORTED_ATTRIBUTES_FOR_BINDING = [\n    'hidden',\n    'value',\n    'checked'\n]\n\n// Some elements like inputs has certain properties that can be used in _bind command, like: 'value', or 'checked\nexport const SUPPORTED_PROPERTIES_FOR_BINDING = [\n    'value',\n    'checked'\n]\nexport const SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING = [\n    null, // If no type is specified - defaults to 'text' - \n    // getAttribute('type') returns null\n    'text', \n    'color', \n    'date', \n    'datetime-local', \n    'email', \n    'month', \n    'number', \n    'password',\n    'range',\n    'search',\n    'tel',\n    'time',\n    'url',\n    'week'\n];\n\n// These are \"built-in\" state props that are automatically added to state objects,\n// and should not be included in the normal state change/check flow\nexport const BUILT_IN_STATE_PROPS = [\n    '_global',\n    '_gettingDependenciesFor',\n    '_localStateManager',\n    '_stateManager',\n    '_binding',\n    '_populate',\n    '_isActive'\n]\n\nexport const GLOBAL_STATE_VAR_NAME = \"SproutGlobalState\";\nexport const GLOBAL_STATE_FUNCTION_NAME = \"getGlobalState\";\n\nexport const ERROR_MESSAGES = {\n    NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp) {\n        return `State set hook, must include a dependencies array! None was found for ${stateProp}`;\n    }\n}\n\nexport const HTML_ELEMENTS_CLASSES_MAP = [\n    { class: HTMLAnchorElement, element: \"a\" },\n    { class: HTMLAreaElement, element: \"area\" },\n    { class: HTMLAudioElement, element: \"audio\" },\n    // { class: HTMLBaseElement, element: \"base\" },\n    { class: HTMLBodyElement, element: \"body\" },\n    { class: HTMLBRElement, element: \"br\" },\n    { class: HTMLButtonElement, element: \"button\" },\n    { class: HTMLCanvasElement, element: \"canvas\" },\n    { class: HTMLDataElement, element: \"data\" },\n    { class: HTMLDataListElement, element: \"datalist\" },\n    { class: HTMLDetailsElement, element: \"details\" },\n    { class: HTMLDialogElement, element: \"dialog\" },\n    { class: HTMLDivElement, element: \"div\" },\n    { class: HTMLDListElement, element: \"dl\" },\n    { class: HTMLEmbedElement, element: \"embed\" },\n    { class: HTMLFieldSetElement, element: \"fieldset\" },\n    { class: HTMLFormElement, element: \"form\" },\n    /*\n    { class: HTMLHeadingElement, element: \"h1\" },\n    { class: HTMLHeadingElement, element: \"h2\" },\n    { class: HTMLHeadingElement, element: \"h3\" },\n    { class: HTMLHeadingElement, element: \"h4\" },\n    { class: HTMLHeadingElement, element: \"h5\" },\n    { class: HTMLHeadingElement, element: \"h6\" },\n     */\n    { class: HTMLHRElement, element: \"hr\" },\n    { class: HTMLHtmlElement, element: \"html\" },\n    { class: HTMLIFrameElement, element: \"iframe\" },\n    { class: HTMLImageElement, element: \"img\" },\n    { class: HTMLInputElement, element: \"input\" },\n    { class: HTMLLabelElement, element: \"label\" },\n    { class: HTMLLegendElement, element: \"legend\" },\n    { class: HTMLLIElement, element: \"li\" },\n    { class: HTMLLinkElement, element: \"link\" },\n    { class: HTMLMapElement, element: \"map\" },\n    { class: HTMLMetaElement, element: \"meta\" },\n    { class: HTMLMeterElement, element: \"meter\" },\n    { class: HTMLObjectElement, element: \"object\" },\n    { class: HTMLOListElement, element: \"ol\" },\n    { class: HTMLOptGroupElement, element: \"optgroup\" },\n    { class: HTMLOptionElement, element: \"option\" },\n    // { class: HTMLOutputElement, element: \"output\" },\n    { class: HTMLParagraphElement, element: \"p\" },\n    // { class: HTMLParamElement, element: \"param\" },\n    { class: HTMLPictureElement, element: \"picture\" },\n    { class: HTMLPreElement, element: \"pre\" },\n    { class: HTMLProgressElement, element: \"progress\" },\n    { class: HTMLQuoteElement, element: \"blockquote\" },\n    { class: HTMLQuoteElement, element: \"q\" },\n    // { class: HTMLScriptElement, element: \"script\" },\n    { class: HTMLSelectElement, element: \"select\" },\n    { class: HTMLSourceElement, element: \"source\" },\n    { class: HTMLSpanElement, element: \"span\" },\n    // { class: HTMLStyleElement, element: \"style\" },\n    { class: HTMLTableElement, element: \"table\" },\n    { class: HTMLTableCellElement, element: \"td\" },\n    { class: HTMLTableCellElement, element: \"th\" },\n    { class: HTMLTableRowElement, element: \"tr\" },\n    { class: HTMLTableSectionElement, element: \"thead\" },\n    { class: HTMLTableSectionElement, element: \"tbody\" },\n    { class: HTMLTableSectionElement, element: \"tfoot\" },\n    { class: HTMLTextAreaElement, element: \"textarea\" },\n    { class: HTMLTimeElement, element: \"time\" },\n    { class: HTMLTitleElement, element: \"title\" },\n    { class: HTMLTrackElement, element: \"track\" },\n    { class: HTMLUListElement, element: \"ul\" },\n    { class: HTMLVideoElement, element: \"video\" },\n    { class: HTMLSlotElement, element: \"slot\" },\n    // We can't use HTMLElement more than once, so we will use a class extending it\n    // { class: class extends HTMLElement{}, element: \"code\" }\n];\n\n// For development purposes only,\n// turn this on to see exactly which functions in each entity are called and when.\nexport const DEBUG_MODE = false;\n\nexport const DEFAULT_TEMPLATE_DOM = document.createElement('div');\n\nexport const NODES_STATE = {\n    // This is a global object that maps abstract \"DOM actions\" to nodes (the nodes can be elements, text nodes, attribute nodes)\n    // It is resolved to actual DOM API functions on RequestAnimationFrame calls, and then is RESET.\n    // it is a \"singleton\" object\n    nodeActionsMap: new Map(),\n    // Maps events binding functions to (custom) elements\n    eventBindingFunctions: new Map(),\n    conditionalRenders: new Map(),\n    // Save requestAnimationFrame Id, to cancel if the rAF wasn't called yet on the same frame, so DOM operations will be batched to a single frame,\n    // preventing several rAFs running for the same frame\n    paintRafId: null,\n    // Similar as above but for event bindings\n    eventBindRafId: null,\n    // Same for conditional renders\n    conditionalRenderRafId: null,\n    activateRafId: null,\n    elementActivateFunctions: new Map()\n}\n\nexport const CONDITIONAL_OPERATORS = [\n    '=',\n    '==',\n    '!=',\n    '!==',\n    '<',\n    '<=',\n    '>',\n    '>='\n];\n\nexport const MAX_OPERATIONS_PER_ANIMATION_FRAME = 100;\n","export function isElementAList(element) {\n  return element.tagName === \"OL\" || element.tagName === \"UL\";\n}\n\n","import { doUpdateDOM } from \"./node_actions\";\nimport { NODES_STATE, MAX_OPERATIONS_PER_ANIMATION_FRAME } from \"./consts\";\n\nlet { \n    paintRafId,\n    eventBindingFunctions, \n    eventBindRafId, \n    conditionalRenderRafId,\n    conditionalRenders,\n    nodeActionsMap,\n    activateRafId,\n    elementActivateFunctions\n} = NODES_STATE; \n\nexport function queueBindEvents(element, bindFunction) {\n    eventBindingFunctions.set(element, bindFunction);\n    if (eventBindingFunctions.size < MAX_OPERATIONS_PER_ANIMATION_FRAME) {\n        if (eventBindRafId) cancelAnimationFrame(eventBindRafId);\n        eventBindRafId = null;\n    }\n    if (!eventBindRafId) {\n        eventBindRafId = requestAnimationFrame(()=> {\n            eventBindRafId = null;\n            eventBindingFunctions.forEach(bindFn=> bindFn());\n            eventBindingFunctions.clear();\n        });\n    }\n}\n\nexport function queueActivate(element, activateFn) {\n    elementActivateFunctions.set(element, activateFn);\n    if (elementActivateFunctions.size < MAX_OPERATIONS_PER_ANIMATION_FRAME) {\n        if (activateRafId) cancelAnimationFrame(activateRafId);\n        activateRafId = null;\n    }\n    if (!activateRafId) {\n        activateRafId = requestAnimationFrame(()=> {\n            activateRafId = null;\n            elementActivateFunctions.forEach(activateFn=> activateFn());\n            elementActivateFunctions.clear();\n        });\n    }\n}\n\nexport function queuePaint() {\n    if (nodeActionsMap.size < MAX_OPERATIONS_PER_ANIMATION_FRAME) {\n        if (paintRafId) cancelAnimationFrame(paintRafId);\n        paintRafId = null;\n    }\n    if (!paintRafId) {\n        paintRafId = requestAnimationFrame(()=> {\n            paintRafId = null;\n            doUpdateDOM();\n        });\n    }\n}\nexport function queueConditionalRender(element, renderFunction) {\n    conditionalRenders.set(element, renderFunction);\n    if (conditionalRenders.size < MAX_OPERATIONS_PER_ANIMATION_FRAME) {\n        if (conditionalRenderRafId) cancelAnimationFrame(conditionalRenderRafId);\n        conditionalRenderRafId = null;\n    }\n    if (!conditionalRenderRafId) {\n        conditionalRenderRafId = requestAnimationFrame(()=> {\n            conditionalRenderRafId = null;\n            conditionalRenders.forEach(renderFn=> renderFn());\n            conditionalRenders.clear();\n        });\n    }\n}","import { stateToElement, resolveStateMapToDocumentFragment } from \"./state_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { queueConditionalRender, queuePaint } from \"./paint_utils.js\";\nimport { NODES_STATE } from \"./consts.js\";\n\n// Also, if doesn't exist - create it\nfunction getNodeActionsForNode(node) {\n    const { nodeActionsMap } = NODES_STATE;\n    if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, getNewNodeActionsObject());\n    const nodeActions = nodeActionsMap.get(node);\n    return nodeActions;\n}\n\nexport function setStateNodeAction(node, nodeActionsObject, value) {\n    if (node.nodeType === Node.ATTRIBUTE_NODE)\n        nodeActionsObject[\"setAttribute\"] = value; \n    else if (node.nodeType === Node.TEXT_NODE)\n        nodeActionsObject[\"textContent\"] = value;\n}\n\nexport function addRemoveAction(nodeActions, elementToRemove, stateIdentifier) {\n    if (!nodeActions.remove.has(stateIdentifier)) {\n        nodeActions.remove.set(stateIdentifier, new Set())\n    }\n    nodeActions.remove.get(stateIdentifier).add(elementToRemove);\n}\nexport function addReplaceAction(nodeActions, oldElement, newElement) {\n    nodeActions.replace.set(oldElement, newElement);\n}\nexport function addSwitchAction(nodeActions, newElement) {\n    nodeActions.switch = newElement;\n}\n// stateIdentifier can be a State object (for state maps),\n// or a State property (for conditionally rendered elements)\nexport function addAppendAction(nodeActions, nodeToAppend, stateIdentifier) {\n    if (!nodeActions.append.has(stateIdentifier)) {\n        nodeActions.append.set(stateIdentifier, new Set());\n    }\n    nodeActions.append.get(stateIdentifier).add(nodeToAppend);\n}\nexport function addStateAttributeToNode(attributeNode, value) {\n    const nodeActions = getNodeActionsForNode(attributeNode);\n    setStateNodeAction(attributeNode, nodeActions, value);\n}\nexport function addAppendActionToNode(node, nodeToAppend, stateIdentifier) {\n    const nodeActions = getNodeActionsForNode(node);\n    addAppendAction(nodeActions, nodeToAppend, stateIdentifier);\n}\n\n// This is an object used to represent pending node actions,\n// that are batched and executed in reflows (requestAnimationFrame)\nexport function getNewNodeActionsObject() {\n    return ({\n        // Nodes to append to the end of node's children, \n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        append: new Map(),\n        // Replace each key node on Map, with value node\n        replace: new Map(),\n        // Insert value node after key node in parent node's children\n        after: new Map(),\n        // Remove these nodes from the DOM\n        // keys are state objects, or state props (string) \n        // to prevent duplicate pending\n        remove: new Map(),\n        switch: null,\n        get hasPendingActions() {\n            return (\n                this.switch !== null ||\n                this.append.size || \n                this.replace.size || \n                this.after.size || \n                this.remove.size\n            );\n        }\n    });\n}\n\n\n// This *updates*/*\"fills\"* the nodeActionsMap!\nexport function generateStateNodeActions(stateManager, stateProp) {\n    const { nodeActionsMap } = NODES_STATE;\n    const value = stateManager.state[stateProp];\n    const stateNodes = stateManager.stateNodes[stateProp];\n    // This is a map, where keys are \"parent elements\" containing \n    // custom element instanced created from a state array (\"state map\").\n    // The values are the custom element name. \n    // The actual array of state objects is in state[stateProp]\n    const stateMapElements = stateManager.stateArrayMaps[stateProp];\n    const conditionallyRenderingElements = stateManager.conditionallyRenderingElements[stateProp];\n\n    // Note, since the value change is handled by a custom setter - that setter checks if the set value is the same - \n    // if it is - it won't call handleStateChange, and it won't reach here.\n    if (stateNodes) {\n        stateNodes.forEach(node=> {\n            if (!nodeActionsMap.has(node)) nodeActionsMap.set(node, {});\n            const nodeActionsObject = nodeActionsMap.get(node);\n            setStateNodeAction(node, nodeActionsObject, value);\n        });\n    }\n\n    if (stateMapElements) {\n        // An array of state objects\n        const stateMapArray = value;\n        stateMapElements.forEach((customElementName, parentElement)=> {\n            //const newMappedElement = parentElement.cloneNode(true);\n            const stateMapNodeActions = getNewNodeActionsObject();\n            let currentStateMapArrayIndex = -1;\n            const isParentAList = isElementAList(parentElement);\n            // Compares state map arrays to actual DOM elements (by comparing state objects)\n            if (parentElement.children.length) {\n                Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n                    let customElement = childElement;\n                    // State map elements inside Lists are wrapped with a <li>\n                    if (isParentAList) customElement = childElement.firstElementChild;\n                    let stateItem = stateMapArray[currentIndex]; \n                    if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n                    if (!stateItem) {\n                        addRemoveAction(stateMapNodeActions, childElement);\n                        // newMappedElement.removeChild(newMappedElement.children[currentIndex]);\n                    }\n                    else if (customElement.state !== stateItem) {\n                        const replaceWithChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                        // newMappedElement.replaceChild(replaceWithChild, newMappedElement.children[currentIndex]);\n                        addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n                    }\n                    currentStateMapArrayIndex = currentIndex;\n                });\n            }\n\n            // If there are more state objects in the stateMapArray - append equivalent child elements \n            currentStateMapArrayIndex++;\n            for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n                const stateItem = stateMapArray[i];\n                // New state item === new child element to append\n                if (stateItem) {\n                    const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                    // newMappedElement.appendChild(newChild);\n                    addAppendAction(stateMapNodeActions, newChild, stateItem);\n                }\n            }\n\n            // addSwitchAction(stateMapNodeActions, newMappedElement);\n            if (stateMapNodeActions.hasPendingActions) {\n                nodeActionsMap.set(parentElement, stateMapNodeActions);\n            }\n        });\n    }\n\n    if (conditionallyRenderingElements) {\n        // Should be slot element\n        conditionallyRenderingElements.forEach(element=> {\n            queueConditionalRender(this, ()=> element.render());\n        });\n    }\n\n    if (nodeActionsMap.size) queuePaint();\n}\n\nfunction resolveNodeActionsMapToDOMActions() {\n    const batchActions = [];\n    const attributeActions = [];\n    const elementActions = [];\n\n    const { nodeActionsMap } = NODES_STATE;\n\n    nodeActionsMap.forEach((nodeActions, node)=> {\n        // Attribute change\n        if (nodeActions.hasOwnProperty(\"setAttribute\")) {\n            const value = nodeActions.setAttribute;\n            if (typeof value === \"boolean\") {\n                if (!node.hasOwnProperty(\"originalOwnerElement\")) {\n                    console.error(\"originalOwnerElement not found on boolean attribute node! Should never happen!\");\n                }\n                if (value === false) {\n                    // Remove attribute if it exists, otherwise - do nothing\n                    if (node.originalOwnerElement.hasAttribute(node.name)) {\n                        attributeActions.push(()=> {\n                            node.originalOwnerElement.removeAttributeNode(node);\n                        });\n                    }\n                }\n                // state changed to true\n                else {\n                    if (!node.originalOwnerElement.hasAttribute(node.name)) {\n                        attributeActions.push(()=> {\n                            node.originalOwnerElement.setAttributeNode(node);\n                        });\n                    }\n                }\n            }\n            else {\n                if (typeof value === \"string\" && node.nodeValue !== value) {\n                    attributeActions.push (()=> node.nodeValue = value);\n                }\n            }\n        }\n\n        // Text change\n        else if (nodeActions.hasOwnProperty(\"textContent\")) {\n            const value = String(nodeActions.textContent);\n            if (node.nodeValue === value) return;\n            elementActions.push (()=> node.nodeValue = value);\n        }\n\n        // DOM change\n        else if (nodeActions.switch) {\n            elementActions.push(()=> node.replaceWith(nodeActions.switch));\n        }\n        else {\n            nodeActions.replace.forEach((newNode, oldNode)=> {\n                elementActions.push(()=> \n                    //oldNode.replaceWith(newNode));\n                    node.replaceChild(newNode, oldNode));\n            });\n            for (const removes of nodeActions.remove.values()) {\n                for (const nodeToRemove of removes) {\n                    if (nodeToRemove.parentNode && nodeToRemove.parentNode === node) {\n                        elementActions.push(()=> node.removeChild(nodeToRemove));\n                    }\n                }\n            }\n            for (const appends of nodeActions.append.values()) {\n                for (const newChildElement of appends) {\n                    elementActions.push(()=> node.appendChild(newChildElement));\n                }\n            }\n        }\n    });\n\n    return [...attributeActions, ...elementActions];\n}\n\n// For debugging purposes\nexport function logNodeActions() {\n    const { nodeActionsMap } = NODES_STATE;\n    [...nodeActionsMap.entries()]\n    .map(([node, actions])=> {\n\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE: {\n                console.log (\"Actions for\", node);\n                const appendElements = [...actions.append.values()];\n                if (appendElements.length) {\n                    console.log(\"Append\", appendElements);\n                }\n                const replaceElements = [...actions.replace.entries()];\n                if (replaceElements.length) {\n                    console.log(\"Append\", replaceElements);\n                }\n                if (actions.remove.size) {\n                    console.log (\"Remove\", actions.remove);\n                }\n                break;\n            }\n\n            case Node.ATTRIBUTE_NODE: {\n                console.log (\"Set Attribute\", node.nodeName, \"on\", node.originalOwnerElement, \"to\", actions.setAttribute);\n                break;\n            }\n\n            case Node.TEXT_NODE: {\n                console.log (\"Set text content for\", node.parentNode, \"to\", actions.textContent);\n                break;\n            }\n        }\n    });\n}\n// This function runs on requestAnimationFrame to run pending Node actions\nexport function doUpdateDOM() {\n    let { nodeActionsMap } = NODES_STATE;\n    if (nodeActionsMap.size) {\n        // logNodeActions();\n        const DOMActions = resolveNodeActionsMapToDOMActions(nodeActionsMap);\n        DOMActions.forEach(DOMAction=> DOMAction());\n        NODES_STATE.nodeActionsMap = new Map();\n    }\n}\n\n","\n// Sets an internal read-only \"hidden\" property on an object:\nexport function setHiddenProperty(obj, propName, propValue, enumerable=false) {\n    Object.defineProperty(obj, propName, {\n        value: propValue,\n        configurable: false,\n        writable: false,\n        enumerable,\n    });\n}","import { BOOLEAN_ATTRIBUTES, BUILT_IN_STATE_PROPS } from \"./consts.js\";\nimport { generateStateNodeActions } from './node_actions.js';\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n\nif (typeof HTMLElement === 'undefined') {\n    console.warn (\"HTMLElement was not found! This probably means you are running in a non-browser environment, and can lead to unexpected results\");\n}\nelse {\n    // Make sure \"setAttribute\" is not overridable\n    Object.defineProperty(globalThis, \"elementSetAttribute\", {\n        value: HTMLElement.prototype.setAttribute,\n        writable: false,\n        configurable: false\n    });\n}\n\n\nexport const setAttribute = function(attrName, attrValue) {\n    if (BOOLEAN_ATTRIBUTES.includes(attrName)) {\n        if (attrValue === \"false\") {\n            this.removeAttribute(attrName);\n        }\n        else {\n            elementSetAttribute.call(this, attrName, \"\");\n        }\n    }\n    else {\n        elementSetAttribute.call(this, attrName, attrValue);\n    }\n}\n\n// This creates the binding to state props on \"State attributes\".\n// This function is called when a custom element instance ic connected to the DOM\nexport const setStateAttribute = function(attrName, stateProp) {\n    let equalityValue = null;\n    if (stateProp.indexOf(':') !== -1) {\n        if (stateProp.indexOf('is_') === 0) {\n            const colonIndex = stateProp.indexOf(':');\n            if (colonIndex === -1) {\n                throw Error(\"When using conditional equality state attribute, you must include a colon character followed by an equality value!\");\n            }\n            equalityValue = stateProp.substring(colonIndex+1);\n            stateProp = stateProp.substring(3, colonIndex);\n        }\n    }\n    let [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined) {\n        console.warn(`State value for ${stateProp} is undefined. State values should never be undefined.`)\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    if (equalityValue) {\n        const conditionalStateProp = \"is_\"+stateProp+equalityValue;\n        const originalStateProp = stateProp;\n        Object.defineProperty(theState, conditionalStateProp, {\n            get() {\n                return this[originalStateProp] === equalityValue\n            },\n            enumerable: false\n        });\n        theState._stateManager.addStateDependency(stateProp, conditionalStateProp);\n        stateVal = theState[conditionalStateProp];\n        stateProp = conditionalStateProp;\n    }\n\n    const valueToSet = stateVal;\n    this.removeAttribute(attrName);\n    // Create an \"Attribute Node\"\n    const stateAttrNode = document.createAttribute(attrName);\n    stateAttrNode.nodeValue = valueToSet;\n    // Saves a readonly boolean that marks this as a \"state attribute node\"\n    setHiddenProperty(stateAttrNode, \"isStateAttribute\", true);\n    // Save ownerElement to a different property,\n    // so if the attribute is removed (in case of a boolean attribute),\n    // and later re-attached, we would know which element to add it back to.\n    setHiddenProperty(stateAttrNode, \"originalOwnerElement\", this);\n/*\n    Object.defineProperty(stateAttrNode, \"stateValue\", {\n        value: valueToSet,\n        writeable: true,\n        configurable: false,\n        enumerable: true\n    });\n*/\n    if (typeof valueToSet === \"boolean\") {\n        // A boolean attribute value should ALWAYS be an empty string,\n        // the value itself never changes, it is removed fron the element if false, \n        // and added if true\n        stateAttrNode.nodeValue = \"\";\n    }\n\n    // Adds the attribute to the element\n    if (valueToSet !== false) {\n        this.setAttributeNode(stateAttrNode);\n    }\n\n    theState._stateManager.addStateNode(stateProp, stateAttrNode, typeof valueToSet === \"boolean\");\n\n}\nexport const setStateText = function(stateProp) {\n    const [stateVal, theState] = this.getState(stateProp, true); \n\n    if (stateVal === undefined || stateVal === null) {\n        console.warn(`State value for ${stateProp} is undefined or null for _text command`);\n        return;\n    }\n    if (!theState) {\n        console.warn (\"No State object with state prop: \" + stateProp);\n        return;\n    }\n    const valueToSet = stateVal;\n    const textNode = document.createTextNode(valueToSet);\n    setHiddenProperty(textNode, \"isStateAttribute\", true);\n    this.appendChild(textNode);\n    theState._stateManager.addStateNode(stateProp, textNode);\n}\n\n// Convert a stateObject to a custom element, used in State Map Arrays\nexport function stateToElement(stateObject, elemName, wrapInElement) {\n    const customElementInstance = document.createElement(elemName);\n    customElementInstance.setInitialState(stateObject);\n    let returnElement;\n    if (wrapInElement) {\n        returnElement = document.createElement(wrapInElement);\n        returnElement.appendChild(customElementInstance);\n    }\n    else {\n        returnElement = customElementInstance;\n    }\n    return returnElement;\n}\n\nexport function mapStateArrayToElements(stateItems, elemName, wrapInElement) {\n    // Each state item should be a stateManager\n    return stateItems.map(stateItem => {\n        if (stateItem.hasOwnProperty('state')) stateItem = stateItem.state;\n        if (typeof stateItem !== 'object') {\n            console.warn(\"item in State array for _map is not an object: \", stateItem);\n            return {};\n        }\n        return stateToElement(stateItem, elemName, wrapInElement);\n    });\n}\n\n// Main function that handles all state changes in a state object\nexport function handleStateChange(stateManager, stateProp) {\n    if (BUILT_IN_STATE_PROPS.includes(stateProp)) return;\n    // Populate the next Node Actions to perform\n    generateStateNodeActions(stateManager, stateProp);\n\n    const state = stateManager.state;\n    // Run on[stateProp]Change hooks\n    if (state.hasOwnProperty(`on_${stateProp}Change`)) {\n        if (typeof state[`on_${stateProp}Change`] === \"function\")\n            state[`on_${stateProp}Change`].call(state);\n    }\n\n    const stateDependencies = stateManager.stateDependencies[stateProp];\n    if (stateDependencies) {\n        stateDependencies.forEach(depStateProp=> {\n            // A \"Setter\" hook\n            if (depStateProp.indexOf('set_') === 0) {\n                const setStateProp = depStateProp.substring(4);\n                const func = state[depStateProp][0];\n                if (func && typeof func === \"function\") {\n                    state[setStateProp] = func.call(state);\n                    return;\n                }\n            }\n            generateStateNodeActions(stateManager, depStateProp);\n            if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                if (typeof state[`on${depStateProp}Change`] === \"function\")\n                    state[`on${depStateProp}Change`].call(state);\n            }\n        });\n    }\n\n    // Global state\n    if (!state._global) {\n        const globalStateDependencies = stateManager.globalStateDependencies[stateProp];\n        globalStateDependencies?.forEach((depStateProps, depStateManager)=> {\n            const depState = depStateManager.state;\n            depStateProps.forEach(depStateProp=> {\n                // A \"Setter\" hook\n                if (depStateProp.indexOf('set_') === 0) {\n                    const setStateProp = depStateProp.substring(4);\n                    const func = state[depStateProp][0];\n                    if (func && typeof func === \"function\") {\n                        depState[setStateProp] = func.call(depState);\n                        return;\n                    }\n                }\n                generateStateNodeActions(depStateManager, depStateProp);\n                if (state.hasOwnProperty(`on${depStateProp}Change`)) {\n                    if (typeof state[`on${depStateProp}Change`] === \"function\")\n                        depState[`on${depStateProp}Change`].call(depState);\n                }\n            });\n        });\n    }\n}\n\nexport function populateStateFromInitialState(state, initialState) {\n    state._populate = true;\n    const descriptors = Object.getOwnPropertyDescriptors(initialState);\n    let descrp;\n    for (let key in descriptors) {\n        if (BUILT_IN_STATE_PROPS.includes(key)) {\n            delete descriptors[key];\n            continue;\n        }\n        descrp = descriptors[key];\n        if (descrp.hasOwnProperty('get') && typeof descrp.get === \"function\") {\n            descrp.get.bind(state);\n        }\n        if (descrp.hasOwnProperty('value')) {\n            const value = descrp.value;\n            if (typeof value === \"function\") {\n                descrp.value.bind(state);\n            }\n            else if (Array.isArray(value) && key.indexOf(\"set_\") === 0) {\n                const func = value?.[0];\n                if (func && typeof func === \"function\") {\n                    func.bind(state);\n                }\n            }\n        }\n    }\n\n    // If state set hooks should run on initialization - \n    // they should run by the proxy handler for \"defineProperty\"\n    Object.defineProperties(state, descriptors);\n    delete state._populate;\n}\n\n/* Experimental rendering of state maps using DocumentFragment. Not stable */\n/* \nexport function resolveStateMapToDocumentFragment({ customElementName, parentElement}, stateMapArray) {\n    const resolvedDocumentFragment = new DocumentFragment();\n    // const stateMapNodeActions = getNewNodeActionsObject();\n    let currentStateMapArrayIndex = -1;\n    const isParentAList = isElementAList(parentElement);\n    // Compares state map arrays to actual DOM elements (by comparing state objects)\n    if (parentElement.children.length) {\n        Array.prototype.forEach.call(parentElement.children, (childElement, currentIndex)=> {\n            let customElementChild = childElement;\n            // State map elements inside Lists are wrapped with a <li>\n            if (isParentAList) customElementChild = childElement.firstElementChild;\n            let stateItem = stateMapArray[currentIndex]; \n            if (stateItem?.hasOwnProperty('state')) stateItem = stateItem.state;\n            if (stateItem && customElementChild.state !== stateItem) {\n                const newCustomElementChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n                resolvedDocumentFragment.appendChild(newCustomElementChild);\n            }\n            else {\n                resolvedDocumentFragment.append(childElement)\n            }\n            currentStateMapArrayIndex = currentIndex;\n        });\n    }\n\n    // If there are more state objects in the stateMapArray - append equivalent child elements \n    currentStateMapArrayIndex++;\n    for (let i = currentStateMapArrayIndex, len=stateMapArray.length; i<len; i++) {\n        const stateItem = stateMapArray[i];\n        // New state item === new child element to append\n        if (stateItem) {\n            // Make sure we don't already have a pending append action for the same state object\n            const newChild = stateToElement(stateItem, customElementName, isElementAList(parentElement) ? \"li\" : undefined);\n            resolvedDocumentFragment.appendChild(newChild);\n        }\n    }\n\n    return resolvedDocumentFragment;\n    if (resolvedDocumentFragment.children.length) {\n        parentElement.innerHTML = '';\n        //addReplaceAction(stateMapNodeActions, childElement, replaceWithChild);\n        //nodeActionsMap.set(parentElement, stateMapNodeActions);\n    }    \n}\n*/\n\n","import { mapStateArrayToElements } from \"./state_utils.js\";\nimport { SUPPORTED_ATTRIBUTES_FOR_BINDING, SUPPORTED_PROPERTIES_FOR_BINDING, SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { isElementAList } from \"./DOM_utils.js\";\nimport { attributeValueToTypedValue } from \"./attr_utils.js\";\n\nfunction mapStateToElements(stateItemsPropertyName, customElementName, parentElement) {\n    const [stateItemsArray, theState] = parentElement.getState(stateItemsPropertyName, true);\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n        console.warn (\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n        return null;\n    }\n    const wrapInElement = isElementAList(parentElement) ? \"li\" : undefined;\n    const elements = mapStateArrayToElements(stateItemsArray, customElementName, wrapInElement);\n    parentElement.innerHTML = \"\";\n    if (elements.length) {\n        parentElement.append(...elements);\n    }\n    return theState;\n}\n\n// Functions that run and handles \"Command\" attributes. Note, they should always be called\n// with the \"this\" context set to the custom element the command is defined on\nexport const COMMANDS = {\n    map: function(commandValue) {\n        // The command value (\"argument\") is \"<stateProp>:<custom element name>\"\n        const [stateItemsPropertyName, customElementName] = commandValue.split(':');\n        const thiselement = this;\n        const theState = mapStateToElements(stateItemsPropertyName, customElementName, thiselement);\n        if (!theState) {\n            console.warn (`Mapping ${stateItemsPropertyName} to ${customElementName} failed!`);\n            return;\n        }\n        theState._stateManager.addStateMap(stateItemsPropertyName, customElementName, thiselement);\n    },\n    text: function(commandValue) {\n        const stateProp = commandValue;\n        this.initialSetText(stateProp);\n        // DO NOT CALL .normalize()! It might change the Text Nodes!\n    },\n    bind: function(commandValue) {\n        const [attributeName, statePropName] = commandValue.split(':');\n        if (!attributeName || !statePropName) {\n            console.warn (\"Incorrect usage of _bind command! Please pass <attribute-name>:<state-prop-name>\");\n            return;\n        }\n        if (!attributeName in SUPPORTED_ATTRIBUTES_FOR_BINDING) {\n            console.warn (`Attribute ${attributeName} is not supported for _bind command!`);\n            return;\n        }\n        this.bindAttributeToState(attributeName, statePropName);\n\n        if (SUPPORTED_PROPERTIES_FOR_BINDING.includes(attributeName)) {\n            if (attributeName === \"value\" && this.tagName === \"INPUT\" && SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING.includes(this.getAttribute('type'))) {\n                this.addEventListener(\"input\", \n                    ()=> this.updateStateFromProperty(\"value\")\n                );\n            }\n            else if (attributeName === \"checked\" && this.tagName === \"INPUT\" && this.getAttribute('type') === \"checkbox\") {\n                this.addEventListener(\"change\", \n                    ()=> this.updateStateFromProperty(\"checked\")\n                );\n            }\n        }\n   },\n}","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { queueActivate } from \"./paint_utils.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\n\nexport function extendElementClassWithReactiveElementClass(elementClass, appScope = window) {\n    class ReactiveElement extends elementClass {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n\n        // For input elements - to force bubble-up of change events\n        #changeEventHandler\n\n        #wasMounted = false\n\n        // Used for the _bind command, which allows \"reverse-binding\" attribute values to state props,\n        // keys are attribute names, values are state prop names\n        #boundAttributesToState = {}\n\n        static observedAttributes = [\"ref\"]\n                                    .concat(SUPPORTED_ATTRIBUTES_FOR_BINDING)\n                                    .concat(Object.keys(COMMAND_ATTRIBUTES).map(command => ('_' + command.toLowerCase())));\n\n\n        bindAttributeToState(attrName, statePropName) {\n            this.#boundAttributesToState[attrName] = statePropName;\n        }\n        unbindAttributeToState(attrName) {\n            delete this.#boundAttributesToState[attrName];\n        }\n        \n        // For input elements\n        updateStateFromProperty(propertyName) {\n            let newValue = this[propertyName];\n            const stateProp = this.#boundAttributesToState[propertyName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n\n        }\n\n        #updateStateFromAttribute(attributeName) {\n            let newValue = this.getAttribute(attributeName);\n            if (BOOLEAN_ATTRIBUTES.includes(attributeName)) {\n                if (newValue === null) newValue = false;\n                else newValue = true;\n            }\n            const stateProp = this.#boundAttributesToState[attributeName];\n            const [stateValue, theState] = this.getState(stateProp, true);\n            if (stateValue !== newValue) theState[stateProp] = newValue;\n        }\n\n        disconnectedCallback() {\n            if (this.#changeEventHandler) this.removeEventListener('change', this.#changeEventHandler);\n            const host = this.host ?? this;\n            if (host.ref) {\n                const thisRefName = this.getAttribute('ref');\n                if (thisRefName) { \n                    delete host.ref[thisRefName];\n                    delete host.events[thisRefName];\n                }\n            }\n            this.#boundAttributesToState = {};\n        }\n\n        activate() {\n            // Keep it here and not in bindEvents! \n            if (this?.tagName === \"INPUT\") {\n                this.#changeEventHandler = function() {\n                    const changeEvent = new Event('inputChange', { bubbles: true, composed: true });\n                    this.dispatchEvent(changeEvent);\n                }\n                // Change events does not automatically bubbles, we need to listen and bubble up a new event\n                this.addEventListener('change', this.#changeEventHandler, false);\n            }\n\n            const commands = [];\n            const attributeNames = this.getAttributeNames();\n            for (const attrName of attributeNames) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n\n                // Save \"Command attributes\"\\\n                if (attrName.indexOf('_') === 0) {\n                    const command = attrName.substring(1);\n                    commands.push({ command, args: attrValue });\n                }\n            } \n            commands.forEach(({ command, args})=> {\n                COMMAND_ATTRIBUTES[command]?.call(this, args);\n            });\n\n        }\n        connectedCallback() {\n            if (this.#wasMounted) return;\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            // THIS SHOULD BE THE FIRST THING THAT HAPPENS!\n            this.host = this.getRootNode().host;\n            if (this.host) {\n                // Once the host custom element is connected\n                // then its 'State' is ready and activated,\n                // then we can call the sub-elements 'activate()',\n                // which relies on an active state.\n                // Doing it like this, allow visual render faster,\n                // defering the state handling.\n                this.host.addEventListener(\"connected\", \n                    ()=> this.activate()),\n                { once: true }\n            }\n            else {\n                // queueActivate(this, ()=> this.activate());\n                queueMicrotask(()=> this.activate());\n\n            }\n            this.#wasMounted = true;\n        }\n\n        attributeChangedCallback(attributeName, oldValue, newValue) { \n            if (oldValue === newValue) return;\n            if (!this.isConnected) return;\n\n            if (attributeName === \"ref\") {\n                const host = this.isNativeElement ? this.host : this;\n                const refValue = newValue;\n                host.ref[refValue] = this;\n            }\n\n            if (attributeName in this.#boundAttributesToState) {\n                this.#updateStateFromAttribute(attributeName);\n            }\n        }\n\n        // Gets state value of stateProp,\n        // tries to resolve from local state(s) first,\n        // and then from global. If the second argument is true, returns both the state value and the state objec\n        getState(stateProp, returnStateObject=false) {\n            let theState;\n            // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n            // we should reference its state, if host is null - it is most likely the host web component\n            let thisInstance = this.isNativeElement && this.host ? this.host : this;\n            // if (!thisInstance) return returnStateObject ? [undefined, undefined] : undefined;\n            let stateVal;\n            if (thisInstance && thisInstance.state) {\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            let globalState = false;\n            while (stateVal === undefined && typeof thisInstance.host !== 'undefined' && thisInstance.host !== null) {\n                thisInstance = thisInstance.host;\n                stateVal = thisInstance.state?.[stateProp];\n            }\n\n            if (stateVal !== undefined) theState = thisInstance.state;\n            else {\n                globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n                stateVal = globalState?.[stateProp];\n                if (stateVal !== undefined) theState = globalState;\n            } \n            if (returnStateObject) {\n                return [stateVal, theState];\n            }\n            return stateVal;\n        }\n        \n        findElement(refName) {\n            const host = this.host || this;\n            // if Shadow DOM is used, the \"root\" element is shadowRoot, otherwise it is the \n            // web component itself\n            let root = host;\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                root = host.shadowRoot;\n            }\n            return host.ref.hasOwnProperty(refName) ? host.ref[refName] : root.querySelector(`[ref=\"${refName}\"]`);\n        }\n\n        // The \"initialSetX\" functions are called:\n        // 1. When a custom element instance is first created (before it's connected) - \n        // state attribute values are set to their state prop names (e.g: '$name').\n        // 2. When a custom element instance becomes connected (added to the DOM) - state attribute values are actually resolved to the\n        // value of their respective state prop values, and binding between them occurs.\n        initialSetText(stateProp) {\n            setStateText.call(this, stateProp);\n        }\n        initialSetAttribute(attributeName, attributeValue) {\n            attributeValue = String(attributeValue);\n            let valueToSet = attributeValue;\n            /*\n            // \"Property Attribute\"\n            if (attributeValue.indexOf('@') === 0 && this.host && this.isConnected) {\n                valueToSet = this.host.getAttribute(attributeValue.substring(1));\n            } \n            */\n            \n            // \"State attribute\"\n            if (attributeValue.indexOf('$') === 0 && this.isConnected)  {\n                let stateProp = attributeValue.substring(1);\n                setStateAttribute.call(this, attributeName, stateProp);\n            }\n            // normal attribute\n            else {\n                setAttribute.call(this, attributeName, valueToSet);\n            }\n        }\n    }\n\n    /*\n    if (DEBUG_MODE) {\n        const descriptors = Object.getOwnPropertyDescriptors(ReactiveElement.prototype);\n        for (const key in descriptors) {\n            const descrp = descriptors[key];\n            Object.defineProperty(ReactiveElement.prototype, key, {\n                writable: descrp.writable,\n                configurable: descrp.configurable,\n                enumerable: descrp.enumerable,\n                value: ()=> {\n                    `Calling ${key} on ReactiveElement for ${elementClass.toString()}`;\n                    descrp.value();\n                }\n            });\n        }\n    }\n    */\n\n    return ReactiveElement;\n}\n","import StateManager from \"./StateManager.js\";\nimport { StatefulArrayHandler } from \"./proxy_handlers.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\n\nclass StatefulArray extends Array {\n\n    // This will define which \"constructor\" JS calls whenever it needs to construct a new array while calling some Array native functions\n    static get [Symbol.species]() {\n        return Array;\n    }\n\n    // If any of these are \"set\" - handle state change in the value\n    dependencyProps = new Map();\n\n    // We set the $$operation property on functions that manipulates the array in a way that can change its length,\n    // to prevent redundant calls for handleStateChange.\n    // The call will be made when the \"length\" property of the array will be changed\n    splice(...args) {\n        this.$$operation = \"splice\";\n        const result = super.splice(...args);\n        delete this.$$operation;\n        return result;\n    }\n    shift(...args) {\n        this.$$operation = \"shift\";\n        const result = super.shift(...args);\n        delete this.$$operation;\n        return result;\n    }\n    unshift(...args) {\n        this.$$operation = \"splice\";\n        const result = super.unshift(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    sort(...args) {\n        this.$$operation = \"sort\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    reverse(...args) {\n        this.$$operation = \"reverse\";\n        const result = super.reverse(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    fill(...args) {\n        this.$$operation = \"fill\";\n        const result = super.fill(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n    \n    copyWithin(...args) {\n        this.$$operation = \"copyWithin\";\n        const result = super.sort(...args);\n        delete this.$$operation;\n        handleStateChange(this.parentStateObject._stateManager, this.arrayStateProp);\n        return result;\n    }\n\n    slice(...args) {\n        this.$$operation = \"slice\";\n        const result = super.slice(...args);\n        delete this.$$operation;\n        return result;\n    }\n\n    /*\n    clone() {\n        this.$$operation = \"clone\";\n        const result = this.map(item=> item);\n        delete this.$$operation;\n        return result;\n    }\n    */\n    toArray() {\n        this.$$operation = \"toArray\";\n        /*\n        const result = [];\n        for (let i = 0, len=this.length; i<len; i++) {\n            result.push(Object.assign({}, this[i]));\n        }\n        */\n        const result = this.rawArray;\n        delete this.$$operation;\n        return result;\n    }\n    // noConvertToStateItems can be used in internal methods where a normal array is returned and you just want to recreate a StatefulArray,\n    // with the same state items\n\n    // NOTE: original Array constructor can get a series of arguments to build an array from, OR a single number,\n    // to create an array with that number as a length\n    constructor(initialArray, parentStateObject, arrayStateProp, noConvertToStateItems=false, appScope = window) {\n        const StateManager = appScope.SPROUT_CONFIG.stateManagerClass;\n\n        if (!Array.isArray(initialArray)) {\n            throw Error(\"Argument for StateFulArray constructor must be an array!\");\n        }\n\n        const rawArray = initialArray;\n        let statefulArray;\n        if (!noConvertToStateItems) {\n            statefulArray = rawArray.map((item, index)=> {\n                if (item?.hasOwnProperty('state')) return item;\n                if (Array.isArray(item)) return item; // return new StatefulArray(item, this[index].state, index, false, appScope); \n                if (typeof item === 'object') return new StateManager(item, arrayStateProp, parentStateObject._stateManager, false, appScope);\n                return item;\n            });\n        }\n        super(...statefulArray);\n\n        this.parentStateObject = parentStateObject;\n        this.arrayStateProp = arrayStateProp;\n        this.rawArray = rawArray;\n\n        statefulArray = new Proxy(this, StatefulArrayHandler(parentStateObject?._stateManager, arrayStateProp, appScope));\n        return statefulArray;\n    }\n}\n\nif (DEBUG_MODE) {\n    StatefulArray = putObjectInDebugMode(StatefulArray, \"StatefulArray\");\n}\n\nexport default StatefulArray;","import StateManager from \"./StateManager.js\";\nimport { handleStateChange } from \"./state_utils.js\";\nimport StatefulArray from \"./StatefulArray.js\";\nimport { BUILT_IN_STATE_PROPS, ERROR_MESSAGES } from \"./consts.js\";\n\nexport const StatefulArrayHandler = function(parentStateManager, arrayStateProp, appScope = window) {\n    const StateManager = appScope.SPROUT_CONFIG.stateManagerClass;\n    return {\n        set(targetArray, property, value) {\n            // A change in array length triggers state change in the array state prop\n            if (property === \"length\") {\n                const setResult = Reflect.set(targetArray, property, value);\n                parentStateManager.setDirtyProp(arrayStateProp);\n                // queueMicrotask(()=> handleStateChange(parentStateManager, arrayStateProp));\n                return setResult;\n            }\n\n            // Return if the value is the same\n            if (targetArray[property] === value) return true;\n\n            const index = Number(property);\n            if (!isNaN(index)) { // Check if the property is a numeric index\n                // If we set it to a new object, convert it to a state object\n                if (typeof value === 'object' && (!value.hasOwnProperty('_stateManager') && !value.hasOwnProperty('state'))) {\n                    value = new StateManager(value, arrayStateProp, parentStateManager, false, appScope);\n                }\n                // Make sure state values are always state manager values\n                // Sometimes they can be state objects (because of the custom get handler in the Proxy)\n                if (value.hasOwnProperty('_stateManager')) {\n                    value = value._stateManager;\n                }\n                // This means the object actions are part of a native array function ('splice' etc.), and that we should NOT\n                // mark $$mapAction on values\n                if (!targetArray.hasOwnProperty('$$operation')) {\n                    let doStateChangeHandle = false;\n                    if (index < targetArray.length) {\n                        doStateChangeHandle = true;\n                    }\n                    const setResult = Reflect.set(targetArray, property, value);\n                    // Only handle state change if this is a change for an existing array item,\n                    // if it's a new item, it will already be handled on the \"length\" property set\n                    // Without this check we will have a redundant state check\n                    if (doStateChangeHandle) {\n                        parentStateManager.setDirtyProp(arrayStateProp);\n                        //queueMicrotask(()=> handleStateChange(parentStateManager, arrayStateProp));\n                    }\n                    return setResult;\n                }\n            }\n            return Reflect.set(targetArray, property, value);\n        },\n        \n        get(targetArray, property, receiver) {\n            // if (typeof property === 'symbol') return Reflect.get(...arguments);\n            // if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            const index = Number(property);\n            if (!isNaN(index)) {\n                if (!targetArray[index]) return undefined;\n                if (targetArray[index].hasOwnProperty('state')) return targetArray[index].state;\n                // Could be another array\n                return targetArray[index];\n            }\n\n            /*\n            // If this property is set on the array, it means the get is part of a \"dependency check\"\n            if (targetArray.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                targetArray.dependencyProps.set(property, targetArray._gettingDependenciesFor);\n                delete targetArray._gettingDependenciesFor;\n            }\n            */\n            \n            return Reflect.get(...arguments);\n        }\n    }\n}\n\nexport const StateObjectValueHandler = function(rootStateObj, objPropertyName, appScope = window) {\n    return {\n        defineProperty(targetObj, property, descriptor) {\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, rootStateObj, objPropertyName, false, appScope);\n                    }\n                }\n                else if (typeof value === \"object\") {\n                    descriptor.value = new Proxy(descriptor.value, StateObjectValueHandler(rootStateObj, objPropertyName, appScope))\n\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetObj);\n            }\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(targetObj, property, descriptor);\n            const stateManager = rootStateObj._stateManager;\n            stateManager.setDirtyProp(objPropertyName);\n            // queueMicrotask(()=> handleStateChange(stateManager, objPropertyName));\n            return definePropertyResult;\n        },\n    }\n}\nexport const StateHandler = function(stateObj, appScope = window) {\n    return {\n        defineProperty(targetState, stateProp, descriptor) {\n            if (BUILT_IN_STATE_PROPS.includes(stateProp) || targetState?._binding) {\n                return Reflect.defineProperty(...arguments);\n            }\n            const origTargetState = targetState;\n            const dependencies = new Set();\n            // Will be the actual prop name if this is a state hook setter\n            let setStateProp;\n            targetState = new Proxy(targetState, {\n                get(target, property, receiver) {\n                    if (property === \"_global\") {\n                        target._global._gettingDependenciesFor = stateProp;\n                        target._global._localStateManager = target._stateManager;\n\n                    }\n                    if (BUILT_IN_STATE_PROPS.includes(property)) {\n                        return Reflect.get(...arguments);\n                    }\n                    if (Array.isArray(target[property])) {\n                        target[property]._gettingDependenciesFor = stateProp;\n                    }\n                    dependencies.add(property);\n                    return Reflect.get(...arguments);\n                }\n            });\n            if (typeof descriptor?.value !== \"undefined\") {\n                const value = descriptor.value;\n                // Could already be a StatefulArray (needs to find better way to detect this)\n                if (Array.isArray(value)) {\n                    // Setter Hook\n                    if (stateProp.indexOf('set_') === 0) {\n                        const deps = value?.[1];\n                        if (!deps) throw Error(ERROR_MESSAGES.NO_DEPENDENCIES_ARRAY_IN_SET_HOOK(stateProp));\n                        // Second item should be an array of dependencies\n                        value?.[1].forEach(depProp=> {\n                            dependencies.add(depProp);\n                        });\n                        // Third item can be a boolean stating if to run the setter on initialization\n                        if (value?.[2] === true) {\n                            setStateProp = stateProp.substring(4);\n                            const func = value?.[0];\n                            if (func && typeof func === \"function\") {\n                                stateObj[setStateProp] = func.call(stateObj);\n                            }\n                        }\n                        else {\n                            if (value?.[3]) {\n                                stateObj[setStateProp] = value[3]\n                            }\n                        }\n                    }\n                    else if (!value?.[0]?._stateManager) {\n                        descriptor.value = new StatefulArray(descriptor.value, stateObj, stateProp, false, appScope);\n                    }\n                }\n                else if (typeof value === 'object') {\n                    descriptor.value = new Proxy(descriptor.value, StateObjectValueHandler(stateObj, stateProp, appScope));\n                }\n            }\n            else if (typeof descriptor?.get === \"function\") {\n                descriptor.get.call(targetState);\n            }\n\n            if (dependencies.size) {\n                dependencies.forEach(dep=> stateObj._stateManager.addStateDependency(dep, stateProp));\n            }\n\n            // Don't use \"arguments\" here - they are not linked to argument changes in 'strict'\n            const definePropertyResult = Reflect.defineProperty(origTargetState, stateProp, descriptor);\n            const stateManager = stateObj._stateManager;\n            if (setStateProp) stateProp = setStateProp;\n            if (!origTargetState.hasOwnProperty(\"_populate\"))\n                stateManager.setDirtyProp(stateProp);\n                // queueMicrotask(()=> handleStateChange(stateManager, stateProp));\n            return definePropertyResult;\n        },\n        get(targetState, property, receiver) {\n            if (property === 'hasOwnProperty') return Reflect.get(...arguments);\n            // Global state access\n            if (!targetState.hasOwnProperty('_global')) {\n                if (targetState.hasOwnProperty(\"_gettingDependenciesFor\")) {\n                    targetState._stateManager.addGlobalStateDependency(property, targetState._gettingDependenciesFor, targetState._localStateManager);\n                    delete targetState._gettingDependenciesFor;\n                    delete targetState._localStateManager;\n                    return Reflect.get(...arguments);\n                }\n            }\n            // property can be a Symbol on rare occasions, then indexOf will be undefined (that's the reason for the question mark)\n            // This handles using the negate operator on state properties\n            if (typeof property?.indexOf === 'function' && property?.indexOf('!') === 0) {\n                const originalProperty = property.substring(1);\n                if (targetState.hasOwnProperty(originalProperty)) {\n                    return !targetState[originalProperty];\n                }\n            }\n            return Reflect.get(...arguments);\n        }\n    }\n};\n","import { handleStateChange, populateStateFromInitialState } from \"./state_utils.js\";\nimport { StateHandler } from \"./proxy_handlers.js\";\nimport { GLOBAL_STATE_FUNCTION_NAME } from \"./consts.js\";\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\n\n// This class actually handles \"State\". It returns a proxied \"state\" object,\n// while handling all state changes and triggers behind the scenes\nclass StateManager {\n\n    // The privateState is used to actually contain values to read from,\n    // as custom getters and setters are defined\n    privateState = {}\n    // This represents the \"publicly\" exposed state object\n    state = {};\n\n    // Saves \"map\" connections between a state array value and a custom element name,\n    // this will enable creating/removing new custom elements when items of a state array change\n    stateArrayMaps = {};\n    // conditionallyRenderingElements = {};\n    // A map that maps state props to \"dependencies\", each time a stateProp which is a key here,\n    // is changed, a state change is triggered for its dependencies as well\n    stateDependencies = {};\n    conditionallyRenderingElements = {};\n\n    // Maps state props to state nodes,\n    // Keys are state props, and values are sets of Nodes\n    stateNodes = {}\n\n    // These are used when the state object is part of Stateful Array\n    parentStateProp\n    parentStateManager\n    // parentStatePropName is used if the state object is e.g. an item of an array on a state object,\n    // or a value in an object on a state object - any change on the child state object should trigger state\n    // changes on the parentStateProp\n    // host is the host element that the state is attached to\n    \n    dirtyProps = new Set();\n\n    #handleStateChangeRAF_ID = null;\n    setDirtyProp(prop) {\n        this.dirtyProps.add(prop);\n        if (this.#handleStateChangeRAF_ID) {\n            cancelAnimationFrame(this.#handleStateChangeRAF_ID);\n            // clearTimeout(this.#handleStateChangeRAF_ID);\n\n        }\n        this.#handleStateChangeRAF_ID = requestAnimationFrame(()=> {\n            this.#handleStateChangeRAF_ID = null;\n            if (this.dirtyProps.size > 0) {\n                this.handleStateChanges();\n            }\n        });\n    }\n\n    handleStateChanges() {\n        const stateProps = [...this.dirtyProps];\n        this.dirtyProps.clear();\n        stateProps.forEach(prop=> {\n            handleStateChange(this, prop);\n        });\n    }\n    constructor(initialState, parentStateProp, parentStateManager, isGlobal = false, appScope=window) {\n        this.parentStateProp = parentStateProp;\n        this.parentStateManager = parentStateManager;\n\n        // Saves the actual state manager instance to a readonly _stateManager\n        setHiddenProperty(this.state, \"_stateManager\", this, true);\n        \n        // Initialize a proxy on the \"public state\"\n        this.state = new Proxy(this.state, StateHandler(this.state, appScope));\n        if (!isGlobal) setHiddenProperty(this.state, \"_global\", appScope[GLOBAL_STATE_FUNCTION_NAME](), true);\n        else {\n            // This maps depencdies between \"local\" state properties to global state changes\n            // The difference between the normal dependencies object, is that each depenency\n            // also includes a state object (which is the state context of the property),\n            // in other words, if a local state \"relies\" on a global state change - we save this\n            // mapping here.\n            // The keys are global state properties, where each value is a Map,\n            // in the map, the keys are local state manager objects, and the values are sets with\n            // local property names\n            this.globalStateDependencies = {};\n            this.addGlobalStateDependency = (stateProp, depStateProp, stateManager)=> {\n                if (!this.globalStateDependencies.hasOwnProperty(stateProp)) {\n                    this.globalStateDependencies[stateProp] = new Map();\n                }\n                if (!this.globalStateDependencies[stateProp].has(stateManager)) {\n                    this.globalStateDependencies[stateProp].set(stateManager, new Set());\n                }\n                this.globalStateDependencies[stateProp].get(stateManager).add(depStateProp);\n            }\n        }\n        if (initialState) {\n            populateStateFromInitialState(this.state, initialState);\n        }\n\n        setHiddenProperty(this.state, \"_isActive\", this, true);\n    }\n\n    addStateDependency(stateProp, depStateProp) {\n        if (!this.stateDependencies.hasOwnProperty(stateProp)) {\n            this.stateDependencies[stateProp] = new Set();\n        }\n        this.stateDependencies[stateProp].add(depStateProp);\n    }\n\n    addStateMap(stateProp, customElementName, parentElement) {\n        if (!this.stateArrayMaps.hasOwnProperty(stateProp)) {\n            this.stateArrayMaps[stateProp] = new Map();\n        }\n        this.stateArrayMaps[stateProp].set(parentElement, customElementName);\n    }\n\n\n    addConditionallyRenderingElements(stateProp, element) {\n        if (!this.conditionallyRenderingElements.hasOwnProperty(stateProp)){\n            this.conditionallyRenderingElements[stateProp] = new Set();\n        }\n        element.originalParentElement = element.parentElement || element.host?.shadowRoot;\n        this.conditionallyRenderingElements[stateProp].add(element);\n    }\n    \n   \n    // Node here is either an Attribute Node or a Text Node\n    addStateNode(stateProp, stateNode, isBooleanStateProp=false) {\n        if (!this.stateNodes.hasOwnProperty(stateProp)) {\n            this.stateNodes[stateProp] = new Set();\n            this.setAndBindStateProperty(stateProp, isBooleanStateProp);\n        }\n        this.stateNodes[stateProp].add(stateNode);\n    }\n    setAndBindStateProperty(stateProp) {\n        let stateObj = this.state;\n        let originalStateProp = stateProp;\n        const isNegationProp = stateProp.indexOf('!') === 0;\n        if (isNegationProp) {\n            originalStateProp = stateProp.substring(1);\n        }\n        let descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n        if (!descriptor) {\n            stateObj = stateObj._global;\n            descriptor = Object.getOwnPropertyDescriptor(stateObj, originalStateProp);\n            if (!descriptor) {\n                throw Error(`Could not bind state prop ${stateProp}. State prop ${originalStateProp} not defined!`);\n            }\n        }\n\n        stateObj._binding = true;\n\n        // Some state props can be getters (which usually references other state values)\n        // These should be treated differently: should not be saved in privateState, and should not have a setter defined\n        const isValueProp = descriptor.hasOwnProperty('value');\n        const stateManager = stateObj._stateManager;\n\n        if (isNegationProp) {\n            const negateStateProp = stateProp;\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.privateState[originalStateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(originalStateProp, negateStateProp);\n                }\n            }\n            else {\n                if (!stateManager.state.hasOwnProperty(negateStateProp)) {\n                    Object.defineProperty(stateObj, negateStateProp, {\n                        get() {\n                            return !stateManager.state[originalStateProp];\n                        },\n                        set() {\n                            throw Error(\"Cannot directly set a negation State property!\");\n                        },\n                        enumerable: true,\n                    });\n                    stateManager.addStateDependency(originalStateProp, negateStateProp);\n                }\n            }\n        }\n        else {\n            if (isValueProp) {\n                if (!stateManager.privateState.hasOwnProperty(stateProp)) {\n                    stateManager.privateState[stateProp] = stateObj[stateProp];\n                }\n                Object.defineProperty(stateObj, stateProp, {\n                    set(value) {\n                        const currentVal = stateManager.privateState[stateProp];\n                        if (value === currentVal) return;\n                        // Sets value to \"private state\"\n                        stateManager.privateState[stateProp] = value;\n                        handleStateChange(stateManager, stateProp);\n                        // If this is an item in a Stateful Array, also trigger a state change for the state prop that contains the array\n                        if (stateManager.parentStateManager) {\n                            handleStateChange(stateManager.parentStateManager, stateManager.parentStateProp);\n                        }\n                    },\n                    get() {\n                        // Value is always retrieved from the \"private\" state\n                        return stateManager.privateState[stateProp];\n                    }\n                });\n            }\n            // If is a getter then - it can't be set, and the getter will return the value.\n        }\n        delete this.state._binding;\n    }\n}    \n\nif (DEBUG_MODE) {\n    StateManager = putObjectInDebugMode(StateManager, 'StateManager');\n}\n\nexport default StateManager;\n","\n\n// This is the script that takes Template elements from the page and defines Reactive Custom Elements\nexport default function(appScope, appName) {\n\n    // Create custom elements from templates\n    async function defineCustomElementFromTemplate(template, elemName, globalStylesheet) {\n        const templateContent = document.importNode(template.content, true);\n        const style = templateContent.querySelector('style');\n        if (style) templateContent.removeChild(style);\n        const runtime = templateContent.querySelector('script');\n        if (runtime) templateContent.removeChild(runtime);\n\n        customElements.define(\n            elemName, \n            class extends appScope.ReactiveCustomElement {\n                constructor() {\n                    super(templateContent, runtime, style?.textContent, globalStylesheet);\n                }\n            }\n        );\n    }\n\n    function build() {\n        let globalStylesheet;\n        const globalStyle = document.querySelector(`head > style[app=\"${appName}\"]`);\n        if (globalStyle) {\n            globalStylesheet = new CSSStyleSheet();\n            globalStylesheet.replaceSync(globalStyle.textContent);\n        }\n        Array.prototype.forEach.call(document.querySelectorAll(`template[app=\"${appName}\"]`), template => {\n            defineCustomElementFromTemplate(template, template.getAttribute('for'), globalStylesheet);\n        });\n        if (typeof globalThis[`${appName}_runtime`] === 'function') {\n            const globalRuntimeFunction = globalThis[`${appName}_runtime`];\n            globalRuntimeFunction.call(appScope);\n        }\n    }\n    build();\n}","import { attributeValueToTypedValue } from \"./attr_utils\";\nimport { CONDITIONAL_OPERATORS } from \"./consts\";\nimport { queueConditionalRender } from \"./paint_utils\";\n\n// returns a Boolean according to the conditional equality of conditional to conditionStateValue\nexport function resolveConditional(conditional, conditionStateValue) {\n    const typeOf = typeof conditional;\n    if (typeOf !== 'string') {\n        return conditionStateValue === conditional;\n    }\n    else {\n        if (conditional === \"always\") return true;\n        if (CONDITIONAL_OPERATORS.includes(conditional[0])) {\n            const conditionFn = new Function(`return ${conditionStateValue}${conditional}`);\n            return conditionFn();\n        }\n        else {\n            return conditionStateValue === conditional;\n        }\n    }\n}\n\nexport function getConditionalElementClass(ReactiveElementClass) {\n    class ConditionalElement extends ReactiveElementClass {\n\n        #conditionStateProp\n        #renderMap\n        #wasMounted = false\n\n        render(isFirstRender=false) {\n            let stateValue;\n            if (this.#conditionStateProp.indexOf('@') === 0) {\n                stateValue = this.host.getAttribute(this.#conditionStateProp.substring(1));\n            }\n            else {\n                stateValue = this.getState(this.#conditionStateProp);\n            }\n\n            if (stateValue === undefined) {\n                throw Error(`State value for ${this.#conditionStateProp} not found while rendering conditional-render element:`, this);\n            }\n            const elementsToRender = [];\n\n            this.#renderMap.forEach((elements, conditional)=> {\n                if (resolveConditional(conditional, stateValue)) {\n                    elementsToRender.push(...elements);\n                }\n            });\n\n            if (isFirstRender) {\n                this.innerHTML = \"\";\n                this.append(...elementsToRender);\n            }\n            else if (elementsToRender.length) {\n                queueConditionalRender(this, ()=> {\n                    this.innerHTML = \"\";\n                    this.append(...elementsToRender);\n                });\n            }\n        }\n        connectedCallback() {\n            this.host = this.getRootNode().host;\n            if (!this.host) {\n                throw Error(\"<conditional-render> must be used as part of a custom element template! Cannot be used outside of a custom element.\");\n            }\n            if (this.#wasMounted) return;\n            const conditionAttributeValue = this.getAttribute(\"_condition\");\n            if (!conditionAttributeValue) {\n                throw Error(\"conditional-render elements must have a _condition command attribute\");\n            }\n            if (!this.children || !this.children.length) {\n                throw Error(\"Conditional element must have children!\");\n            }\n\n            const statePropName = conditionAttributeValue;\n            this.#conditionStateProp = statePropName;\n\n            const isConditionStatic = this.#conditionStateProp.indexOf('@') === 0;\n            let stateValue, stateObject;\n            if (!isConditionStatic) {\n                [stateValue, stateObject] = this.getState(statePropName, true);\n                if (typeof stateValue === \"undefined\") {\n                    throw Error(`State property ${statePropName} not defined for _condition command!`);\n                }\n            }\n            const renderMap = new Map();\n            renderMap.set(\"always\", []);\n            const children = [...this.children];\n\n            children.forEach(conditionalChild=> {\n                const _if = conditionalChild.getAttribute('_if');\n                if (_if) {\n                    const expectedValue = attributeValueToTypedValue(_if);\n                    if (!renderMap.has(expectedValue)) renderMap.set(expectedValue, []);\n                    renderMap.get(expectedValue).push(conditionalChild);\n                }\n                else {\n                    renderMap.get(\"always\").push(conditionalChild);\n                }\n            });\n            this.#renderMap = renderMap;\n\n            if (!isConditionStatic) {\n                stateObject._stateManager.addConditionallyRenderingElements(statePropName, this);\n            }\n            this.render(true);\n            this.#wasMounted = true;\n        }\n    }\n\n    return ConditionalElement;\n}\n\n","// Convert attribute values to \"typed\" values\nexport function attributeValueToTypedValue(attrValue) {\n    let typedValue = attrValue;\n    if (attrValue === \"true\") typedValue = true;\n    else if (attrValue === \"false\") typedValue = false;\n    else if (!isNaN(Number(attrValue))) typedValue = Number(attrValue);\n    return typedValue; \n}\n\n// Check if attribute node is a \"Command\" or a \"State Attribute\" \nexport function isSpecialAttribute(attrNode) {\n    if (typeof attrNode !== \"object\" && attrNode.constructor.name !== \"Attr\") throw Error(\"Passed non Attribute to isSpecialAttribute!\");\n    return attrNode.nodeName.indexOf('_') === 0 || attrNode.nodeValue.indexOf('$') === 0;\n}","import { COMMANDS as COMMAND_ATTRIBUTES } from \"./commands.js\";\nimport { BOOLEAN_ATTRIBUTES, SUPPORTED_ATTRIBUTES_FOR_BINDING, GLOBAL_STATE_FUNCTION_NAME, DEFAULT_TEMPLATE_DOM } from \"./consts.js\";\nimport { setAttribute, setStateAttribute, setStateText } from \"./state_utils.js\";\nimport StateManager from \"./StateManager.js\";\nimport { queueActivate, queueBindEvents } from \"./paint_utils.js\";\nimport { extendElementClassWithReactiveElementClass } from './ReactiveElement.js';\n\nexport function getReactiveCustomElementClass(appScope = window) {\n    const ReactiveHTMLElement = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n    const StateManager = appScope.SPROUT_CONFIG.stateManagerClass;\n    class ReactiveCustomElement extends ReactiveHTMLElement {\n        // Should contain the \"root\" DOM element containing this element\n        host = null\n\n        #wasMounted = false\n\n        // Callback function for when the element is connected to a DOM tree on the page and rendered\n        #onMount\n        // Callback function for when the element is connected to a DOM tree on the page, just before render\n        #beforeRender\n        // Callback function for when the element is connected to a DOM tree on the page, just after render,\n        // before state/reactivity activation\n        #afterRender\n        // Should only be used on non native custom elements\n        #templateContent\n        #stylesheet\n        #globalStylesheet\n        // This will be an object where keys are element \"ref\" names,\n        // and the value is either a \"click\" event handler (if it's a function),\n        // or an object with DOM event names as keys and event handlers as functions.\n        // Only relevant for non native custom elements - event bubbling from child elements will be used\n        events\n\n        // Name of events that are bound to the main event handler function\n        #boundEventNames = [];\n        // Main event handler function \n        #eventHandler\n\n        constructor(template=null, runtimeScript, style, globalStylesheet) {\n            super();\n            const isFrameworkElement = this.tagName === \"CONDITIONAL-ELEMENT\";\n            if (isFrameworkElement) return;\n\n            if (runtimeScript) {\n                const dynamicRuntimeFn = new Function(runtimeScript.textContent);\n                const runtime = dynamicRuntimeFn();\n                this.#setRuntime(runtime);\n            }\n\n            if (style) {\n                const stylesheet = new CSSStyleSheet();\n                stylesheet.replaceSync(style);\n                this.#stylesheet = stylesheet;\n            }\n            if (globalStylesheet) {\n                this.#globalStylesheet = globalStylesheet;\n            }\n\n            this.#templateContent = \n                template?.cloneNode(true) ||\n                DEFAULT_TEMPLATE_DOM.cloneNode();\n            // Maps \"ref names\" to actual elements in the component DOM tree,\n            // for fast access.\n            this.ref = {};\n        }\n\n        #setRuntime(runtime) {\n            if (runtime.events) {\n                this.events = runtime.events;\n                if (this.isConnected) this.#bindEvents();\n            }\n            if (runtime.state) {\n                this.setInitialState(runtime.state);\n                // If this is not mounted yet, #setStateFromInitialState will be called from onConnected callback\n                if (this.isConnected) this.#setActiveStateFromInitialState();\n            }\n            if (runtime.onMount) {\n                this.#onMount = runtime.onMount;\n            }\n            if (runtime.beforeRender) {\n                this.#beforeRender = runtime.beforeRender;\n            }\n        }\n\n        setInitialState(initState) {\n            if (this.initialState) {\n                Object.assign(this.initialState, initState);\n            }\n            else {\n                this.initialState = initState;\n            }\n        }\n\n        #setActiveStateFromInitialState() {\n            if (!this.initialState) return;\n            const initialState = this.initialState;\n            if (initialState._stateManager) {\n                this.state = initialState._stateManager.state;\n            }\n            else {\n                this.state = new StateManager(initialState, undefined, undefined, false, appScope).state;\n            }\n            delete this.initialState;\n        }\n\n        #renderTemplate() {\n            if (appScope.SPROUT_CONFIG.useShadow) {\n                const shadowRoot = this.attachShadow({ mode: \"open\" });\n                this.shadowRoot.adoptedStyleSheets = [];\n                if (this.#globalStylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#globalStylesheet);\n                if (this.#stylesheet) this.shadowRoot.adoptedStyleSheets.push(this.#stylesheet);\n                shadowRoot.appendChild(this.#templateContent);\n            }\n            else {\n                const fragment = new DocumentFragment();\n                fragment.appendChild(this.#templateContent);\n                this.appendChild(fragment);\n            }\n        }\n\n        #unbindEvents() {\n            if (!this.#boundEventNames.length) return;\n            const thiselement = this;\n            this.#boundEventNames.forEach(eventName=> {\n                thiselement.removeEventListener(eventName, this.#eventHandler, false);\n            });\n\n        }\n        #bindEvents() {\n            if (!this.events) return;\n            const eventRefNames = Object.keys(this.events);\n            const clickActions = {};\n            const otherActions = {};\n            eventRefNames.forEach(refName=> {\n                const value = this.events[refName];\n                if (typeof value === 'function') {\n                    clickActions[refName] = value;\n                }\n                else if (typeof value === 'object') {\n                    const eventNames = Object.keys(value);\n                    eventNames.forEach(eventName=> {\n                        if (eventName === 'click') {\n                            clickActions[refName] = value[eventName];\n                        }\n                        else {\n                            if (!otherActions[eventName]) otherActions[eventName] = {};\n                            otherActions[eventName][refName] = value[eventName];\n                        }\n                    });\n                }\n            });\n            const globalState = appScope[GLOBAL_STATE_FUNCTION_NAME]();\n            this.#eventHandler = function(event) {\n                const start = performance.now();\n                const elementsPath = event.composedPath();\n                let target;\n                if (elementsPath) {\n                    target = elementsPath.find(element => element.hasAttribute && element.hasAttribute('ref') && (element.getAttribute('ref') in this.events));\n                }\n                else {\n                    target = (event.target.hasAttribute && event.target.hasAttribute('ref') && (event.target.getAttribute('ref') in this.events)) ? event.target : null;\n                }\n                if (target) {\n                    const ref = target.getAttribute('ref');\n                    const eventName = event.type;\n                    if (eventName === \"click\") {\n                        const clickEvent = typeof this.events[ref] === \"function\" ? this.events[ref] : null;\n                        clickEvent?.call(target, event, event.target, globalState);\n                    }\n                    else {\n                        this.events[ref][eventName]?.call(target, event, event.target, globalState);\n                    }\n                }\n            }\n\n            const thiselement = this;\n            if (Object.keys(clickActions).length) {\n                thiselement.addEventListener('click', this.#eventHandler);\n                this.#boundEventNames.push('click');\n            }\n            const eventNames = Object.keys(otherActions);\n            for (const eventName of eventNames)\n                thiselement.addEventListener(eventName, this.#eventHandler);\n            this.#boundEventNames.push(...eventNames);\n        }\n\n        disconnectedCallback() {\n            this.#unbindEvents();\n            this.state = undefined;\n        }\n\n        activate() {\n            const attributeNames = this.getAttributeNames();\n            for (const attrName of attributeNames) {\n                const attrValue = this.getAttribute(attrName);\n                // This also resolves \"State attributes\"\n                this.initialSetAttribute(attrName, attrValue);\n            }\n\n            queueBindEvents(this, ()=> this.#bindEvents());\n            if (this.#onMount) queueMicrotask(()=> this.#onMount.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]()));\n        }\n        connectedCallback() {\n            if (this.#wasMounted) return;\n            // IMPORTANT: THIS *CAN* be NULL, DO NOT CHANGE IT!\n            // It is part of the way a check is made to see if an element is part of ShadowDOM!\n            // host will be null if the element is part of the DOM === the \"root\" custom element will have null in .host\n            // THIS SHOULD BE THE FIRST THING THAT HAPPENS!\n            this.host = this.getRootNode().host;\n            if (this.#beforeRender) this.#beforeRender.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]());\n            this.#renderTemplate();\n            if (this.#afterRender) this.#afterRender.call(this, appScope[GLOBAL_STATE_FUNCTION_NAME]());\n\n            queueMicrotask(()=> {\n                this.#setActiveStateFromInitialState();\n                this.dispatchEvent(\n                    new CustomEvent(\"connected\"),\n                );\n                this.activate();\n            });\n            this.#wasMounted = true;\n        }\n    }\n\n    return ReactiveCustomElement;\n}\n","import { extendElementClassWithReactiveElementClass } from \"./ReactiveElement.js\";\nimport StateManager from \"./StateManager.js\";\nimport { GLOBAL_STATE_VAR_NAME, GLOBAL_STATE_FUNCTION_NAME, HTML_ELEMENTS_CLASSES_MAP } from \"./consts.js\";\nimport SproutBuild from '../build/index.js';\nimport { putObjectInDebugMode } from \"./debug_utils.js\";\nimport { DEBUG_MODE } from \"./consts.js\";\nimport { setHiddenProperty } from \"./prop_utils.js\";\nimport { getConditionalElementClass } from \"./ConditionalElement.js\";\nimport { getReactiveCustomElementClass } from \"./ReactiveCustomElement.js\";\n\nconst allowAppScopeAccess = document.currentScript.hasAttribute(\"allowappscopeaccess\");\nconst stateManagerClass = StateManager;\nglobalThis.SproutInitApp = function(appName) {\n    \n    let appScope = (function() { return { window, document: window?.document }})(window);\n\n    const config = {\n        useShadow: true, // Always use shadow DOM for now, may add configurability later\n        allowAppScopeAccess: allowAppScopeAccess,\n        stateManagerClass\n    }\n\n    if (config.allowAppScopeAccess) {\n        Object.defineProperty(globalThis, \"sproutApps\", {\n            value: {},\n            writable: false\n        });\n        Object.defineProperty(globalThis.sproutApps, appName, {\n            value: appScope,\n            writable: false\n        });\n        \n    }\n\n    appScope.SPROUT_CONFIG = Object.seal(config);\n\n    // Prevent \"hasOwnProperty\" shenanigans\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n    setHiddenProperty(Object.prototype, \"hasOwnProperty\", hasOwnProperty);\n\n    appScope[GLOBAL_STATE_FUNCTION_NAME] = function() {\n        return {};\n    }\n    // If initialState is passed - also sets it to global state\n    appScope.setGlobalState = function(initialState = {}) {\n        const globalState =  new appScope.SPROUT_CONFIG.stateManagerClass(initialState, undefined, undefined, true, appScope).state;\n        const globalStateVarName = GLOBAL_STATE_VAR_NAME;\n        Object.defineProperty(appScope, globalStateVarName, {\n            value: globalState,\n            writable: DEBUG_MODE ? true : false,\n            configurable: false\n        });\n        Object.defineProperty(appScope, GLOBAL_STATE_FUNCTION_NAME, {\n            value: function() {\n                return appScope[globalStateVarName];\n            },\n        });\n    };\n\n\n    const HTML_REACTIVE_ELEMENT_CLASSES = {};\n    HTML_ELEMENTS_CLASSES_MAP.forEach(elementDefinition=>\n        HTML_REACTIVE_ELEMENT_CLASSES[elementDefinition.element] = extendElementClassWithReactiveElementClass(elementDefinition.class, appScope, true)\n    );\n\n    appScope.ReactiveCustomElement = getReactiveCustomElementClass(appScope);\n\n    // Extend specific HTMLElement classes to enable reactivity (use it by adding an \"is\" attribute to an element)\n    HTML_ELEMENTS_CLASSES_MAP.forEach(itemDefinition => {\n        customElements.define(\n            `reactive-${itemDefinition.element}`, \n            // extendElementClassWithReactiveElementClass(itemDefinition.class, appScope, true),\n            HTML_REACTIVE_ELEMENT_CLASSES[itemDefinition.element],\n            { extends: itemDefinition.element });\n        }\n    );\n\n    const ReactiveHeadingClass = extendElementClassWithReactiveElementClass(HTMLHeadingElement, appScope);\n    [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].forEach(hTag=> {\n        customElements.define(`reactive-${hTag}`,\n            class extends ReactiveHeadingClass {},\n            { extends: hTag}\n        );\n\n    });\n    const ReactiveConditionalElementClass = extendElementClassWithReactiveElementClass(HTMLElement, appScope);\n    const ConditionalElementClass = getConditionalElementClass(ReactiveConditionalElementClass); \n    customElements.define('conditional-render', ConditionalElementClass);\n\n    return function() {\n        SproutBuild(appScope, appName);\n    }.bind(appScope);\n}\n\n\n\n"],"names":["BOOLEAN_ATTRIBUTES","SUPPORTED_ATTRIBUTES_FOR_BINDING","SUPPORTED_PROPERTIES_FOR_BINDING","SUPPORTED_INPUT_TYPES_FOR_VALUE_BINDING","BUILT_IN_STATE_PROPS","GLOBAL_STATE_FUNCTION_NAME","ERROR_MESSAGES","stateProp","concat","HTML_ELEMENTS_CLASSES_MAP","class","HTMLAnchorElement","element","HTMLAreaElement","HTMLAudioElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDivElement","HTMLDListElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMetaElement","HTMLMeterElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLParagraphElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLSelectElement","HTMLSourceElement","HTMLSpanElement","HTMLTableElement","HTMLTableCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLVideoElement","HTMLSlotElement","DEBUG_MODE","DEFAULT_TEMPLATE_DOM","document","createElement","NODES_STATE","nodeActionsMap","Map","eventBindingFunctions","conditionalRenders","paintRafId","eventBindRafId","conditionalRenderRafId","activateRafId","elementActivateFunctions","CONDITIONAL_OPERATORS","MAX_OPERATIONS_PER_ANIMATION_FRAME","isElementAList","tagName","queuePaint","size","cancelAnimationFrame","requestAnimationFrame","DOMActions","attributeActions","elementActions","forEach","nodeActions","node","hasOwnProperty","value","setAttribute","originalOwnerElement","hasAttribute","name","push","removeAttributeNode","setAttributeNode","nodeValue","String","textContent","replaceWith","replace","newNode","oldNode","replaceChild","_step","_iterator","_createForOfIteratorHelper","remove","values","s","n","done","_step3","_iterator3","_loop","nodeToRemove","parentNode","removeChild","err","e","f","_step2","_iterator2","append","_step4","_iterator4","_loop2","newChildElement","appendChild","resolveNodeActionsMapToDOMActions","DOMAction","doUpdateDOM","queueConditionalRender","renderFunction","set","renderFn","clear","setStateNodeAction","nodeActionsObject","nodeType","Node","ATTRIBUTE_NODE","TEXT_NODE","addAppendAction","nodeToAppend","stateIdentifier","has","Set","get","add","getNewNodeActionsObject","after","switch","hasPendingActions","this","generateStateNodeActions","stateManager","_this","state","stateNodes","stateMapElements","stateArrayMaps","conditionallyRenderingElements","stateMapArray","customElementName","parentElement","stateMapNodeActions","currentStateMapArrayIndex","isParentAList","children","length","Array","prototype","call","childElement","currentIndex","_stateItem","customElement","firstElementChild","elementToRemove","stateItem","replaceWithChild","stateToElement","undefined","oldElement","newElement","addReplaceAction","i","len","newChild","render","setHiddenProperty","obj","propName","propValue","enumerable","arguments","Object","defineProperty","configurable","writable","HTMLElement","globalThis","attrName","attrValue","includes","removeAttribute","elementSetAttribute","setStateAttribute","equalityValue","indexOf","colonIndex","Error","substring","_this$getState2","_slicedToArray","getState","stateVal","theState","conditionalStateProp","originalStateProp","_stateManager","addStateDependency","valueToSet","stateAttrNode","createAttribute","addStateNode","setStateText","_this$getState4","textNode","createTextNode","stateObject","elemName","wrapInElement","returnElement","customElementInstance","setInitialState","handleStateChange","stateDependencies","depStateProp","setStateProp","func","_global","globalStateDependencies","depStateProps","depStateManager","depState","mapStateToElements","stateItemsPropertyName","_parentElement$getSta2","stateItemsArray","isArray","elements","stateItems","map","_typeof","mapStateArrayToElements","innerHTML","apply","_toConsumableArray","COMMANDS","commandValue","_commandValue$split2","split","addStateMap","text","initialSetText","bind","_commandValue$split4","attributeName","statePropName","bindAttributeToState","getAttribute","addEventListener","updateStateFromProperty","extendElementClassWithReactiveElementClass","elementClass","appScope","window","_changeEventHandler","WeakMap","_wasMounted","_boundAttributesToState","_ReactiveElement_brand","WeakSet","ReactiveElement","_elementClass","_classCallCheck","_len","args","_key","_callSuper","_defineProperty","_classPrivateFieldInitSpec","_inherits","key","_classPrivateFieldGet","propertyName","newValue","stateValue","_this$host","removeEventListener","host","ref","thisRefName","events","_classPrivateFieldSet","_this2","changeEvent","Event","bubbles","composed","dispatchEvent","commands","getAttributeNames","initialSetAttribute","command","_ref","_COMMAND_ATTRIBUTES$c","COMMAND_ATTRIBUTES","_this3","getRootNode","activate","queueMicrotask","oldValue","isConnected","refValue","isNativeElement","_assertClassBrand","_updateStateFromAttribute","_thisInstance$state","returnStateObject","thisInstance","_globalState","globalState","_thisInstance$state2","refName","root","SPROUT_CONFIG","useShadow","shadowRoot","querySelector","attributeValue","keys","toLowerCase","StatefulArray","_Array","initialArray","parentStateObject","arrayStateProp","noConvertToStateItems","StateManager","stateManagerClass","statefulArray","rawArray","item","index","_possibleConstructorReturn","Proxy","StatefulArrayHandler","_get2","$$operation","result","_get","_getPrototypeOf","_get3","_len2","_key2","_get4","_len3","_key3","_get5","_len4","_key4","_get6","_len5","_key5","_get7","_len6","_key6","_get8","_len7","_key7","_get9","_len8","_key8","Symbol","species","_wrapNativeSuper","parentStateManager","targetArray","property","setResult","Reflect","setDirtyProp","Number","isNaN","doStateChangeHandle","receiver","StateObjectValueHandler","rootStateObj","objPropertyName","targetObj","descriptor","_value$","definePropertyResult","StateHandler","stateObj","targetState","_targetState","_binding","origTargetState","dependencies","target","_gettingDependenciesFor","_localStateManager","_value$2","depProp","dep","addGlobalStateDependency","originalProperty","_handleStateChangeRAF_ID","initialState","parentStateProp","isGlobal","_populate","descrp","descriptors","getOwnPropertyDescriptors","defineProperties","populateStateFromInitialState","prop","dirtyProps","handleStateChanges","stateProps","_element$host","originalParentElement","stateNode","isBooleanStateProp","setAndBindStateProperty","isNegationProp","getOwnPropertyDescriptor","isValueProp","negateStateProp","privateState","_regeneratorRuntime","t","r","o","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","construct","Boolean","valueOf","_setPrototypeOf","asyncGeneratorStep","appName","_defineCustomElementFromTemplate","_callee","template","globalStylesheet","templateContent","style","runtime","_context","importNode","content","customElements","_appScope$ReactiveCus","_class","ReactiveCustomElement","_next","_throw","globalStyle","CSSStyleSheet","replaceSync","querySelectorAll","_x","_x2","_x3","defineCustomElementFromTemplate","getConditionalElementClass","ReactiveElementClass","_conditionStateProp","_renderMap","ConditionalElement","_ReactiveElementClass","isFirstRender","elementsToRender","conditional","conditionStateValue","Function","conditionFn","resolveConditional","conditionAttributeValue","isConditionStatic","renderMap","conditionalChild","typedValue","_if","expectedValue","addConditionallyRenderingElements","getReactiveCustomElementClass","ReactiveHTMLElement","_onMount","_beforeRender","_afterRender","_templateContent","_stylesheet","_globalStylesheet","_boundEventNames","_eventHandler","_ReactiveCustomElement_brand","_ReactiveHTMLElement","runtimeScript","_classPrivateMethodInitSpec","dynamicRuntimeFn","_setRuntime","stylesheet","cloneNode","initState","assign","_unbindEvents","bindFunction","_bindEvents","bindFn","_renderTemplate","_setActiveStateFromInitialState","CustomEvent","onMount","beforeRender","attachShadow","mode","adoptedStyleSheets","fragment","DocumentFragment","_this4","thiselement","eventName","_classPrivateFieldGet2","_this5","eventRefNames","clickActions","otherActions","event","_this6","elementsPath","performance","now","composedPath","find","clickEvent","_this$events$ref$even","eventNames","_i","_eventNames2","allowAppScopeAccess","currentScript","SproutInitApp","_window","config","sproutApps","seal","setGlobalState","globalStateVarName","HTML_REACTIVE_ELEMENT_CLASSES","elementDefinition","itemDefinition","extends","ReactiveHeadingClass","HTMLHeadingElement","hTag","_ReactiveHeadingClass","ConditionalElementClass","SproutBuild"],"sourceRoot":""}
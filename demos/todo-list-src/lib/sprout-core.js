/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/ReactiveElement.js":
/*!*************************************!*\
  !*** ./src/core/ReactiveElement.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendElementClassWithReactiveElementClass: () => (/* binding */ extendElementClassWithReactiveElementClass)\n/* harmony export */ });\n/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commands */ \"./src/core/commands.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\n\nvar setAttribute = HTMLElement.prototype.setAttribute;\nfunction extendElementClassWithReactiveElementClass(elementClass) {\n  var noRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var _templateContent = /*#__PURE__*/new WeakMap();\n  var _events = /*#__PURE__*/new WeakMap();\n  var _ReactiveElement_brand = /*#__PURE__*/new WeakSet();\n  var ReactiveElement = /*#__PURE__*/function (_elementClass) {\n    function ReactiveElement() {\n      var _this;\n      var template = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var runtimeScript = arguments.length > 1 ? arguments[1] : undefined;\n      _classCallCheck(this, ReactiveElement);\n      _this = _callSuper(this, ReactiveElement);\n      _classPrivateMethodInitSpec(_this, _ReactiveElement_brand);\n      _classPrivateFieldInitSpec(_this, _templateContent, document.createElement(\"div\"));\n      _classPrivateFieldInitSpec(_this, _events, void 0);\n      _defineProperty(_this, \"state\", {});\n      _defineProperty(_this, \"host\", null);\n      var scriptDoc = new DocumentFragment();\n      scriptDoc.appendChild(runtime);\n      /*\n      if (events) {\n          this.#events = events\n      }\n      if (initialState) {\n          this.initialState = initialState;\n      }\n      */\n      if (template) {\n        _classPrivateFieldSet(_templateContent, _this, template.content.cloneNode(true));\n        /*\n        const stateProps = template.getAttributeNames()\n                           .filter(attrName=> attrName.startsWith(\"state-\"))\n                           .map(attrName=> attrName.substring(6));\n        if (stateProps && stateProps.length) {\n            for (let prop of stateProps) {\n                this.state[prop] = template.getAttribute(prop);\n            }\n        }\n        */\n      }\n      if (runtimePath) {\n        _this.loadRuntime(runtimePath);\n      }\n      return _this;\n    }\n    _inherits(ReactiveElement, _elementClass);\n    return _createClass(ReactiveElement, [{\n      key: \"loadRuntime\",\n      value: function () {\n        var _loadRuntime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(runtimePath) {\n          var runtime;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import( /* webpackIgnore: true */runtimePath);\n              case 2:\n                runtime = _context.sent;\n                _assertClassBrand(_ReactiveElement_brand, this, _setRuntime).call(this, runtime);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function loadRuntime(_x) {\n          return _loadRuntime.apply(this, arguments);\n        }\n        return loadRuntime;\n      }()\n    }, {\n      key: \"setStateBeforeMount\",\n      value: function setStateBeforeMount(state) {\n        this.state = state; // Object.assign (this.state, state);\n      }\n    }, {\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        if (!this.isConnected) {\n          console.log(\"UNMOUNT\");\n          return;\n        }\n        var parent = this.getRootNode().host;\n        if (parent) {\n          /*\n          let attrVal;\n          INHERITED_ATTRIBUTE_NAMES.forEach(attrName => {\n              attrVal = parent.getAttribute(attrName);\n              if (attrVal !== undefined) {\n                  this.setAttribute(attrName, attrVal);\n                  if (attrName === '_statepropertyname') {\n                      COMMAND_ATTRIBUTES['statepropertyname'].call(this, attrVal);\n                  }\n              }\n          });\n          */\n          this.host = parent;\n        }\n        var _iterator = _createForOfIteratorHelper(this.getAttributeNames()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var attrName = _step.value;\n            var attrValue = this.getAttribute(attrName);\n            console.log(\"Attribute \".concat(attrName, \": \").concat(attrValue));\n            this.initialSetAttribute(attrName, attrValue);\n            if (attrName.indexOf('_') === 0) {\n              var _COMMAND_ATTRIBUTES$c;\n              var command = attrName.substring(1);\n              (_COMMAND_ATTRIBUTES$c = _commands__WEBPACK_IMPORTED_MODULE_0__.COMMANDS[command]) === null || _COMMAND_ATTRIBUTES$c === void 0 || _COMMAND_ATTRIBUTES$c.call(this, attrValue);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _assertClassBrand(_ReactiveElement_brand, this, _setStateFromInitialState).call(this);\n        if (!noRender) _assertClassBrand(_ReactiveElement_brand, this, _renderTemplate).call(this);\n        _assertClassBrand(_ReactiveElement_brand, this, _bindEvents).call(this);\n      }\n    }, {\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(attributeName, oldValue, newValue) {\n        console.log(\"PROP \" + attributeName + \" changed from \" + oldValue + \" to \" + newValue);\n        /*\n        if (attributeName.indexOf('_') === 0) {\n            const command = attributeName.substring(1);\n            COMMAND_ATTRIBUTES[command]?.call(this, newValue);\n        }\n        */\n      }\n    }, {\n      key: \"getState\",\n      value: function getState(stateProp) {\n        var _this$host, _thisinstance$state;\n        var thestate;\n        // If this is a reactive element inside a reactive web component - the host should be the containing web component - \n        // we should reference its state, if host is null - it is most likely the host web component\n        var thisinstance = (_this$host = this.host) !== null && _this$host !== void 0 ? _this$host : this;\n        var stateVal = (_thisinstance$state = thisinstance.state) === null || _thisinstance$state === void 0 ? void 0 : _thisinstance$state[stateProp];\n        while ((stateVal === undefined || stateVal === null) && thisinstance.host !== null) {\n          var _thisinstance$state2;\n          thisinstance = thisinstance.host;\n          stateVal = (_thisinstance$state2 = thisinstance.state) === null || _thisinstance$state2 === void 0 ? void 0 : _thisinstance$state2[stateProp];\n        }\n        if (stateVal !== undefined && stateVal !== null) thestate = thisinstance.state;else {\n          var _globalThis$state;\n          stateVal = (_globalThis$state = globalThis.state) === null || _globalThis$state === void 0 ? void 0 : _globalThis$state[stateProp];\n          if (stateVal !== undefined && stateVal !== null) thestate = globalThis.state;\n        }\n        console.log(\"State val: \" + stateVal);\n        return [stateVal, thestate];\n      }\n\n      //static get observedAttributes() { return [\"todo-name\"]; }\n    }]);\n  }(elementClass);\n  function _setRuntime(runtime) {\n    if (runtime.events) {\n      _classPrivateFieldSet(_events, this, runtime.events);\n      if (this.isConnected) _assertClassBrand(_ReactiveElement_brand, this, _bindEvents).call(this);\n    }\n    if (runtime.initialState) {\n      this.initialState = runtime.initialState;\n      if (this.isConnected) _assertClassBrand(_ReactiveElement_brand, this, _setStateFromInitialState).call(this);\n    }\n  }\n  function _setStateFromInitialState() {\n    if (!this.initialState) return;\n    for (var _i = 0, _Object$entries = Object.entries(this.initialState); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      this.state[key] = value;\n    }\n    delete this.initialState;\n  }\n  function _renderTemplate() {\n    if (SPROUT_CONFIG.useShadow) {\n      this.attachShadow({\n        mode: 'open'\n      }).appendChild(_classPrivateFieldGet(_templateContent, this));\n    } else {\n      var fragment = new DocumentFragment();\n      fragment.appendChild(_classPrivateFieldGet(_templateContent, this));\n      this.appendChild(fragment);\n    }\n  }\n  function _bindEvents() {\n    var _this2 = this;\n    if (!_classPrivateFieldGet(_events, this)) return;\n    var eventRefNames = Object.keys(_classPrivateFieldGet(_events, this));\n    var clickActions = {};\n    var otherActions = {};\n    eventRefNames.forEach(function (refName) {\n      var value = _classPrivateFieldGet(_events, _this2)[refName];\n      if (typeof value === 'function') {\n        clickActions[refName] = value;\n      } else if (_typeof(value) === 'object') {\n        var _eventNames = Object.keys(value);\n        _eventNames.forEach(function (eventName) {\n          if (eventName === 'click') {\n            clickActions[refName] = value[eventName];\n          } else {\n            if (!otherActions[eventName]) otherActions[eventName] = {};\n            otherActions[eventName][refName] = value[eventName];\n          }\n        });\n      }\n    });\n    var clickRefNames = Object.keys(clickActions);\n    function eventHandler(event, eventsObject, refNames) {\n      var elementsPath = event.composedPath();\n      var target;\n      if (elementsPath) {\n        target = elementsPath.find(function (element) {\n          return element.hasAttribute && element.hasAttribute('ref') && refNames.includes(element.getAttribute('ref'));\n        });\n      } else {\n        target = event.target.hasAttribute && event.target.hasAttribute('ref') && refNames.includes(event.target.getAttribute('ref')) ? event.target : null;\n      }\n      if (target) {\n        var ref = target.getAttribute('ref');\n        eventsObject[ref].call(target, event, event.target);\n      }\n    }\n    this.addEventListener('click', function (event) {\n      eventHandler(event, clickActions, clickRefNames);\n    }, false);\n    var eventNames = Object.keys(otherActions);\n    var _loop = function _loop() {\n      var eventName = _eventNames2[_i2];\n      var eventRefNames = Object.keys(otherActions[eventName]);\n      _this2.addEventListener(eventName, function (event) {\n        eventHandler(event, otherActions, eventRefNames);\n      }, false);\n    };\n    for (var _i2 = 0, _eventNames2 = eventNames; _i2 < _eventNames2.length; _i2++) {\n      _loop();\n    }\n  }\n  _defineProperty(ReactiveElement, \"observedAttributes\", Object.keys(_commands__WEBPACK_IMPORTED_MODULE_0__.COMMANDS).map(function (command) {\n    return '_' + command.toLowerCase();\n  }));\n  ReactiveElement.prototype.initialSetAttribute = function (attributeName, attributeValue) {\n    console.log(\"Setting attribute \".concat(attributeName, \" to \").concat(attributeValue));\n    attributeValue = String(attributeValue);\n    var valueToSet = attributeValue;\n    if (attributeValue.indexOf('$') === 0 && attributeName.indexOf('_') !== 0) {\n      var stateProp = attributeValue.substring(1);\n      var _this$getState = this.getState(stateProp),\n        _this$getState2 = _slicedToArray(_this$getState, 2),\n        stateVal = _this$getState2[0],\n        thestate = _this$getState2[1];\n      console.log(\"State val: \" + stateVal);\n      if (stateVal !== undefined && stateVal !== null) valueToSet = stateVal;\n      if (!thestate) return;\n      // Bind state set to attribute set\n      if (!thestate.ATTRIBUTES_statePropToElementsMap) thestate.ATTRIBUTES_statePropToElementsMap = {};\n      if (!thestate.ATTRIBUTES_statePropToElementsMap[stateProp]) thestate.ATTRIBUTES_statePropToElementsMap[stateProp] = [];\n      thestate.ATTRIBUTES_statePropToElementsMap[stateProp].push({\n        element: this,\n        attributeName: attributeName\n      });\n      if (thestate['$' + stateProp] === undefined) {\n        // Prop names with dollar signs are the \"private\" props in state\n        thestate['$' + stateProp] = valueToSet;\n        Object.defineProperty(thestate, stateProp, {\n          set: function set(value) {\n            var _thestate$ATTRIBUTES_, _thestate$TEXT_stateP;\n            var currentVal = this['$' + stateProp];\n            if (value === currentVal) return;\n            this['$' + stateProp] = value;\n            (_thestate$ATTRIBUTES_ = thestate.ATTRIBUTES_statePropToElementsMap) === null || _thestate$ATTRIBUTES_ === void 0 || (_thestate$ATTRIBUTES_ = _thestate$ATTRIBUTES_[stateProp]) === null || _thestate$ATTRIBUTES_ === void 0 || _thestate$ATTRIBUTES_.forEach(function (_ref) {\n              var element = _ref.element,\n                attributeName = _ref.attributeName;\n              setAttribute.call(element, attributeName, value);\n              if (attributeName === 'checked') {\n                element.checked = value;\n              }\n              // doSetAttribute.call(element, attributeName, valueToSet)\n            });\n            (_thestate$TEXT_stateP = thestate.TEXT_statePropToElementsMap) === null || _thestate$TEXT_stateP === void 0 || (_thestate$TEXT_stateP = _thestate$TEXT_stateP[stateProp]) === null || _thestate$TEXT_stateP === void 0 || _thestate$TEXT_stateP.forEach(function (element) {\n              return element.textContent = value;\n            });\n          },\n          get: function get() {\n            return this['$' + stateProp];\n          },\n          enumerable: true\n        });\n      }\n    }\n    console.log(\"Setting \".concat(attributeName, \" to \").concat(valueToSet));\n    if (attributeName === 'checked' && valueToSet === false) {\n      this.removeAttribute('checked');\n    } else {\n      setAttribute.call(this, attributeName, valueToSet);\n    }\n  };\n  return ReactiveElement;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/ReactiveElement.js\n");

/***/ }),

/***/ "./src/core/commands.js":
/*!******************************!*\
  !*** ./src/core/commands.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMMANDS: () => (/* binding */ COMMANDS)\n/* harmony export */ });\n/* harmony import */ var _state_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state_utils */ \"./src/core/state_utils.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\nvar SUPPORTED_INPUT_TYPES_FOR_BINDING = ['text', 'color', 'date', 'datetime-local', 'email', 'month', 'number', 'password', 'range', 'search', 'tel', 'time', 'url', 'week'];\nvar COMMANDS = {\n  map: function map(commandValue) {\n    console.log(\"Mapping: \" + commandValue);\n    var colon = commandValue.indexOf(':');\n    var stateItemsPropertyName = commandValue.substring(0, colon);\n    var stateItemsArray = globalThis.state[stateItemsPropertyName];\n    if (!stateItemsArray || !Array.isArray(stateItemsArray)) {\n      console.warn(\"state value for _map is not an array, in state property: \" + stateItemsPropertyName);\n      return;\n    }\n    var customElementName = commandValue.substring(colon + 1);\n    var elements = (0,_state_utils__WEBPACK_IMPORTED_MODULE_0__.mapStateArrayToElements)(stateItemsArray, customElementName);\n    var thiselement = this;\n    if (elements.length) thiselement.append.apply(thiselement, _toConsumableArray(elements));\n    globalThis.state[stateItemsPropertyName] = new Proxy(stateItemsArray, {\n      set: function set(arr, index, value) {\n        var setResult = Reflect.set.apply(Reflect, arguments);\n        if (setResult && index !== \"length\") {\n          var customElement = (0,_state_utils__WEBPACK_IMPORTED_MODULE_0__.stateToElement)(value, customElementName, \"\".concat(stateItemsPropertyName, \":\").concat(index));\n          if (customElement) thiselement.appendChild(customElement);\n        }\n        return setResult;\n      },\n      deleteProperty: function deleteProperty(arr, index) {\n        var deleteResult = Reflect.deleteProperty(arr, Number(index));\n        if (deleteResult) {\n          var elementState = arr[Number(index)];\n          if (elementState.key) document.querySelector(\"[key=\".concat(elementState.key, \"]\")).remove();\n        }\n      }\n    });\n  },\n  text: function text(commandValue) {\n    console.log(\"assigning text\");\n    var stateProp = commandValue;\n    var _this$getState = this.getState(stateProp),\n      _this$getState2 = _slicedToArray(_this$getState, 2),\n      textValue = _this$getState2[0],\n      thestate = _this$getState2[1];\n    if (!textValue) return;\n    this.textContent = textValue;\n    // Bind state set to textContent set\n    if (!thestate.TEXT_statePropToElementsMap) thestate.TEXT_statePropToElementsMap = {};\n    if (!thestate.TEXT_statePropToElementsMap[stateProp]) thestate.TEXT_statePropToElementsMap[stateProp] = [];\n    thestate.TEXT_statePropToElementsMap[stateProp].push(this);\n    thestate[stateProp] = textValue;\n  },\n  bind: function bind(commandValue) {\n    if (this.tagName !== \"INPUT\" && this.tagName !== \"TEXTAREA\") return;\n    var type = this.getAttribute('type') || 'text';\n    var stateProp = commandValue;\n    var _this$getState3 = this.getState(stateProp),\n      _this$getState4 = _slicedToArray(_this$getState3, 2),\n      stateValue = _this$getState4[0],\n      thestate = _this$getState4[1];\n    if (stateValue === undefined) return;\n    if (SUPPORTED_INPUT_TYPES_FOR_BINDING.includes(type)) {\n      this.addEventListener('input', function () {\n        thestate[stateProp] = this.value;\n      });\n    } else if (type === \"checkbox\") {\n      this.addEventListener('input', function () {\n        thestate[stateProp] = this.checked;\n        this.setAttribute('checked', this.checked);\n      });\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/commands.js\n");

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ReactiveElement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReactiveElement */ \"./src/core/ReactiveElement.js\");\n\n(function () {\n  var config;\n  if (document.currentScript) {\n    config = {\n      useShadow: document.currentScript.getAttribute('useShadow') !== \"false\" ? true : false\n    };\n  } else {\n    config = {\n      useShadow: true\n    };\n  }\n  window.SPROUT_CONFIG = Object.seal(config);\n  window.ReactiveElement = (0,_ReactiveElement__WEBPACK_IMPORTED_MODULE_0__.extendElementClassWithReactiveElementClass)(HTMLElement);\n\n  // Extend specific HTMLElement classes to enable reactivity\n  [{\n    \"class\": HTMLDivElement,\n    element: \"div\"\n  }, {\n    \"class\": HTMLSpanElement,\n    element: \"span\"\n  }, {\n    \"class\": HTMLLabelElement,\n    element: \"label\"\n  }, {\n    \"class\": HTMLInputElement,\n    element: \"input\"\n  }, {\n    \"class\": HTMLUListElement,\n    element: \"ul\"\n  }].forEach(function (itemDefinition) {\n    return customElements.define(\"reactive-\".concat(itemDefinition.element), (0,_ReactiveElement__WEBPACK_IMPORTED_MODULE_0__.extendElementClassWithReactiveElementClass)(itemDefinition[\"class\"], true), {\n      \"extends\": itemDefinition.element\n    });\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOztBQUErRTtBQUcvRSxDQUFDLFlBQVc7RUFFUixJQUFJQyxNQUFNO0VBRVYsSUFBSUMsUUFBUSxDQUFDQyxhQUFhLEVBQUU7SUFDeEJGLE1BQU0sR0FBRztNQUNMRyxTQUFTLEVBQUVGLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDRSxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssT0FBTyxHQUFHLElBQUksR0FBRztJQUNyRixDQUFDO0VBQ0wsQ0FBQyxNQUNJO0lBQ0RKLE1BQU0sR0FBRztNQUNMRyxTQUFTLEVBQUU7SUFDZixDQUFDO0VBQ0w7RUFFQUUsTUFBTSxDQUFDQyxhQUFhLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDUixNQUFNLENBQUM7RUFFMUNLLE1BQU0sQ0FBQ0ksZUFBZSxHQUFHViw0RkFBMEMsQ0FBQ1csV0FBVyxDQUFDOztFQUVoRjtFQUNBLENBQ0k7SUFBRSxTQUFPQyxjQUFjO0lBQUVDLE9BQU8sRUFBRTtFQUFNLENBQUMsRUFDekM7SUFBRSxTQUFPQyxlQUFlO0lBQUVELE9BQU8sRUFBRTtFQUFPLENBQUMsRUFDM0M7SUFBRSxTQUFPRSxnQkFBZ0I7SUFBRUYsT0FBTyxFQUFFO0VBQVEsQ0FBQyxFQUM3QztJQUFFLFNBQU9HLGdCQUFnQjtJQUFFSCxPQUFPLEVBQUU7RUFBUSxDQUFDLEVBQzdDO0lBQUUsU0FBT0ksZ0JBQWdCO0lBQUVKLE9BQU8sRUFBRTtFQUFLLENBQUMsQ0FDN0MsQ0FBQ0ssT0FBTyxDQUFDLFVBQUFDLGNBQWM7SUFBQSxPQUNwQkMsY0FBYyxDQUFDQyxNQUFNLGFBQUFDLE1BQUEsQ0FDTEgsY0FBYyxDQUFDTixPQUFPLEdBQ2xDYiw0RkFBMEMsQ0FBQ21CLGNBQWMsU0FBTSxFQUFFLElBQUksQ0FBQyxFQUN0RTtNQUFFLFdBQVNBLGNBQWMsQ0FBQ047SUFBUSxDQUFDLENBQUM7RUFBQSxDQUU1QyxDQUFDO0FBQ0wsQ0FBQyxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcHJvdXRqcy8uL3NyYy9jb3JlL2luZGV4LmpzP2M3YjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0ZW5kRWxlbWVudENsYXNzV2l0aFJlYWN0aXZlRWxlbWVudENsYXNzIH0gZnJvbSBcIi4vUmVhY3RpdmVFbGVtZW50XCI7XG5cblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgbGV0IGNvbmZpZztcblxuICAgIGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KSB7XG4gICAgICAgIGNvbmZpZyA9IHtcbiAgICAgICAgICAgIHVzZVNoYWRvdzogZG9jdW1lbnQuY3VycmVudFNjcmlwdC5nZXRBdHRyaWJ1dGUoJ3VzZVNoYWRvdycpICE9PSBcImZhbHNlXCIgPyB0cnVlIDogZmFsc2VcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uZmlnID0ge1xuICAgICAgICAgICAgdXNlU2hhZG93OiB0cnVlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB3aW5kb3cuU1BST1VUX0NPTkZJRyA9IE9iamVjdC5zZWFsKGNvbmZpZyk7XG5cbiAgICB3aW5kb3cuUmVhY3RpdmVFbGVtZW50ID0gZXh0ZW5kRWxlbWVudENsYXNzV2l0aFJlYWN0aXZlRWxlbWVudENsYXNzKEhUTUxFbGVtZW50KTtcblxuICAgIC8vIEV4dGVuZCBzcGVjaWZpYyBIVE1MRWxlbWVudCBjbGFzc2VzIHRvIGVuYWJsZSByZWFjdGl2aXR5XG4gICAgW1xuICAgICAgICB7IGNsYXNzOiBIVE1MRGl2RWxlbWVudCwgZWxlbWVudDogXCJkaXZcIiB9LFxuICAgICAgICB7IGNsYXNzOiBIVE1MU3BhbkVsZW1lbnQsIGVsZW1lbnQ6IFwic3BhblwiIH0sXG4gICAgICAgIHsgY2xhc3M6IEhUTUxMYWJlbEVsZW1lbnQsIGVsZW1lbnQ6IFwibGFiZWxcIiB9LFxuICAgICAgICB7IGNsYXNzOiBIVE1MSW5wdXRFbGVtZW50LCBlbGVtZW50OiBcImlucHV0XCIgfSxcbiAgICAgICAgeyBjbGFzczogSFRNTFVMaXN0RWxlbWVudCwgZWxlbWVudDogXCJ1bFwiIH1cbiAgICBdLmZvckVhY2goaXRlbURlZmluaXRpb24gPT4gXG4gICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZShcbiAgICAgICAgICAgIGByZWFjdGl2ZS0ke2l0ZW1EZWZpbml0aW9uLmVsZW1lbnR9YCwgXG4gICAgICAgICAgICBleHRlbmRFbGVtZW50Q2xhc3NXaXRoUmVhY3RpdmVFbGVtZW50Q2xhc3MoaXRlbURlZmluaXRpb24uY2xhc3MsIHRydWUpLFxuICAgICAgICAgICAgeyBleHRlbmRzOiBpdGVtRGVmaW5pdGlvbi5lbGVtZW50IH0pXG4gICAgICAgIFxuICAgICk7XG59KSgpO1xuXG4iXSwibmFtZXMiOlsiZXh0ZW5kRWxlbWVudENsYXNzV2l0aFJlYWN0aXZlRWxlbWVudENsYXNzIiwiY29uZmlnIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0IiwidXNlU2hhZG93IiwiZ2V0QXR0cmlidXRlIiwid2luZG93IiwiU1BST1VUX0NPTkZJRyIsIk9iamVjdCIsInNlYWwiLCJSZWFjdGl2ZUVsZW1lbnQiLCJIVE1MRWxlbWVudCIsIkhUTUxEaXZFbGVtZW50IiwiZWxlbWVudCIsIkhUTUxTcGFuRWxlbWVudCIsIkhUTUxMYWJlbEVsZW1lbnQiLCJIVE1MSW5wdXRFbGVtZW50IiwiSFRNTFVMaXN0RWxlbWVudCIsImZvckVhY2giLCJpdGVtRGVmaW5pdGlvbiIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/index.js\n");

/***/ }),

/***/ "./src/core/state_utils.js":
/*!*********************************!*\
  !*** ./src/core/state_utils.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapStateArrayToElements: () => (/* binding */ mapStateArrayToElements),\n/* harmony export */   stateToElement: () => (/* binding */ stateToElement)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction stateToElement(stateObject, elemName) {\n  var customElementInstance = document.createElement(elemName);\n  customElementInstance.setStateBeforeMount(stateObject);\n  for (var _i = 0, _Object$keys = Object.keys(stateObject); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    customElementInstance.initialSetAttribute(key, '$' + key); // stateObject[key]);\n  }\n  return customElementInstance;\n}\nfunction mapStateArrayToElements(stateItems, elemName) {\n  return stateItems.map(function (stateItem) {\n    if (_typeof(stateItem) !== 'object') {\n      console.warn(\"item in State array for _map is not an object: \", stateItem);\n      return {};\n    }\n    return stateToElement(stateItem, elemName);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9zdGF0ZV91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxTQUFTQSxjQUFjQSxDQUFDQyxXQUFXLEVBQUVDLFFBQVEsRUFBRTtFQUNsRCxJQUFNQyxxQkFBcUIsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUNILFFBQVEsQ0FBQztFQUM5REMscUJBQXFCLENBQUNHLG1CQUFtQixDQUFDTCxXQUFXLENBQUM7RUFDdEQsU0FBQU0sRUFBQSxNQUFBQyxZQUFBLEdBQWdCQyxNQUFNLENBQUNDLElBQUksQ0FBQ1QsV0FBVyxDQUFDLEVBQUFNLEVBQUEsR0FBQUMsWUFBQSxDQUFBRyxNQUFBLEVBQUFKLEVBQUEsSUFBRTtJQUFyQyxJQUFJSyxHQUFHLEdBQUFKLFlBQUEsQ0FBQUQsRUFBQTtJQUNSSixxQkFBcUIsQ0FBQ1UsbUJBQW1CLENBQUNELEdBQUcsRUFBRSxHQUFHLEdBQUNBLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDN0Q7RUFDQSxPQUFPVCxxQkFBcUI7QUFDaEM7QUFDTyxTQUFTVyx1QkFBdUJBLENBQUNDLFVBQVUsRUFBRWIsUUFBUSxFQUFFO0VBQzFELE9BQU9hLFVBQVUsQ0FBQ0MsR0FBRyxDQUFDLFVBQUFDLFNBQVMsRUFBSTtJQUMvQixJQUFJQyxPQUFBLENBQU9ELFNBQVMsTUFBSyxRQUFRLEVBQUU7TUFDL0JFLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGlEQUFpRCxFQUFFSCxTQUFTLENBQUM7TUFDMUUsT0FBTyxDQUFDLENBQUM7SUFDYjtJQUNBLE9BQU9qQixjQUFjLENBQUNpQixTQUFTLEVBQUVmLFFBQVEsQ0FBQztFQUM5QyxDQUFDLENBQUM7QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL3Nwcm91dGpzLy4vc3JjL2NvcmUvc3RhdGVfdXRpbHMuanM/M2NlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3RhdGVUb0VsZW1lbnQoc3RhdGVPYmplY3QsIGVsZW1OYW1lKSB7XG4gICAgY29uc3QgY3VzdG9tRWxlbWVudEluc3RhbmNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbGVtTmFtZSk7XG4gICAgY3VzdG9tRWxlbWVudEluc3RhbmNlLnNldFN0YXRlQmVmb3JlTW91bnQoc3RhdGVPYmplY3QpO1xuICAgIGZvciAobGV0IGtleSBvZiBPYmplY3Qua2V5cyhzdGF0ZU9iamVjdCkpIHtcbiAgICAgICAgY3VzdG9tRWxlbWVudEluc3RhbmNlLmluaXRpYWxTZXRBdHRyaWJ1dGUoa2V5LCAnJCcra2V5KTsgLy8gc3RhdGVPYmplY3Rba2V5XSk7XG4gICAgfVxuICAgIHJldHVybiBjdXN0b21FbGVtZW50SW5zdGFuY2U7XG59XG5leHBvcnQgZnVuY3Rpb24gbWFwU3RhdGVBcnJheVRvRWxlbWVudHMoc3RhdGVJdGVtcywgZWxlbU5hbWUpIHtcbiAgICByZXR1cm4gc3RhdGVJdGVtcy5tYXAoc3RhdGVJdGVtID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdGF0ZUl0ZW0gIT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJpdGVtIGluIFN0YXRlIGFycmF5IGZvciBfbWFwIGlzIG5vdCBhbiBvYmplY3Q6IFwiLCBzdGF0ZUl0ZW0pO1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdGF0ZVRvRWxlbWVudChzdGF0ZUl0ZW0sIGVsZW1OYW1lKTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJzdGF0ZVRvRWxlbWVudCIsInN0YXRlT2JqZWN0IiwiZWxlbU5hbWUiLCJjdXN0b21FbGVtZW50SW5zdGFuY2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRTdGF0ZUJlZm9yZU1vdW50IiwiX2kiLCJfT2JqZWN0JGtleXMiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwia2V5IiwiaW5pdGlhbFNldEF0dHJpYnV0ZSIsIm1hcFN0YXRlQXJyYXlUb0VsZW1lbnRzIiwic3RhdGVJdGVtcyIsIm1hcCIsInN0YXRlSXRlbSIsIl90eXBlb2YiLCJjb25zb2xlIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/state_utils.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/core/index.js");
/******/ 	
/******/ })()
;